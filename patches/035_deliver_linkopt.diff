Index: oo_cvs_641/solenv/bin/deliver.pl
===================================================================
RCS file: /cvs/tools/solenv/bin/deliver.pl,v
retrieving revision 1.17.4.3
diff -u -3 -p -r1.17.4.3 deliver.pl
--- oo_cvs_641/solenv/bin/deliver.pl	7 Jan 2003 15:21:51 -0000	1.17.4.3
+++ oo_cvs_641/solenv/bin/deliver.pl	10 Feb 2003 14:07:13 -0000
@@ -124,6 +124,8 @@ $opt_force          = 0;            # op
 $opt_minor          = 0;            # option deliver in minor
 $opt_check          = 0;            # do actually execute any action
 $opt_zip            = 0;            # create an additional zip file
+$opt_link           = 0;            # hard link files into the solver to save disk space
+$opt_deloutput      = 0;            # delete the output tree for the project once successfully delivered
 
 # zip is default for RE
 $opt_zip = 1 if ( defined($ENV{UPDATER}) && $ENV{UPDATER} eq 'YES' && !defined($ENV{BUILD_SOSL}) );
@@ -147,6 +149,7 @@ parse_dlst();
 walk_action_data();
 walk_hedabu_list();
 zip_files() if $opt_zip;
+delete_output() if $opt_deloutput;
 print_stats();
 
 exit(0);
@@ -354,6 +357,8 @@ sub parse_options 
         $arg =~ /^-check$/  and $opt_check  = 1 and next;
         $arg =~ /^-zip$/    and $opt_zip    = 1 and next;
         $arg =~ /^-delete$/ and $opt_delete = 1 and next;
+        $arg =~ /^-link$/   and $opt_link   = 1 and next;
+        $arg =~ /^-deloutput$/ and $opt_deloutput = 1 and next;
         print_error("invalid option $arg") if ( $arg =~ /-/ ); 
         if ( $arg =~ /-/ || $#ARGV > -1 ) {
             usage(); 
@@ -601,25 +606,28 @@ sub copy_if_newer 
 
     if ( $opt_delete ) {
         print "REMOVE: $to\n";
+        return 1 if $opt_check;
+        my $rc = unlink($to);
+        return 1 if $rc;
+        return 0;
     }
-    else {
-        if ( $touch ) {
-            print "TOUCH: $from -> $to\n";
-        }
-        else {
-            print "COPY: $from -> $to\n";
-        }
+    elsif( $touch ) {
+        print "TOUCH: $from -> $to\n";
     }
-    if ( $opt_check ) {
-        return 1;
-    } 
     else {
-        if ( $opt_delete ) {
-            my $rc = unlink($to);
-            return 1 if $rc;
-            return 0;
+        my $linked = 0;
+        if( !$opt_check && $opt_link ) {
+            # hard link if possible
+            $linked = link($from, $to);
+        }
+
+        if( $linked ){
+            print "LINK: $from -> $to\n";
         }
         else {
+            print "COPY: $from -> $to\n";
+            return 1 if( $opt_check );
+        
             # copy to temporary file first and rename later
             # to minimize the possibility for race conditions
             local $temp_file = sprintf('%s.%d-%d', $to, $$, time());
@@ -890,6 +898,17 @@ sub zip_files
     close(ZIP)
 }
 
+sub delete_output
+{
+    my $output_path = expand_macros("../%__SRC%");
+    if ( rmtree([$output_path], 0, 1) ) {
+        print "Deleted output tree.\n";
+    }
+    else {
+        print_error("Error deleting output tree $output_path: $!",0);
+    }
+}
+
 sub print_error 
 {
     my $message = shift;
@@ -936,6 +955,8 @@ sub usage 
     print STDERR "  -check\tjust print what would happen, no actual copying of files\n";
     print STDERR "  -zip  \tcreate additional zip files of delivered content\n";
     print STDERR "  -delete\tdelete files, use with care\n";
+    print STDERR "  -link\thard link files into the solver to save disk space\n";
+    print STDERR "  -deloutput\tremove the output tree\n";
     print STDERR "The option -zip and a destination-path are mutually exclusive\n";
 }
 
