--- a/comphelper/qa/complex/comphelper/Map.java	2012-03-27 18:22:01.000000000 +0200
+++ b/comphelper/qa/complex/comphelper/Map.java	2012-04-12 16:08:17.731593201 +0200
@@ -151,13 +151,13 @@
         assertTrue( _context + ": 'clear' does not empty the map", map.hasElements() );
 
         // try the constructor which creates an immutable version
-        Pair< ?, ? >[] initialMappings = new Pair< ?, ? >[ _keys.length ];
+        Pair[] initialMappings = new Pair[ _keys.length ];
         for ( int i=0; i<_keys.length; ++i )
         {
-            initialMappings[i] = new Pair< Object, Object >( _keys[i], _values[i] );
+            initialMappings[i] = new Pair( _keys[i], _values[i] );
         }
         map = com.sun.star.container.EnumerableMap.createImmutable(
-            connection.getComponentContext(), keyType, valueType, (Pair< Object, Object >[])initialMappings );
+            connection.getComponentContext(), keyType, valueType, (Pair[])initialMappings );
         impl_ceckContent( map, _keys, _values, _context );
 
         // check the thing is actually immutable
@@ -405,8 +405,8 @@
     {
         public boolean areEqual( Object _lhs, Object _rhs )
         {
-            Pair< ?, ? > lhs = (Pair< ?, ? >)_lhs;
-            Pair< ?, ? > rhs = (Pair< ?, ? >)_rhs;
+            Pair lhs = (Pair)_lhs;
+            Pair rhs = (Pair)_rhs;
             return lhs.First.equals( rhs.First ) && lhs.Second.equals( rhs.Second );
         }
     };
@@ -464,10 +464,10 @@
         XEnumerableMap map = com.sun.star.container.EnumerableMap.create( connection.getComponentContext(), new Type( String.class ), new Type( String.class ) );
         impl_putAll( map, keys, values );
 
-        final Pair< ?, ? >[] paired = new Pair< ?, ? >[ keys.length ];
+        final Pair[] paired = new Pair[ keys.length ];
         for ( int i=0; i<keys.length; ++i )
         {
-            paired[i] = new Pair< Object, Object >( keys[i], values[i] );
+            paired[i] = new Pair( keys[i], values[i] );
         }
 
         // create non-isolated enumerators, and check their content
