From 7a6f4c19dea65686b68d8e326fe53dc665954854 Mon Sep 17 00:00:00 2001
From: Rene Engelhard <rene@debian.org>
Date: Fri, 30 Aug 2019 21:00:55 +0200
Subject: [PATCH] add -latomic configure check...

and move the flag to com_GCC_defs.mk

(copied from https://github.com/zelcash/zelcash/blob/master/build-aux/m4/l_atomic.m4)

Follow-up to 2b1ce38f0d1feeec11e6c45b03eebeddb2f571ee and
b11763dbaa0c7f427ea47abe9b98995cb49a8595 to generalize it

Change-Id: I8879a72d730cc08a72c2d8b132ff9f5d2efe7b9f
---
 config_host.mk.in                           |  1 +
 configure.ac                                |  4 ++
 m4/l_atomic.m4                              | 41 +++++++++++++++++++++
 solenv/gbuild/platform/LINUX_ARM_GCC.mk     |  2 -
 solenv/gbuild/platform/LINUX_GODSON_GCC.mk  |  2 -
 solenv/gbuild/platform/LINUX_M68K_GCC.mk    |  2 -
 solenv/gbuild/platform/LINUX_POWERPC_GCC.mk |  2 -
 solenv/gbuild/platform/com_GCC_defs.mk      |  4 ++
 8 files changed, 50 insertions(+), 8 deletions(-)
 create mode 100644 m4/l_atomic.m4

diff --git a/config_host.mk.in b/config_host.mk.in
index 8db0d6ddd779..5476dffa6191 100644
--- a/config_host.mk.in
+++ b/config_host.mk.in
@@ -30,6 +30,7 @@ export AR=@AR@
 export ASSERT_ALWAYS_ABORT=@ASSERT_ALWAYS_ABORT@
 export ATL_INCLUDE=@ATL_INCLUDE@
 export ATL_LIB=@ATL_LIB@
+export ATOMIC_LIB=@ATOMIC_LIB@
 export AVAHI_CFLAGS=$(gb_SPACE)@AVAHI_CFLAGS@
 export AVAHI_LIBS=$(gb_SPACE)@AVAHI_LIBS@
 export LIBATOMIC_OPS_CFLAGS=$(gb_SPACE)@LIBATOMIC_OPS_CFLAGS@
diff --git a/configure.ac b/configure.ac
index d0e6759b1f52..a2dbd69388ad 100644
--- a/configure.ac
+++ b/configure.ac
@@ -6168,6 +6168,10 @@
     else
         AC_MSG_RESULT([no])
     fi
+    if test "$GCC" = "yes"; then
+      CHECK_L_ATOMIC
+      AC_SUBST(ATOMIC_LIB)
+    fi
 
     AC_MSG_CHECKING([whether $CC_BASE supports __builtin_ffs])
     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[ return __builtin_ffs(1); ]])],[HAVE_GCC_BUILTIN_FFS=TRUE],[])
diff --git a/m4/l_atomic.m4 b/m4/l_atomic.m4
new file mode 100644
index 000000000000..4355bc4befe4
--- /dev/null
+++ b/m4/l_atomic.m4
@@ -0,0 +1,41 @@
+# Some versions of gcc/libstdc++ require linking with -latomic if
+# using the C++ atomic library.
+#
+# Sourced from http://bugs.debian.org/797228
+
+m4_define([_CHECK_L_ATOMIC_testbody], [[
+  #include <atomic>
+  #include <cstdint>
+
+  int main() {
+    std::atomic<int64_t> a{};
+
+    int64_t v = 5;
+    int64_t r = a.fetch_add(v);
+    return static_cast<int>(r);
+  }
+]])
+
+AC_DEFUN([CHECK_L_ATOMIC], [
+
+  AC_LANG_PUSH(C++)
+
+  AC_MSG_CHECKING([whether std::atomic can be used without link library])
+
+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_L_ATOMIC_testbody])],[
+      AC_MSG_RESULT([yes])
+    ],[
+      AC_MSG_RESULT([no])
+      LIBS="$LIBS -latomic"
+      AC_MSG_CHECKING([whether std::atomic needs -latomic])
+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_L_ATOMIC_testbody])],[
+          AC_MSG_RESULT([yes])
+        ],[
+          AC_MSG_RESULT([no])
+          AC_MSG_FAILURE([cannot figure our how to use std::atomic])
+        ])
+    ])
+
+  AC_LANG_POP
+  ATOMIC_LIB=-latomic
+])
diff --git a/solenv/gbuild/platform/LINUX_ARM_GCC.mk b/solenv/gbuild/platform/LINUX_ARM_GCC.mk
index 03870068de51..cccf5772b3b4 100644
--- a/solenv/gbuild/platform/LINUX_ARM_GCC.mk
+++ b/solenv/gbuild/platform/LINUX_ARM_GCC.mk
@@ -13,6 +13,4 @@ gb_COMPILEROPTFLAGS := -Os
 
 include $(GBUILDDIR)/platform/linux.mk
 
-gb_LinkTarget_LDFLAGS += -latomic
-
 # vim: set noet sw=4:
diff --git a/solenv/gbuild/platform/LINUX_GODSON_GCC.mk b/solenv/gbuild/platform/LINUX_GODSON_GCC.mk
index 753747ece789..976aaedf97fe 100644
--- a/solenv/gbuild/platform/LINUX_GODSON_GCC.mk
+++ b/solenv/gbuild/platform/LINUX_GODSON_GCC.mk
@@ -13,6 +13,4 @@ gb_COMPILEROPTFLAGS := -Os
 
 include $(GBUILDDIR)/platform/linux.mk
 
-gb_LinkTarget_LDFLAGS += -latomic
-
 # vim: set noet sw=4:
diff --git a/solenv/gbuild/platform/LINUX_M68K_GCC.mk b/solenv/gbuild/platform/LINUX_M68K_GCC.mk
index 8e5e34c4a6e8..9e007101d8ac 100644
--- a/solenv/gbuild/platform/LINUX_M68K_GCC.mk
+++ b/solenv/gbuild/platform/LINUX_M68K_GCC.mk
@@ -12,6 +12,4 @@ gb_COMPILEROPTFLAGS := -Os
 
 include $(GBUILDDIR)/platform/linux.mk
 
-gb_LinkTarget_LDFLAGS += -latomic
-
 # vim: set noet sw=4:
diff --git a/solenv/gbuild/platform/LINUX_POWERPC_GCC.mk b/solenv/gbuild/platform/LINUX_POWERPC_GCC.mk
index d026cb64cb8a..1880b3bad1e4 100644
--- a/solenv/gbuild/platform/LINUX_POWERPC_GCC.mk
+++ b/solenv/gbuild/platform/LINUX_POWERPC_GCC.mk
@@ -12,6 +12,4 @@ gb_CPUDEFS += -DPPC
 
 include $(GBUILDDIR)/platform/linux.mk
 
-gb_LinkTarget_LDFLAGS += -latomic
-
 # vim: set noet sw=4:
diff --git a/solenv/gbuild/platform/com_GCC_defs.mk b/solenv/gbuild/platform/com_GCC_defs.mk
index 4a4688dd3a1f..dea7efe8088e 100644
--- a/solenv/gbuild/platform/com_GCC_defs.mk
+++ b/solenv/gbuild/platform/com_GCC_defs.mk
@@ -103,6 +103,10 @@ gb_CXXFLAGS_COMMON += -ffunction-sections -fdata-sections
 gb_LinkTarget_LDFLAGS += -Wl,--gc-sections
 endif
 
+ifneq ($(ATOMIC_LIB),)
+gb_LinkTarget_LDFLAGS += -Wl,-no-as-needed $(ATOMIC_LIB) -Wl,--as-needed
+endif
+
 ifeq ($(COM_IS_CLANG),TRUE)
 gb_CXXFLAGS_COMMON += -Wimplicit-fallthrough
 else
-- 
2.20.1

