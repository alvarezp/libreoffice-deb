--- /dev/null	2011-12-15 01:37:17.931118287 +0100
+++ libreoffice-3.4.4/libreoffice-build/patches/hotfixes/fdo43139.diff	2011-12-20 10:49:37.000000000 +0100
@@ -0,0 +1,30 @@
+From 9c2ab9f4febec2b2c5fac25469f1d0cfedc6af5e Mon Sep 17 00:00:00 2001
+From: Caol√°n McNamara <caolanm@redhat.com>
+Date: Wed, 21 Dec 2011 12:10:02 +0000
+Subject: fix build with bleeding edge external boost and gcc
+
+It seems that a recent boost and recent gcc causes a problem when
+boost::unordered_map is used as a baseclass for something.
+Asking gcc to use -std=c++0x mode makes gcc do the right thing.
+
+Signed-off-by: Petr Mladek <pmladek@suse.cz>
+---
+diff --git a/solenv/gbuild/platform/unxgcc.mk b/solenv/gbuild/platform/unxgcc.mk
+index d3b63ed..3d6a088 100755
+--- solenv/gbuild/platform/unxgcc.mk
++++ solenv/gbuild/platform/unxgcc.mk
+@@ -97,6 +97,12 @@ gb_CFLAGS += -fno-strict-aliasing
+ gb_CXXFLAGS += -fno-strict-aliasing
+ endif
+ 
++ifeq ($(HAVE_CXX0X),TRUE)
++#Currently, as well as for its own merits, c++11/c++0x mode allows use to use
++#a template for SAL_N_ELEMENTS to detect at compiler time its misuse
++gb_CXXFLAGS += -std=c++0x -Wno-deprecated-declarations
++endif
++
+ ifneq ($(EXTERNAL_WARNINGS_NOT_ERRORS),TRUE)
+ gb_CFLAGS_WERROR := -Werror
+ gb_CXXFLAGS_WERROR := -Werror
+--
+cgit v0.9.0.2-2-gbebe
