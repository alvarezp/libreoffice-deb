11:16 <@_rene_> I most wonder about that l10n failure with boost: http://zyklop. dyndns.org/~rene/helpcompiler-boost-mips.log.
[...]
11:18 <@Fridrich> _rene_: there is this define#if !defined(BOOST_NO_0X_HDR_TYPEINDEX)
11:18 <@Fridrich>     std::size_t hash_value(std::type_index);
11:18 <@Fridrich> #endif
11:18 <@Fridrich> _rene_: is it possible some include order changed and that is sucked in
11:19 <@_rene_> Fridrich: yeah, but it only fails on mips. the other archs work with the same boost version :) (ok, this could also be a boost bug, but...)
11:20 <@Fridrich> _rene_: possible some misdetection of compiler capacities for mips?
11:20 <@_rene_> yeah, just thought about that too after I posted t he last comment
11:20 <@_rene_> indeed
11:20 <@_rene_> checking whether arm-linux-gnueabi-gcc supports -std=gnu++0x without Language Defect 757... yes <-- "normal"
11:21 <@_rene_> checking whether mips-linux-gnu-gcc-4.4 supports -std=gnu++0x without Language Defect 757... no <-- mips

diff --git a/l10ntools/source/help/HelpCompiler.hxx b/l10ntools/source/help/HelpCompiler.hxx
index 49ebd60..df943b4 100644
--- a/helpcompiler/inc/HelpCompiler.hxx
+++ b/helpcompiler/inc/HelpCompiler.hxx
@@ -30,6 +30,9 @@
 #define HELPCOMPILER_HXX
 
 #include <string>
+#ifndef HAVE_CXX0X
+#define BOOST_NO_0X_HDR_TYPEINDEX
+#endif
 #include <boost/unordered_map.hpp>
 #include <vector>
 #include <list>
diff --git a/l10ntools/Library_helplinker.mk b/l10ntools/Library_helplinker.mk
index 8cabe50..c5fabe3 100644
--- a/helpcompiler/Library_helplinker.mk
+++ b/helpcompiler/Library_helplinker.mk
@@ -35,6 +35,12 @@ $(eval $(call gb_Library_add_defs,helplinker,\
     -DHELPLINKER_DLLIMPLEMENTATION \
 ))
 
+ifeq ($(HAVE_CXX0X),TRUE)
+$(eval $(call gb_Library_add_defs,helplinker,\
+    -DHAVE_CXX0X \
+))
+endif
+
 $(eval $(call gb_Library_use_libraries,helplinker,\
     sal \
 ))
