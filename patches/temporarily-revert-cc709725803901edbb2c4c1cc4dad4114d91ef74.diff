temporarily revert upstream cc709725803901edbb2c4c1cc4dad4114d91ef74.diff

See https://cgit.freedesktop.org/libreoffice/core/commit/?id=4544713d3ae7a83d45047b65bf7ba520b3e8762e,
without that it fails and it's not backported....

diff --git a/sax/source/fastparser/fastparser.cxx b/sax/source/fastparser/fastparser.cxx
index a0b568c46e38..4d4ec416e7a4 100644
--- a/sax/source/fastparser/fastparser.cxx
+++ b/sax/source/fastparser/fastparser.cxx
@@ -288,7 +288,7 @@ private:
         {
             mpParser->parse();
         }
-        catch (...)
+        catch (const Exception &)
         {
             Entity &rEntity = mpParser->getEntity();
             rEntity.getEvent( EXCEPTION );
@@ -459,7 +459,7 @@ void Entity::startElement( Event const *pEvent )
         maContextStack.top().mxContext.set( xContext.get() );
         xContext.set( nullptr, SAL_NO_ACQUIRE );
     }
-    catch (...)
+    catch (const Exception&)
     {
         saveException( ::cppu::getCaughtException() );
     }
@@ -478,7 +478,7 @@ void Entity::characters( const OUString& sChars )
     {
         xContext->characters( sChars );
     }
-    catch (...)
+    catch (const Exception&)
     {
         saveException( ::cppu::getCaughtException() );
     }
@@ -502,7 +502,7 @@ void Entity::endElement()
         else
             xContext->endUnknownElement( aContext.maNamespace, aContext.maElementName );
     }
-    catch (...)
+    catch (const Exception&)
     {
         saveException( ::cppu::getCaughtException() );
     }
@@ -515,7 +515,7 @@ void Entity::processingInstruction( const OUString& rTarget, const OUString& rDa
     {
         mxDocumentHandler->processingInstruction( rTarget, rData );
     }
-    catch (...)
+    catch (const Exception&)
     {
         saveException( ::cppu::getCaughtException() );
     }
@@ -1236,7 +1236,7 @@ void FastSaxParserImpl::callbackStartElement(const xmlChar *localName , const xm
             rEntity.startElement( &rEvent );
         }
     }
-    catch (...)
+    catch (const Exception&)
     {
         rEntity.saveException( ::cppu::getCaughtException() );
     }
