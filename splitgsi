#! /usr/bin/python

import sys

map_fn = 'debian/module-po.map'

def read_map(fn):
    modules = {}
    for line in file(fn):
        module, poname = line.split()
        modules[module] = poname
    return modules

def split(fn, dir, modules):
    polists= {}
    for poname in set(modules.values()):
        polists[poname] = []
    polists['ooo-unknown'] = []

    for line in file(fn):
        module = line.split(None, 1)[0]
        polists[modules.get(module,'ooo-unknown')].append(line)

    if polists['ooo-unknown'] == []:
        del polists['ooo-unknown']
    for poname in polists.keys():
        fd = file('%s/%s.sdf' % (dir, poname), 'w')
        fd.writelines(polists[poname])
        fd.close()

def main():
    modules = read_map(map_fn)
    if len(sys.argv) != 3:
        print 'usage: splitgsi <gsi file> <target_dir>'
        sys.exit(1)
    gsi_fn = sys.argv[1]
    target_dir = sys.argv[2]

    split(gsi_fn, target_dir, modules)

main()
