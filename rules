#!/usr/bin/make -f
###################################################################################
# OpenOffice.org source package rules flie
#
# Please see debian/README for detailed documentation about the build system, and
# how to build OpenOffice.org.
###################################################################################
# Authors:
# Chris Halls <halls@debian.org>
# Rene Engelhard <rene@debian.org>
# Copyright 2005 Software in the Public Interest, Inc.
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL or <http://www.gnu.org/copyleft/gpl.txt>.
###################################################################################

default: environment
VER:=2
PKGDIR:=debian/openoffice.org$(VER)
OODIR:=usr/lib/openoffice$(VER)

SOURCE_VERSION:=$(shell head -1 debian/changelog | cut -d\( -f2 | cut -d\) -f1)
UPSTREAM_VERSION:=$(shell echo "$(SOURCE_VERSION)"| cut -d- -f1)
MILESTONE:=$(shell echo "$(UPSTREAM_VERSION)"| cut -d. -f3)
ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)
# Dist we are building for
DIST := $(shell lsb_release -is)

# ensure that some scripts we need are executable.
DUMMY:=$(shell if [ ! -x debian/scripts/setperms ]; then chmod 755 debian/scripts/setperms; fi)
DUMMY:=$(shell debian/scripts/setperms)

# debhelper
export DH_OPTIONS
export DH_ALWAYS_EXCLUDE=CVS
#export DH_VERBOSE=1

SHLIBS_OVERRIDE=-- -Ldebian/shlibs.override.internal

TAG=src680-m$(MILESTONE)
SOURCE_TREE=ooo-build/build/$(TAG)
STAMP_DIR=debian/stampdir

# Read in architecture-specific variables of importance.
#include debian/scripts/vars.$(ARCH)

# Which patchset?
ifeq ($(ARCH),amd64)
  PATCHSET=Debian64
else
  PATCHSET=Debian
endif

#ENABLE_MONO=y
#PACKAGE_TESTTOOL=y

# Note that the first one here *has to be* en-US. the first one gets
# gid_Module_Root as filelist later and the rest gid_Module_Root.$iso
# but we can't/shouldn't do dynamic switching, so let en-US be the first
# one to that gid_Module_Root always is english and the other langpacks
# have gid_Module_Root.$iso
#ISOS="$(shell ooo-build/bin/openoffice-xlate-lang -i all')"
ISOS:="en-US de es fr it ja ko pt-BR ru sv zh-CN zh-TW"
#HELPISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all') 
#HELPISOS:=en-US de es fr it
#LANGPACKISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all')
LANGPACKISOS:=en-US de es fr it ja ko pt-BR ru sv zh-CN zh-TW

# Default flags to pass to configure of ooo-build
CONFIGURE_FLAGS= --disable-post-install-scripts \
                 --with-tag=$(TAG) \
		 --with-system-gcc \
		 --with-distro=$(PATCHSET) \
		 --with-vendor=Debian \
		 --enable-package-directories \
		 --with-installed-ooo-dirname=openoffice$(VER) \
		 --with-binsuffix=2 \
		 --mandir=/usr/share/man \
		 --with-lang=$(ISOS)

ifeq "$(ENABLE_MONO)" "y"
		 CONFIGURE_FLAGS+= --enable-mono
endif

#		 --with-ooo-builddir=$(CURDIR) \
#		 --with-src=$(CURDIR) \

# Use compiler cache?  Include ccache in DEB_BUILD_OPTIONS for much faster rebuild times
# A complete build uses about 200Mb of compiler cache.
ifeq (ccache,$(findstring ccache,$(DEB_BUILD_OPTIONS)))
  CONFIGURE_FLAGS += --with-gcc-speedup=ccache
endif

# Build python depends from current python version
PYMAJOR:=$(shell python -c "import sys; print sys.version_info[0]")
PYMINOR:=$(shell python -c "import sys; print sys.version_info[1]")
PYMINORPLUS1:=$(shell python -c "import sys; print sys.version_info[1]+1")
PYTHON_SITE:=debian/python-uno/usr/lib/python$(PYMAJOR).$(PYMINOR)/site-packages

CURDIR ?= $(shell pwd)

GCC_VERSION = 4.0
#GCC_VERSION = snapshot
ifeq ($(GCC_VERSION),)
	BUILD_PATH = $(CURDIR)/debian/usr/lib/jvm/java-1.4.2-gcj-4.0-1.4.2.0/bin:$$PATH
else
ifeq ($(GCC_VERSION),snapshot)
	BUILD_PATH = $(CURDIR)/debian/usr/lib/jvm/java-1.4.2-gcj-4.0-1.4.2.0/bin:/usr/lib/gcc-snapshot/bin:$$PATH
	BUILD_LD_LIBRARY_PATH = /usr/lib/gcc-snapshot/lib:$$LD_LIBRARY_PATH
else
	BUILD_PATH = $(CURDIR)/debian/usr/lib/jvm/java-1.4.2-gcj-4.0-1.4.2.0/bin:$(CURDIR)/debian/usr/bin:$$PATH
endif
endif

# Because of the stampdir magic, when you actually want to run a rule
# over, you would have to remove the stamp manually.  Now, just do
# 'debian/rules <target> <target> ... FORCE=1', and the stamp files
# that match the given targets will be removed automagically.
stampdir_targets=files.backup icons.scale patch.apply build.prepare.artwork 
stampdir_targets+=build.prepare configure
stampdir_targets+=setupins setup install install-arch install-indep
stampdir_targets+=langpacks binary-common binary-arch binary-indep
ifdef FORCE
 DUMMY:=$(shell rm -f $(patsubst %,$(STAMP_DIR)/%,$(filter $(stampdir_targets),$(MAKECMDGOALS))))
endif

# If this is defined, then none of the 'long' commands will be run.  Useful
# for testing.
# test_rules=1

# Since the final stages use up a large amount of diskspace, provide targets to
# remove them without needing a full rebuild

# Clean up the package directories (about 830M) 
clean-debdir:
	dh_testdir
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	rm -f $(STAMP_DIR)/setup
	dh_clean

# Clean up the installation sets and package directories (about 2.5 Gb!)
clean-instsetoo: clean-debdir
	dh_testdir
	rm -f $(STAMP_DIR)/instsetoo
	# Remove all installation sets
	rm -rf $(SOURCE_TREE)/instsetoo/$(ARCHBUILDDIR)

# Clean compilation results, but leave solver (about 600Mb in addition to instsetoo)
clean-objectdirs: clean-instsetoo
	dh_testdir
	find $(SOURCE_TREE) -maxdepth 2 -name $(ARCHBUILDDIR) -type d -exec rm -rf {} \;

clean:
	dh_testroot
	dh_testdir

	if [ -r ooo-build/Makefile ]; then \
	  $(MAKE) -C ooo-build distclean ;\
	fi

	# we do not need them and they make problem with dpkg-source....
	rm -f ooo-build/desktop/*.png ooo-build/www/*.png \
		ooo-build/www/images/*.png ooo-build/templates/*.s* \
		ooo-build/www/l10n/*.gif

	if [ -d ooo-build/test ]; then \
		find ooo-build/test ooo-build/doc -type f \
		     \( -name '*.xls' -o -name '*.sx?' -o -name '*.doc' \
			-o -name '*.123' -o -name '*.lwp' -o -name '*.ppt' \
			-o -name '*.wb2' -o -name '*.png' -o -name '*.WB2' \) -exec rm {} \; ;\
	fi
	rm -f ooo-build/fonts/symbols.xls
	rm -rf ooo-build/build

	# remove xcf and bmp of the Debian splashscreen
	rm -f debian/openintro_debian.xcf debian/openintro_debian.bmp \
		offmgr/res/openintro_debian.bmp

	# remove generated symlinks / java wrappers
	rm -rf debian/usr

	rm -f debian/java-gcj-compat*.orig.tar.gz

	# uuencode binary files
	cd ooo-build ;\
	  for f in fonts/opens___.ttf src/ooo_*_images*.bz2 src/extras*bz2 \
	    src/evolocal.odb src/*.png src/*.bmp src/*.xcf test/macro/*.ods; do \
	  if [ -s $$f ]; then \
	    uuencode $$f $$f > $$f.uu && \
            touch -r $$f.uu $$f ;\
	  fi ;\
	  rm -f $$f ;\
	done

	dh_clean

	# Files created in debian directory
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	if [ -d "$(STAMP_DIR)" ]; then rm -rf "$(STAMP_DIR)"; fi

	$(MAKE) -f debian/rules control


# Generate control file, because we have so many different languages
# Based on script by Martin Quinson <Martin.Quinson@tuxfamily.org>
control: debian/control
debian/control: debian/control.in debian/control.lang.in ooo-build/bin/openoffice-xlate-lang
	sed -e "s#openoffice.orgVER#openoffice.org$(VER)#g" \
	    -e "s#%$(DIST)=\([^%]*\)%#, \1#g#" \
	    -e "s#%[A-Za-z]*=[^%]*%##g#" \
	    < debian/control.in > debian/control

	for LNUM in $(LANGPACKISOS) ; do \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    SUGGESTS=; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
	        -e "s|@SUGGESTS@|$$SUGGESTS|g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.lang.in; \
	done
ifneq "$(HELPISOS)" ""
	for LNUM in $(HELPISOS) ; do \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.help.in; \
	done
endif
ifeq "$(ENABLE_MONO)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.mono.in
endif


.DELETE_ON_ERROR: debian/control

build: build-arch build-indep
build-arch: $(STAMP_DIR)/build
build-indep: $(STAMP_DIR)/build

# All 'important' targets have 2 lines.  The one that is run by
# dpkg-buildpackage or the user, and the one that does the actual work.  This
# indirection is needed so that the 'stamp' files that signify when a rule is
# done can be located in a separate 'stampdir'.  Recall that make has no way to
# know when a goal has been met for a phony target (like "build" or "install").
#
# At the end of each stampdir target, be sure to run the command 'touch $@'
# so that the target will not be run again.  Removing the file will make
# make run the target over.

configure: ooo-build/config.status
ooo-build/config.status: ooo-build/configure
	dh_testdir
	$(MAKE) -f debian/rules environment
	mkdir -p $(STAMP_DIR)

	# uudecode source files
	cd ooo-build; for uu in fonts/opens___.ttf.uu src/*.uu; do \
	  orig="`echo "$$uu" |sed -e 's#.uu$$##'`" ;\
          if [ ! -s $$orig ]; then \
            uudecode -o $$orig $$uu ;\
            touch -r $$orig $$uu ;\
          fi ;\
	done

	# build java-gcj-compat
	uudecode -o debian/java-gcj-compat_1.0.14.orig.tar.gz \
		debian/java-gcj-compat_1.0.14.orig.tar.gz.uu
	if [ ! -d ooo-build/build ]; then mkdir ooo-build/build; fi && \
	tar xfvz debian/java-gcj-compat_1.0.14.orig.tar.gz -C ooo-build/build
	cd ooo-build/build/java-gcj-compat-1.0.14 && \
	JAVAC="gcj-4.0 -C" ./configure --prefix=$(CURDIR)/debian/usr && \
	$(MAKE) && $(MAKE) install
	# FIXME: why are these paths so weird? Find that out and remove this
	# workaround
	cd $(CURDIR)/debian/usr && \
	  for i in ./bin/java ./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/java \
	    ./lib/jvm/java-1.4.2-gcj-1.4.2.0/jre/bin/java \
	    ./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/javac; do \
		perl -pi -e 's,bin/gij,usr/bin/gij-4.0,' $$i; \
	  done && \
	  perl -pi -e 's,bin/fastjar,usr/bin/fastjar,' \
		./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/jar && \
	  perl -pi -e 's,bin/gcjh,usr/bin/gcjh-4.0,' \
		./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/jar && \
	  perl -pi -e 's,bin/gjdoc,usr/bin/gjdoc,' \
		./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/javadoc && \
	  perl -pi -e 's,bin/grmic,usr/bin/grmic-4.0,' \
		./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/rmic && \
	  for i in ./lib/jvm/java-1.4.2-gcj-1.4.2.0/bin/rmiregistry \
	    ./lib/jvm/java-1.4.2-gcj-1.4.2.0/jre/bin/rmiregistry; do \
		 perl -pi -e 's,bin/grmiregistry,usr/bin/grmiregistry-4.0,' \
		    $$i; \
	  done && \
	  find . -type f -name "javac" | xargs rm
	
ifneq ($(GCC_VERSION),)
ifneq ($(GCC_VERSION),snapshot)
	# create links for gcc and g++ (and gij and gcj), ooo-build does not
	# honour overriding CC and CC and we need to use gcc/g++ 4.0 or /
	# ant.mk wants gcj at the moment...
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/bin/gcc-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcc
	ln -sf /usr/bin/g++-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/g++
	ln -sf /usr/bin/gcj-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcj
	ln -sf /usr/bin/gij-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gij
endif
endif

	# Make sure we have /proc mounted - otherwise idlc will fail later.
	test -r /proc/version

	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) ../ooo-build/configure $(CONFIGURE_FLAGS)
	touch $@

build: $(STAMP_DIR)/build
$(STAMP_DIR)/build: ooo-build/config.status
	dh_testdir
	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) DEFAULT_TO_ENGLISH_FOR_PACKING=1 $(MAKE)
	cd $(SOURCE_TREE)/sysui; . ../*.sh; RPM=rpmbuild PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) ../solenv/bin/build.pl || true

	touch $@

install: $(STAMP_DIR)/install
$(STAMP_DIR)/install: $(STAMP_DIR)/build
	dh_testdir
	dh_testroot

	rm -rf $(CURDIR)/debian/tmp
	cd ooo-build ; DESTDIR=$(CURDIR)/debian/tmp $(MAKE) install
ifneq "$(HELPISOS)" ""
	# install *english* help; we can't do that later since this is in
	# arch-dep and arch-indep stuff..
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-help-en-us/$(OODIR)/help/en; \
		for i in common calc math draw writer impress; do \
			cp -r ./openoffice.org-$$i/$(OODIR)/help/en/* \
			 ./openoffice.org-help-en-us/$(OODIR)/help/en && \
			rm -rf ./openoffice.org-$$i/$(OODIR)/help/en; \
		done
endif
	# install database sttuff. there's no gid for this and we have stuff
	# in arch-dep and arch-indep stuff.- the arch-dep stuff is done
	# in install-arch as "normal"...
	cd debian/tmp/pkg; \
		mkdir -p -m755 openoffice.org-base/$(OODIR)/program; \
		mkdir -p -m755 openoffice.org-base/$(OODIR)/share/registry/data/org/openoffice/Office/UI; \
		mkdir -p -m755 openoffice.org-base/$(OODIR)/share/registry/schema/org/openoffice/Office/UI; \
		mkdir -p -m755 openoffice.org-base/$(OODIR)/share/xdg; \
		mv openoffice.org-common/$(OODIR)/program/sbase \
		   openoffice.org-base/$(OODIR)/program/sbase; \
		mv openoffice.org-common/$(OODIR)/share/registry/data/org/openoffice/Office/UI/Db* \
		   openoffice.org-base/$(OODIR)/share/registry/data/org/openoffice/Office/UI; \
		mv openoffice.org-common/$(OODIR)/share/registry/schema/org/openoffice/Office/UI/Db* \
		   openoffice.org-base/$(OODIR)/share/registry/schema/org/openoffice/Office/UI; \
		mv openoffice.org-common/$(OODIR)/share/xdg/base.desktop \
		  openoffice.org-base/$(OODIR)/share/xdg/base.desktop
	
	touch $@

#
# Generate maintainer scripts
maintscripts: $(STAMP_DIR)/maintscripts
$(STAMP_DIR)/maintscripts: debian/shell-lib.sh debian/java-lib.sh debian/control
	dh_testdir

	# generate maintainer scripts from *.in
	# or generate default script which calls hook in openoffice.org-debian-files package
	for PKG in `dh_listpackages`; do \
	  for FILE in postinst postrm preinst prerm; do \
	    MAINTSCRIPT=debian/$$PKG.$$FILE ; \
	    if [ -e $$MAINTSCRIPT.in ]; then \
	      sed -n '1,/^#INCLUDE_SHELL_LIB#$$/p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' > $$MAINTSCRIPT; \
	      grep LIBSUFFIX debian/scripts/vars.$(ARCH) >> $$MAINTSCRIPT; \
	      cat debian/shell-lib.sh >> $$MAINTSCRIPT; \
	      sed -n '/^#INCLUDE_SHELL_LIB#$$/,$$p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' >> $$MAINTSCRIPT; \
	    else \
	      echo '#!/bin/sh' > $$MAINTSCRIPT ; \
	      echo THIS_PACKAGE=$$PKG >> $$MAINTSCRIPT ;\
	      echo THIS_SCRIPT=$$FILE >> $$MAINTSCRIPT ;\
	      cat debian/shell-lib.sh >> $$MAINTSCRIPT; \
	    fi; \
	  done; \
	done
	touch $@

# Install files generated by setup into package directories
langpacks: $(STAMP_DIR)/langpacks
$(STAMP_DIR)/langpacks: $(STAMP_DIR)/install ooo-build/bin/openoffice-xlate-lang

	for ext in `echo $(LANGPACKISOS) |tr A-Z a-z` ; do \
	  rm -rf $(PKGDIR)-l10n-$$ext;\
	  rm -rf $(PKGDIR)-l10n-$$ext.*.debhelper;\
	done

	# move the english stuff out of the -common install
	for dir in program/resource share/registry/res/en-US; do \
	  mkdir -m755 -p $(PKGDIR)-l10n-en-us/$(OODIR)/$$dir ;\
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-common/$(OODIR)/$$dir/* \
			$(PKGDIR)-l10n-en-us/$(OODIR)/$$dir || exit 1;\
	done

	# ... and install the rest of the langpacks
	# FIXME: Filter stuff out which are doubled...
	for iso in $(LANGPACKISOS); do \
	  if [ "$$iso" = "en-US" ]; then continue; fi ; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  rm -rf $(PKGDIR)-l10n-$$pkgiso $(PKGDIR)-l10n-$$pkgiso.*.debhelper; \
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-l10n-$$iso \
		$(PKGDIR)-l10n-$$pkgiso || exit 1; \
	done

ifneq "$(HELPISOS)" ""
	# move the help out of the langpacks into the help packages...
	for iso in $(HELPISOS); do \
	  if [ "$$iso" = "en-US" ]; then continue; fi ; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  rm -rf $(PKGDIR)-help-$$pkgiso; \
	  mkdir -p $(PKGDIR)-help-$$pkgiso/$(OODIR); \
	  mv $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/help \
		$(PKGDIR)-help-$$pkgiso/$(OODIR); \
	done
endif

	touch $@


# Install files generated by setup into arch-dependent package directories
install-arch: $(STAMP_DIR)/install-arch
$(STAMP_DIR)/install-arch: $(STAMP_DIR)/install
	dh_testdir
	dh_testroot
	umask 022

	# Copy files placed by ooo-build/bin/package-ooo	
	for i in calc core draw impress math writer gnome; do \
	  rm -rf $(PKGDIR)-$$i $(PKGDIR)-$$i.*.debhelper ;\
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-$$i $(PKGDIR)-$$i || exit 1;\
	done

	rm -rf $(PKGDIR)-base $(PKGDIR)-base.*.debhelper ;\
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-base $(PKGDIR)-base || exit 1

	rm -rf debian/mozilla-openoffice.org debian/mozilla-openoffice.org.*.debhelper
	for i in "" -kde -evolution; do \
	  rm -rf $(PKGDIR)$$i $(PKGDIR)$$i.*.debhelper ;\
	done

	dh_installdirs -a
	#dh_install $(DEBHELPER_OPTIONS) --sourcedir=debian/tmp -a

	mkdir -p -m755 $(PKGDIR)-kde/$(OODIR)/program
	for f in kdefilepicker libfps_kde.so libvclplug_kde[0-9]*.so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-kde/$(OODIR)/program || exit 1 ;\
	done
	
	# move the GNOME stuff which are *not* in gid_Module_Optional_Gnome
	# (which is moved into -gnome in package-ooo) into -gnome
	mkdir -p -m755 $(PKGDIR)-gnome/$(OODIR)/program
	for f in gnome-open-url.bin fps_gnome.uno.so libvclplug_gtk[0-9]*.so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done
	
	mkdir -p -m755 $(PKGDIR)-evolution/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libevoab2.so $(PKGDIR)-evolution/$(OODIR)/program
	
	mkdir -p -m755 debian/mozilla-openoffice.org/$(OODIR)/program
	for f in libnpsoplugin.so nsplugin; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f debian/mozilla-openoffice.org/$(OODIR)/program; \
	done
	cd debian/mozilla-openoffice.org && \
		for b in mozilla mozilla-firefox; do \
			mkdir -p usr/lib/$$b/plugins && \
				ln -sf /$(OODIR)/program/libnpsoplugin.so \
				   usr/lib/$$b/plugins/libnpsoplugin.so; \
		done
	
	mkdir -p -m755 $(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libbf_* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-calc/$(OODIR)/program/libbf_sc* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/liblegacy_binfilters* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libbindet* \
		$(PKGDIR)-filter-so52/$(OODIR)/program

	# hack for splitting out -base. There's no gid_ for it...
	mkdir -p -m755 $(PKGDIR)-base/$(OODIR)/program
	for i in dba dbu; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done

	# OOo's package split sucks...
	mv $(PKGDIR)-core/$(OODIR)/program/libsw* \
		$(PKGDIR)-writer/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libsd6* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdd* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdui* \
		$(PKGDIR)-draw/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/slideshow.uno.so \
		$(PKGDIR)-impress/$(OODIR)/program
	
	mkdir -p -m755 $(PKGDIR)-officebean/$(OODIR)/program/classes
	#mv $(PKGDIR)-common/$(OODIR)/program/classes/officebean.jar \
	#	$(PKGDIR)-officebean/$(OODIR)/program/classes
	mv $(PKGDIR)-core/$(OODIR)/program/libofficebean.so \
		$(PKGDIR)-officebean/$(OODIR)/program

	mkdir -p -m755 $(PKGDIR)-base/usr/share/applications \
	               $(PKGDIR)-core/usr/share/applications

	# we don't need the testtool in "normal" builds...
ifneq "$(PACKAGE_TESTTOOL)" "y"
	rm $(PKGDIR)-core/$(OODIR)/program/testtool*
else
ifeq "$(HELPISOS)" ""
	# install hid.lst manually - we don't build helpcontents
	cp $(SOURCE_TREE)/helpcontent2/helpers/hid.lst \
		$(PKGDIR)-core/$(OODIR)/program
endif
endif

	# Nasty menu icons hack, urgently needs better version
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare; pwd`" ;\
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
		sed -e 's,Exec=openoffice.org-1.9 \(.*\) %U,Exec=ooffice$(VER) \1 %U,' \
		    -e 's,Icon=<progpath>/share/icons/\(ooo_.*\.png\),Icon=\1,' \
			-e 's,Name=OpenOffice.org 1.9 ,Name=OpenOffice.org2 ,' \
		   < $$dirname/$$p.desktop \
		   > $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop || exit 1 ;\
	done
	#mv $(PKGDIR)-base/usr/share/applications/ooo$(VER)-base.desktop $(PKGDIR)-core/usr/share/applications
	#rm -r $(PKGDIR)-base

        # compress manpages
	for i in calc math draw writer impress; do \
		find $(PKGDIR)-$$i -type f -name "*.1" | xargs gzip -9; \
	done

	touch $@

	# Pyuno packging
	rm -rf debian/python-uno debian/python-uno.*.debhelper
	cp -r --preserve=mode debian/tmp/pkg/python-uno debian/python-uno
	
	install -d $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/uno.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/unohelper.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/pyuno.so $(PYTHON_SITE)
	touch debian/python-uno/$(OODIR)/program/pyunorc
	chmod u+w debian/python-uno/$(OODIR)/program/pyunorc
	( echo 'PYTHONHOME=file:///usr/lib/python$(PYMAJOR).$(PYMINOR)' ;\
	  echo 'PYTHONPATH=$$PYTHONHOME/lib $$ORIGIN' \
	) >> debian/python-uno/$(OODIR)/program/pyunorc
	chmod u-w debian/python-uno/$(OODIR)/program/pyunorc

	mkdir -p debian/python-uno/usr/share/doc/python-uno
	for i in doc demo; do \
		cp -r $(SOURCE_TREE)/pyuno/$$i \
		  debian/python-uno/usr/share/doc/python-uno; \
	done
	cd debian/python-uno/usr/share/doc/python-uno && \
		find . -type d -name "CVS" | xargs rm -rf && \
		find . -type f -name "*.orig" | xargs rm

ifeq "$(ENABLE_MONO)" "y"
	# Mono bindings
	mkdir -p -m755 debian/libuno-cil/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libcli* \
		debian/libuno-cil/$(OODIR)/program
endif

	# install regcomp and configimport utililities
	#install -m755 \
	#$(SOURCE_TREE)/solver/$(BUILDNUM)/$(ARCHBUILDDIR)/bin/regcomp \
	#$(SOURCE_TREE)/solver/$(BUILDNUM)/$(ARCHBUILDDIR)/bin/configimport.bin \
	#	$(PKGDIR)-bin/$(OPENOFFICEDIR)/program

	touch $@

# Install files generated by setup into arch-independent package directories
install-indep: $(STAMP_DIR)/install-indep
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER)-mimelnk.install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).dirs
$(STAMP_DIR)/install-indep: $(STAMP_DIR)/install
$(STAMP_DIR)/install-indep: ooo-build/fonts/opens___.ttf
	dh_testdir
	dh_testroot
	umask 022

	# Copy files placed by ooo-build/bin/package-ooo	
	rm -rf $(PKGDIR)-common $(PKGDIR)-common.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-common $(PKGDIR)-common || exit 1

	# we assume here that when we want to build/package help here we want
	# to do that with en-US anyway...
ifneq "$(HELPISO)" ""
	rm -rf $(PKGDIR)-help-en-us $(PKGDIR)-help-en-us.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-help-en-us $(PKGDIR)-help-en-us || exit 1
endif

	# create symlink wrt hsqldb
	#cd $(PKGDIR)-common/$(OODIR)/program/classes && \
	#	ln -s /usr/share/java/hsqldb.jar hsqldb.jar

	# Remove files in langpack
	for dir in program/resource share/registry/res/en-US; do \
	  rm -rf $(PKGDIR)-common/usr/lib/openoffice$(VER)/$$dir ;\
	done

	#dh_install --sourcedir=debian/tmp -i

	dh_installdirs -i

	# Icons
	cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/redhat/usr/share/icons &&\
	for d in `find -type d`; do \
	  install -d -m755 $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$d || exit 1 ;\
	done &&\
	for f in `find -type f`; do \
	  install -m444 $$f $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$f || exit 1 ;\
	done
	
	# remove .desktop files already in KDE 3.2
	#cd $(PKGDIR)-mimelnk/usr/share/mimelnk/application && \
	#	for i in calc draw impress writer; do \
	#		rm -f vnd.sun.xml.$$i.desktop; \
	#	done

	# remove the version number from the .desktop files
	#for i in $(PKGDIR)/usr/share/applnk/*/*.desktop \
	#	 $(PKGDIR)/usr/share/applications/*.desktop \
	#	 $(PKGDIR)-mimelnk/usr/share/mimelnk/*/*.desktop; do \
	#    sed -e s/"$(OOVERSIONNO) "// -e s/" $(OOVERSIONNO)"// \
	#	-e s/"$(OOVERSIONNO)-"/"-"/ < $$i > $$i.new; \
	#    mv $$i.new $$i; \
	#done && \
	#for i in $(PKGDIR)/usr/share/applnk/*/.directory; do \
	#    sed -e s/" $(OOVERSIONNO)"// < $$i > $$i.new; \
	#    mv $$i.new $$i; \
	#done
	 
	# convert program/icon paths in desktop shortcuts
	#for I in $(PKGDIR)/usr/share/applnk/*/*.desktop \
	#         $(PKGDIR)/usr/share/applications/*.desktop; do \
	#    sed -e 's,Exec="\?/.*\(/$(OODIR)/program/setup\)"\?,Exec=\1,' \
	#        -e 's,Exec="\?/.*/$(OODIR)/program/s\?\([^"]*\)"\?,Exec=/usr/bin/oo\1$(VER),' \
	#	-e 's,/oooffice ,/ooffice ,' \
	#	-e 's,Icon=.*/\([^/]*\.png\),Icon=\1,' \
	#	-e 's,\.png,,' \
	#        < "$$I" > "$$I.new" ;\
	#    rm "$$I"; mv "$$I.new" "$$I" ;\
	#done

	# insert NoDisplay=true to force the extra dir not being displayed
	# on KDE 3.2
	#echo "NoDisplay=true" >> \
	#	$(PKGDIR)/usr/share/applnk/OpenOffice.org1.1/.directory

	# install openoffice-xlate-lang
	install -d -m755 $(PKGDIR)-common/usr/share/openoffice$(VER)/bin
	install -m755 ooo-build/bin/openoffice-xlate-lang \
		$(PKGDIR)-common/usr/share/openoffice$(VER)/bin

	# install info file for update-openoffice-dicts
	#install -m644 debian/dictlistinfo \
	#	$(PKGDIR)-thesaurus-en-us/usr/share/myspell/infos/ooo/openoffice.org$(VER)-thesaurus-en-us

	# this is a hack. it is needed to get the dictionaries hook
	# notice that we have a newer OOo and do not need to change
	# dictionary.lst
	#touch $(PKGDIR)-common/usr/share/myspell/infos/ooo/openoffice.org$(VER)

	#install -d -m755 debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	#install -m644 ooo-build/fonts/opens___.ttf \
	#	debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice

	# compress manpages
	find $(PKGDIR)-common -type f -name "*.1" | xargs gzip -9

ifneq "$(HELPISO)" ""
	# fix permisson
	chmod ugo-x $(PKGDIR)-common/$(OODIR)/program/hid.lst
endif

# when we don't build helpcontent2 here we are missing helpxsl.zip so this file
# doesn't get installed either. Do it manually..
ifeq "$(HELPISO)" ""
	mkdir -p -m755 $(PKGDIR)-common/$(OODIR)/help && \
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/main_transform.xsl \
		$(PKGDIR)-common/$(OODIR)/help
endif

	# install DicOOo...
	#mkdir -p -m755 $(PKGDIR)-common/usr/share/myspell/dicts
	#	cp $(SOURCE_TREE)/dictionaries/diclst/DicOOo.sxw \
	#	  $(PKGDIR)-common/usr/share/myspell/dicts

	# fix shebang
	perl -pi -e 's,/bin/awk,/usr/bin/awk,'\
		$(PKGDIR)-common/$(OODIR)/program/uri-encode

	touch $@


# This single target is used to build all the packages, all at once, or
# one at a time. So keep in mind: any options passed to commands here will
# affect _all_ packages. Anything you want to only affect one package
# should be put in another target, such as the install target.
binary-common:
	dh_testdir
	dh_testroot

	for pkg in `dh_listpackages` ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

	dh_installdocs
	dh_installman
	dh_installchangelogs
	if [ -e $(PKGDIR)/usr/share/doc/openoffice.org$(VER) ]; then \
	 install -m644 ooo-build/ChangeLog \
	   $(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core/changelog.ooo-build \
	 && gzip -f9 \
	   $(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core/changelog.ooo-build; \
	fi
	dh_installdebconf
	dh_installmime
	dh_installmenu
	dh_python
	debian/scripts/installoverrides
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
ifeq "$(ARCH)" "i386"
	# this LD_ASSUME_KERNEL is for working around some bug which makes
	# dh_shlibddeps report/find nothing with libc6-i686/TLS systems
	LD_ASSUME_KERNEL="2.4.27" dh_shlibdeps $(SHLIBS_OVERRIDE)
else
	dh_shlibdeps $(SHLIBS_OVERRIDE)
endif
ifeq "$(ENABLE_MONO)" "y"
	dh_clideps
endif
	mkdir -p $(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core
	debian/scripts/gen_lib_list \
	 > $(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core/used_libs
# This switch to dh_shlibdeps reduces the 'libXXX not found' warnings but
# causes ldd crashes sometimes when used with fakeroot:
#          -l $(PKGDIR)-bin/$(OPENOFFICEDIR)/program 
	dh_gencontrol -- \
		-V'base-version=$(UPSTREAM_VERSION)'
#		-v1.1.1+1.1.2rc3-`dpkg-parsechangelog  | grep urgency \
#		| awk '{print $$2}' | sed -e s/"("// -e s/")"// | cut -d"-" -f2`
	dh_md5sums
	dh_builddeb

# Build architecture independant packages using the common target.
binary-indep: $(STAMP_DIR)/binary-indep
$(STAMP_DIR)/binary-indep: $(STAMP_DIR)/install-indep debian/control $(STAMP_DIR)/maintscripts $(STAMP_DIR)/langpacks
	$(MAKE) -f debian/rules DH_OPTIONS="$(DEBHELPER_OPTIONS) -i" binary-common

	touch $@

# Build architecture dependant packages using the common target.
binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch: $(STAMP_DIR)/install-arch debian/control $(STAMP_DIR)/maintscripts
	$(MAKE) -f debian/rules DH_OPTIONS="$(DEBHELPER_OPTIONS) -a" binary-common
	touch $@

# Any other binary targets build just one binary package at a time.
binary-%: $(STAMP_DIR)/install-indep $(STAMP_DIR)/install-arch $(STAMP_DIR)/langpacks $(STAMP_DIR)/maintscripts
	$(MAKE) -f debian/rules binary-common DH_OPTIONS="$(DEBHELPER_OPTIONS) -p$*"

binary: binary-arch binary-indep

# -------------------------------------------------------
# Miscellaneous targets used to do a few useful operations

# Use 'debian/rules environment' to help debug architecture-related problems
# with the rules file.
environment:

	@echo 'Package build environment (not all variables may be set):'
	@echo '$$(ARCH)' is "$(ARCH)"
	@echo '$$(DEB_HOST_ARCH)' is "$(DEB_HOST_ARCH)"
	@echo '$$(CURDIR)' is "$(CURDIR)"
	@echo '$$(SOURCE_VERSION)' is "$(SOURCE_VERSION)"
	@echo '$$(UPSTREAM_VERSION)' is "$(UPSTREAM_VERSION)"
	@echo '$$(MILESTONE)' is "$(MILESTONE)"
	@echo '$$(JDK_HOME)' is "$(JDK_HOME)"
	@echo '$$(SUNJDK_VER)' is "$(SUNJDK_VER)"
	@echo '$$(_CC)' is "$(_CC)"
	@echo '$$(CXX)' is "$(CXX)"
	@echo '$$(BUILDCMD)' is "$(BUILDCMD)"
	@echo '$$(CONFIGURE_FLAGS)' is "$(CONFIGURE_FLAGS)"
	@echo '$$(BUILDFLAGS)' is "$(BUILDFLAGS)"
	@echo '$$(DMAKEFLAGS)' is "$(DMAKEFLAGS)"
	@echo '$$(SHLIBS_OVERRIDE)' is "$(SHLIBS_OVERRIDE)"
	@echo '$$(BUILD_ALL_LANGPACKS)' is "$(BUILD_ALL_LANGPACKS)"
	@echo '$$(BUILDLANG),$$(BUILDLANG_PREFIX)' is "$(BUILDLANG),$(BUILDLANG_PREFIX)"
	@echo '$$(USE_INTERNAL_FREETYPE)' is "$(USE_INTERNAL_FREETYPE)"
	@echo '$$(DEBHELPER_OPTIONS)' is "$(DEBHELPER_OPTIONS)"
	@echo '$$(PYTHON_DEPENDS)' is "$(PYTHON_DEPENDS)"
	@echo 'See debian/control for build dependencies.'

# Get the ximian packaging directory from gnome anoncvs
get-ooo-build:
	# press enter at the password prompt
	cvs -d:pserver:anonymous@anoncvs3.gnome.org:/cvs/gnome login
	cvs -z3 -d:pserver:anonymous@anoncvs3.gnome.org:/cvs/gnome co ooo-build
	cd ooo-build && ./autogen.sh $(CONFIGURE_FLAGS)

# Download the latest ooo-build sources
download: ooo-build/config.status
	ooo-build/download	

# Update debian and ooo-build directories from cvs
cvsupdate:
	cd debian && cvs -z3 -q update -dP
	cd ooo-build && cvs -z3 -q update -dP

# Take a tarfile of all the non-stripped binaries in solver, for generating backtraces
# from coredumps.
makebinariestar:
ifeq "$(ARCH)" "i386"
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/LSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
else
  ifeq "$(ARCH)" "arm"
	cd §(SOURCE_TREE)/solver/$(shell . $(SOURCE_TRE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/LSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
  else
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/MSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
  endif
endif
# -------------------------------------------------------

.PHONY: environment checksource control makebinariestar
.PHONY: clean-debdir clean-instsetoo clean-objectdirs clean default configure
.PHONY: build build-indep build-arch install-arch install-indep
.PHONY: $(stampdir_targets)

# vim:set noet ai sts=8 sw=8 tw=0:
