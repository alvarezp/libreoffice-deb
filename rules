#!/usr/bin/make -f
###################################################################################
# OpenOffice.org source package rules file
#
# Please see debian/README for detailed documentation about the build system, and
# how to build OpenOffice.org.
###################################################################################
# Authors:
# Chris Halls <halls@debian.org>
# Rene Engelhard <rene@debian.org>
# Copyright 2002-2006 Software in the Public Interest, Inc.
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL or <http://www.gnu.org/copyleft/gpl.txt>.
###################################################################################

#VER:=2
SHELL:=/bin/bash
PKGDIR:=debian/openoffice.org$(VER)
OODIR:=usr/lib/openoffice$(VER)

PKGSOURCE := $(shell dpkg-parsechangelog | awk '/^Source:/ {print $$2;exit 0}')
SOURCE_VERSION:=$(shell head -1 debian/changelog | cut -d\( -f2 | cut -d\) -f1)
UPSTREAM_VERSION:=$(shell echo "$(SOURCE_VERSION)"| cut -d- -f1)
BASE_VERSION:=$(UPSTREAM_VERSION)
#HELP_L10N_VIRTUAL_VERSION:=$(shell echo $(UPSTREAM_VERSION) | cut -d: -f2 | tr [~] [\\-])
HELP_L10N_VIRTUAL_VERSION:=2.3

BINARY_VERSION=$(SOURCE_VERSION)
#BINARY_VERSION=2.2.0-$(shell dpkg-parsechangelog  | grep urgency \
	| awk '{print $$2}' | sed -e s/"("// -e s/")"// | cut -d"-" -f2)
PACKAGES := $(shell dh_listpackages)
ARCH_INDEP_PACKAGES := $(shell dh_listpackages -i)
ARCH_DEP_PACKAGES := $(shell dh_listpackages -s)

OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)
DIST := $(shell lsb_release -is)
DISTREL := $(shell lsb_release -cs)
# Figure out who's building this package.
OOO_VENDOR:=Debian
ifeq "$(DIST)" "Ubuntu"
OOO_VENDOR+= and Ubuntu
endif
export OOO_VENDOR

# debhelper
export DH_OPTIONS
export DH_ALWAYS_EXCLUDE=CVS
#export DH_VERBOSE=1

# work around tcsh bugs.debian.org/339034: tcsh: Unknown colorls variable `su'
unexport LS_COLORS

SRCNUM=680
MWS=OOG680
# note that this only makes sense for ~oo?680s. as o < r (as rcX). src680 would break the ordering (s > r).
#MILESTONE:=$(shell echo "$(UPSTREAM_VERSION)" | cut -d~ -f2 | sed -e s/$(shell echo $(MWS) | tr A-Z a-z)//)
# For SRC680 milestones, use only ~mX
#MILESTONE:=$(shell echo "$(UPSTREAM_VERSION)" | cut -d~ -f2)//)
MILESTONE=m5
#TAG=$(shell echo $(MWS) | tr A-Z a-z)-$(MILESTONE)
TAG=$(MWS)_$(MILESTONE)
#OOO_BUILD_BRANCH=ooo-build-2-3
SOURCE_TREE=ooo-build/build/$(TAG)
STAMP_DIR=debian/stampdir

#CORE_TARBALL=$(TAG)-core.tar.bz2
#SYSTEM_TARBALL=$(TAG)-system.tar.bz2
CORE_TARBALL=OOo_2.3.0_src_core.tar.bz2
SYSTEM_TARBALL=OOo_2.3.0_src_system.tar.bz2

ifeq "$(DISTREL)" "etch"
  ETCH_BACKPORT=y
endif

#########
# Default package configuration
#
BUILD_AMD64=y
BUILD_PPC64=y
PATCHSET=$(DIST)
BUILD_DEPS=
BUILD_PYUNO=y
USE_PYCENTRAL=y
PACKAGE_QA_TOOLS=y
PACKAGE_TTF_OPENSYMBOL=y
PACKAGE_NPSOPLUGIN=y
BUILD_JARS_NATIVE=y
BUILD_BINFILTERS=y
BUILD_ONLY_EN_US=n
ENABLE_JAVA=y
ENABLE_MONO=y
MONO_MINVER= (>= 1.2.3)
USE_SYSTEM_HUNSPELL=y
HUNSPELL_MIN_VER= (>= 1.1.5-2)
SYSTEM_ALTLINUXHYPH=y
LIBALTLINUXHYPH_MINVER= (>= 0.1.1-11)
USE_AGG=n
SYSTEM_AGG=n
USE_STLPORT=y
USE_STLPORT5=n
USE_SYSTEM_STLPORT=y
USE_SYSTEM_BOOST=y
USE_SYSTEM_VIGRA=y
USE_SYSTEM_PORTAUDIO=y
USE_PORTAUDIO_V19=y
USE_EXTERNAL_CXXLIBS=y
LIBWPD8_MINVER= (>= 0.8.3-3)
USE_SYSTEM_SABLOT=n
USE_LIBXSLT=y
USE_EXTERNAL_MYTHES=n
USE_SYSTEM_ICU=y
USE_SYSTEM_LIBWPG=y
USE_SYSTEM_LIBWPS=y
USE_SYSTEM_XMLSEC=n
BUILD_CAIROCANVAS=y
USE_SYSTEM_CAIRO=y
CAIRO_FONTS_PATCH=y
BUILD_KDE=y
BUILD_DBG_PACKAGE=y
USE_SYSTEM_BSH=y
USE_SYSTEM_HSQLDB=y
KDELIBS_MINVER= (>= 4:3.4.3-2)
USE_SYSTEM_LPSOLVE=y
USE_SHARED_LPSOLVE=y
LPSOLVE_MIN_VERSION= (>= 5.5.0.10-4)
USE_DBUS=y
USE_GSTREAMER=y
USE_SYSTEM_NEON=y
USE_OOO_BUILD_DESKTOPS=n
PACKAGE_SDK=y
RUN_SMOKETEST=n
RUN_UNIT_TESTS=n
USE_LIBCURL4=y
USE_SYSTEM_LIBSVG=y
USE_SYSTEM_DMAKE=y
USE_LIBSUITESPARSE=y
USE_BZIP_COMPRESS=n
PRUNE_OOOBUILD=y
DBVER=4.5
NEONSONR=27
PARALLEL_BUILD=n
MOZILLA=xulrunner
ENABLE_OPENGL=n

# when we have a package we want to have to be installed on older things with some older
# C++ ABI (like it was the case with openoffice.org2), we need to set this. Don't touch
# otherwise
INTERNAL_STDLIBS=n

# Default flags to pass to configure of ooo-build
CONFIGURE_FLAGS= --disable-post-install-scripts \
                 --with-tag=$(TAG) \
                --with-distro=$(PATCHSET) \
		--with-vendor='$(OOO_VENDOR)' \
                --enable-package-directories \
                --with-installed-ooo-dirname=openoffice$(VER) \
                --mandir=/usr/share/man \
                --with-docdir=/usr/share/doc/openoffice.org \
		--with-lang="$(BUILD_ISOS)" \
                --with-build-version="openoffice.org$(VER)-core $(BINARY_VERSION), `LC_ALL=C date`" \
                --disable-strip \
		--enable-atkbridge \
                --enable-lockdown \
		--enable-openxml \
		--with-drink=coffee

# distro-configs is too late; it already gets searched in unpack
# when we don't do that here, too.
CONFIGURE_FLAGS += --disable-access

#############
# Distro-specific overrides

# Debian
ifeq "$(DIST)" "Debian"
  # we don't need to build all languages and the thesaurus on the buildds;
  # they do binary-only builds anyway
  ifeq (buildd,$(shell whoami))
       BUILD_ONLY_EN_US=y
  endif
  SYSTEM_AGG=y
  USE_SYSTEM_HUNSPELL=y
endif

# Debian Etch backport
ifeq "$(ETCH_BACKPORT)" "y"
  PATCHSET=$(DIST)Etch
  USE_STLPORT5=n
  USE_SYSTEM_LIBWPS=n
  SYSTEM_ALTLINUXHYPH=n
  ENABLE_MONO=n
  CAIRO_FONTS_PATCH=n
  HUNSPELL_MIN_VER= (>= 1.0.8-2)
  USE_SHARED_LPSOLVE=y
  LPSOLVE_MIN_VERSION=
  USE_SYSTEM_LIBSVG=n
  USE_SYSTEM_DMAKE=n
  USE_LIBCURL4=n
  USE_LIBSUITESPARSE=n
  USE_SYSTEM_BOOST=y
  USE_SYSTEM_LIBWPG=n
  USE_SYSTEM_HSQLDB=n
  NEONSONR=26
endif

#############
# Architecture-specific changes

OOO_ARCHS= i386 powerpc sparc
ifeq "$(BUILD_AMD64)" "y"
  OOO_ARCHS += amd64
endif
ifeq "$(BUILD_PPC64)" "y"
  OOO_ARCHS += ppc64
endif
# Java...
OOO_JAVA_ARCHS = i386 powerpc sparc
ifeq "$(BUILD_AMD64)" "y"
  OOO_JAVA_ARCHS+= amd64
endif
ifeq "$(BUILD_PPC64)" "y"
  OOO_JAVA_ARCHS+= ppc64
endif
ifeq (,$(findstring $(ARCH),$(OOO_JAVA_ARCHS)))
       ENABLE_JAVA=n
endif
# mono
# no mono available on sparc and ppc fails (#412967)
OOO_MONO_ARCHS = i386
ifeq "$(BUILD_AMD64)" "y"
  OOO_MONO_ARCHS += amd64
endif
ifeq (,$(findstring $(ARCH),$(OOO_MONO_ARCHS)))
       ENABLE_MONO=n
endif
# Mozilla plugin. Crashes on amd64
OOO_NPSOPLUGIN_ARCHS = i386 powerpc sparc
ifeq "$(BUILD_AMD64)" "y"
	PACKAGE_NPSOPLUGIN=n
endif
ifeq "$(BUILD_PPC64)" "y"
	PACKAGE_NPSOPLUGIN=n
endif

ifeq "$(ARCH)-linux-gnu" "sparc-linux-gnu"
	# use 32-bit compiler
	CC_PREFIX=sparc-linux-gnu-
endif

# We only build the main openoffice.org packages on those architectures where it works
# all other architectures build libmythes-dev
ifneq "$(USE_EXTERNAL_MYTHES)" "y"
  ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_ARCHS)))
       BUILD_ONLY_LIBMYTHES=y
  else
    ifeq "$(ARCH)" "amd64"
      ifneq "$(BUILD_AMD64)" "y"
               BUILD_ONLY_LIBMYTHES=y
      endif
    endif
    ifeq "$(ARCH)" "ppc64"
      ifneq "$(BUILD_AMD64)" "y"
               BUILD_ONLY_LIBMYTHES=y
      endif
    endif
  endif
endif

ifeq "$(USE_BZIP_COMPRESS)" "y"
	DPKG_DEPENDS = dpkg (>= 1.10.24)
	BUILDDEB_OPTIONS = -- -Zbzip2
endif

ifeq "$(ENABLE_OPENGL)" "y"
	BUILD_DEPS += , libgl1-mesa-dev, libglu1-mesa-dev
	CONFIGURE_FLAGS += --enable-opengl
endif

ifeq "$(USE_LIBCURL4)" "y"
	BUILD_DEPS += , libcurl4-gnutls-dev [$(OOO_ARCHS)]
else
	BUILD_DEPS += , libcurl3-gnutls-dev [$(OOO_ARCHS)]
endif

	# libdb-dev since 4.6 but it provides libdb4.6-dev, so keep this as-is...
	BUILD_DEPS += , libdb$(DBVER)-dev [$(OOO_ARCHS)]

ifneq "$(BUILD_DBG_PACKAGE)" "y"
	SMALL_SYMBOLS = y
else
	# -g gives a far too big deb (>400M, ca. 1GB I-S)
	SMALL_SYMBOLS = y
	DBG_DBG_SUGGESTS+= , libc6.1-dbg [alpha ia64], libc0.1-dbg [kfreebsd-i386 kfreebsd-amd64], libc0.3-dbg [hurd-i386], libc6-dbg [!ia64 !alpha !kfreebsd-i386 !kfreebsd-amd64 !hurd-i386], libatk1.0-dbg, libglib2.0-0-dbg, libgnomevfs2-0-dbg, libstdc++6-dbg, libx11-6-dbg, libxext6-dbg, libxaw7-dbg, libxml2-dbg, libgtk2.0-0-dbg, libxau6-dbg, libice6-dbg, libsm6-dbg, libxinerama1-dbg
  ifeq "$(USE_LIBCURL4)" "y"
	DBG_DBG_SUGGESTS+= , libcurl3-dbg
  else
	DBG_DBG_SUGGESTS+= , libcurl4-dbg
  endif
endif

ifeq "$(BUILD_PYUNO)" "y"
  ifeq "$(USE_PYCENTRAL)" "y"
	BUILD_DEPS += , python-central (>= 0.5) [$(OOO_ARCHS)], debhelper (>= 5.0.37.2)
  else
	BUILD_DEPS += , debhelper (>= 5)
  endif
	BUILD_DEPS += , python-dev (>= 2.4) [$(OOO_ARCHS)]
	WRITER_PYUNO_DEP = python-uno (>= $(UPSTREAM_VERSION))
	DBG_DBG_SUGGESTS+= , python-dbg
else 
	BUILD_DEPS += , debhelper (>= 5)
	BUILD_DEPS += , python [$(OOO_ARCHS)]
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
	STAMP_NATIVE_JARS = $(STAMP_DIR)/native-jars
	BUILD_DEPS += , dpkg-dev (>= 1.13.19)
	JAVA_GCJ_DEPENDS = libgcj-common (>= 1:4.1.1-14)
  endif
endif

ifneq "$(PACKAGE_QA_TOOLS)" "y"
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-qa-tools -Nopenoffice.org$(VER)-qa-api-tests
	CONFIGURE_FLAGS += --disable-qadevooo
endif

ifeq "$(RUN_SMOKETEST)" "y"
	BUILD_DEPS += , xvfb [$(OOO_ARCHS)], xbase-clients [$(OOO_ARCHS)], xfonts-base [$(OOO_ARCHS)]
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifeq (lang=,$(findstring lang=,$(DEB_BUILD_OPTIONS)))
	ISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
	HELPISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
	LANGPACKISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
  else
	# Note that the first one here *has to be* en-US. the first one gets
	# gid_Module_Root as filelist later and the rest gid_Module_Root.$iso
	# but we can't/shouldn't do dynamic switching, so let en-US be the first
	# one to that gid_Module_Root always is english and the other langpacks
	# have gid_Module_Root.$iso
	#ISOS=$(shell ooo-build/bin/openoffice-xlate-lang -i all')
	ISOS:=en-US af as-IN be-BY bg bn br bs ca cs da de dz el \
	  en-GB en-ZA eo es et fa fi fr ga gl gu-IN he hi-IN hr hu it ja \
	  ka km ko ku lo lt lv mk ml-IN mr-IN nb ne nl nn nr ns or-IN pa-IN \
	  pl pt pt-BR ru rw sk sl sr-CS ss st sv \
	  ta-IN te-IN tg th tn tr ts uk uz ve vi xh zh-CN zh-TW zu
	#HELPISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all') 
	HELPISOS:=en-US cs da de dz en-GB es et fr gl hi-IN hu it ja km ko nl \
	  pl pt pt-BR ru sl sv zh-CN zh-TW
	#LANGPACKISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all')
	LANGPACKISOS:=en-US af as-IN be-BY bg bn br bs ca cs da de dz el \
	  en-GB en-ZA eo es et fa fi fr ga gl gu-IN he hi-IN hr hu it ja \
	  ka km ko ku lo lt lv mk ml-IN mr-IN nb ne nl nn nr ns or-IN pa-IN \
	  pl pt pt-BR ru rw sk sl sr-CS ss st sv \
	  ta-IN te-IN tg th tn tr ts uk uz ve vi xh zh-CN zh-TW zu
  endif
else
	ISOS=en-US
	HELPISOS=en-US
	LANGPACKISOS=en-US
endif
BUILD_ISOS = $(ISOS)

ifeq "$(VER)" ""
	CONFIGURE_FLAGS += --with-binsuffix=no
else
	CONFIGURE_FLAGS += --with-binsuffix=$(VER)
endif

ifeq "$(ENABLE_JAVA)" "y"
	JAVA_HOME=/usr/lib/jvm/java-gcj
	CONFIGURE_FLAGS += --enable-gcjaot
  ifeq "$(BUILD_JARS_NATIVE)" "y"
    ifeq "$(shell gcj --version | head -n 1 | cut -d' ' -f3 | cut -d'.' -f1,2)" "4.2"
    	BUILD_DEPS += , java-gcj-compat-dev (>= 1.0.76-7) [$(OOO_JAVA_ARCHS)]
    else
	BUILD_DEPS += , java-gcj-compat-dev (>= 1.0.65-4) [$(OOO_JAVA_ARCHS)]
    endif
  else
	BUILD_DEPS += , java-gcj-compat-dev (>= 1.0.56) [$(OOO_JAVA_ARCHS)]
  endif
	BUILD_DEPS += , ant (>= 1.6.5) [$(OOO_JAVA_ARCHS)]
	GCJ_VERSION = $(shell $(JAVA_HOME)/bin/gcj --version | head -n 1 | awk '{ print $$3; }' | cut -d"." -f1,2)
	GCJ_DBTOOL = gcj-dbtool-$(GCJ_VERSION)
	SYSTEM_XT=y
	SYSTEM_XALAN=y
	SYSTEM_XERCES=y
	SYSTEM_XML_APIS=y
  ifeq "$(GCJ_VERSION)" "4.2"
	LIBGCJ_SONR=8
  else
	LIBGCJ_SONR=7
  endif
	DBG_DBG_SUGGESTS+= , libgcj$(LIBGCJ_SONR)-dbg
  ifeq "$(shell dpkg --compare-versions `dpkg -l gcj-4.1 | tail -n 1 | awk '{ print $$3 }'` ge '4.1.2-3' && echo true || echo false)" "true"
	GCJ_JAWT_DEPENDS= libgcj$(LIBGCJ_SONR)-1-awt
  else
    ifeq "$(GCJ_VERSION)" "4.2"
	GCJ_JAWT_DEPENDS= libgcj$(LIBGCJ_SONR)-1-awt
    else
	GCJ_JAWT_DEPENDS= libgcj$(LIBGCJ_SONR)-awt
    endif
  endif
export JAVA_HOME
	CONFIGURE_FLAGS += --with-jdk-home=$(JAVA_HOME)
	JAVA_COMMON_DEPENDS= , openoffice.org$(VER)-java-common (>> 2.2.0-4)
  ifeq "$(SYSTEM_XT)" "y"
	CONFIGURE_FLAGS += --with-system-xt	
	BUILD_DEPS += , libxt-java (>= 0.20050823) [$(OOO_JAVA_ARCHS)]
  endif
  ifeq "$(SYSTEM_XERCES)" "y"
	CONFIGURE_FLAGS += --with-system-xerces
	BUILD_DEPS += , libxerces2-java [$(OOO_JAVA_ARCHS)]
	JAVA_COMMON_JAVA_DEPENDS+= , libxerces2-java
    ifneq "$(ETCH_BACKPORT)" "y"
	JAVA_GCJ_DEPENDS += , libxerces2-java-gcj
    endif
  endif
  ifeq "$(SYSTEM_XALAN)" "y"
	CONFIGURE_FLAGS += --with-system-xalan
	BUILD_DEPS += , libxalan2-java (>= 2.6.0-1) [$(OOO_JAVA_ARCHS)]
	JAVA_COMMON_JAVA_DEPENDS+= , libxalan2-java (>= 2.6.0-1)
	# force using system xml-apis.jar
	SYSTEM_XML_APIS=YES
    ifneq "$(ETCH_BACKPORT)" "y"
	JAVA_GCJ_DEPENDS += , libxalan2-java-gcj
    endif
  endif
  ifeq "$(SYSTEM_XML_APIS)" "y"
	CONFIGURE_FLAGS += --with-system-xml-apis
	# xml-apis.jar is already a link in xalan, see above
  endif
  ifeq "$(DIST)" "Debian"
	BUILD_DEPS += , mingw32 [$(OOO_JAVA_ARCHS)]
	CONFIGURE_FLAGS += --with-mingwin=i586-mingw32msvc-g++
  endif
else
	CONFIGURE_FLAGS += --without-java
	DEBHELPER_OPTIONS += -Nopenoffice.org$(VER)-officebean -Nopenoffice.org$(VER)-java-common -Nopenoffice.org$(VER)-filter-mobiledev
	HELPISOS=
endif

ifneq "$(MOZILLA)" ""
  ifeq "$(MOZILLA)" "xulrunner"
	BUILD_DEPS+= , libxul-dev [$(OOO_ARCHS)], libnss3-dev [$(OOO_ARCHS)]
	DBG_DBG_SUGGESTS+= , libnss3-0d-dbg, libnspr4-0d-dbg
  else
	BUILD_DEPS += , $(MOZILLA)-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-mozilla=$(MOZILLA)
  endif
else
	CONFIGURE_FLAGS += --disable-mozilla
endif

ifeq "$(USE_SYSTEM_DMAKE)" "y"
	BUILD_DEPS += , dmake (>= 1:4.7) [$(OOO_ARCHS)]
endif

ifeq "$(ENABLE_MONO)" "y"
	# mono-gmcs for gmcs itself and mkbundle2
	# mono-mcs for mcs itself and al
	BUILD_DEPS += , mono-mcs $(MONO_MINVER) [$(OOO_MONO_ARCHS)], mono-gmcs $(MONO_MINVER) [$(OOO_MONO_ARCHS)], libmono-dev $(MONO_MINVER) [$(OOO_MONO_ARCHS)], mono-utils $(MONO_MINVER) [$(OOO_MONO_ARCHS)], cli-common-dev (>= 0.4.4) [$(OOO_MONO_ARCHS)]
	# http://pkg-mono.alioth.debian.org/cli-policy/ch-mono.html#s7.3
	MONO_SHARED_DIR = $(CURDIR)
	export MONO_SHARED_DIR
	CONFIGURE_FLAGS+= --enable-mono
	DBG_DBG_SUGGESTS += , mono-jit-dbg [$(OOO_MONO_ARCHS)], libmono0-dbg [$(OOO_MONO_ARCHS)], mono-dbg [$(OOO_MONO_ARCHS)]
else
	CONFIGURE_FLAGS+= --disable-mono
endif

ifeq "$(USE_SYSTEM_HUNSPELL)" "y"
	BUILD_DEPS += , libhunspell-dev $(HUNSPELL_MIN_VER) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS+= --with-system-hunspell
endif

ifeq "$(SYSTEM_ALTLINUXHYPH)" "y"
	BUILD_DEPS += , libaltlinuxhyph-dev $(LIBALTLINUXHYPH_MINVER) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-altlinuxhyph
endif

ifeq "$(USE_AGG)" "y"
	CONFIGURE_FLAGS+= --with-agg
  ifeq "$(SYSTEM_AGG)" "y"
	BUILD_DEPS += , libagg-dev (>= 2.3-2) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-agg
  endif
endif

ifneq "$(USE_STLPORT)" "y"
	CONFIGURE_FLAGS += --without-stlport
else
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
    ifeq "$(USE_STLPORT5)" "y"
	LIBSTLPORT_MINVER= (>= 5.0.99rc2-5)
	BUILD_DEPS += , libstlport5.1-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
	DEV_STL_DEPENDS=, libstlport5.1-dev $(LIBSTLPORT_MINVER)
	DBG_DBG_SUGGESTS+= , libstlport5.1-dbg
    else
	LIBSTLPORT_MINVER= (>= 4.6.2-3)
	BUILD_DEPS += , libstlport4.6-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
	DEV_STL_DEPENDS=, libstlport4.6-dev $(LIBSTLPORT_MINVER)
    endif
	CONFIGURE_FLAGS+= --with-stlport=$(CURDIR)/stlport
  endif
endif

ifeq "$(USE_SYSTEM_BOOST)" "y"
	BUILD_DEPS += , libboost-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-boost
endif

ifeq "$(USE_SYSTEM_VIGRA)" "y"
	BUILD_DEPS += , libvigraimpex-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-vigra
endif

ifeq "$(USE_SYSTEM_PORTAUDIO)" "y"
  ifeq "$(USE_PORTAUDIO_V19)" "y"
	BUILD_DEPS += , portaudio19-dev [$(OOO_ARCHS)]
  else
	BUILD_DEPS += , libportaudio-dev [$(OOO_ARCHS)]
  endif
	CONFIGURE_FLAGS += --with-system-portaudio
endif

ifeq "$(USE_EXTERNAL_CXXLIBS)" "y"
	BUILD_DEPS += , libwpd8-dev $(LIBWPD8_MINVER) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS+=  --with-system-libwpd
  ifeq "$(USE_SYSTEM_SABLOT)" "y"
	BUILD_DEPS += , libsablot0-dev (>= 1.0.2-4) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-sablot
  endif
  ifeq "$(USE_EXTERNAL_MYTHES)" "y"
	BUILD_DEPS += , libmythes-dev (>= 1:1.0-3) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-mythes
	DEBHELPER_OPTIONS+= -Nlibmythes-dev
  endif
  ifeq "$(USE_SYSTEM_LIBWPS)" "y"
	BUILD_DEPS += , libwps-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-libwps
  endif
  ifeq "$(USE_SYSTEM_LIBWPG)" "y"
	BUILD_DEPS += , libwpg-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-libwpg
  endif
endif

ifeq "$(USE_SYSTEM_LIBSVG)" "y"
	BUILD_DEPS += , libsvg-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-libsvg
endif

ifeq "$(USE_SYSTEM_ICU)" "y"
	# 34 and 36 provide this and 38 changed the real name.
	BUILD_DEPS += , libicu-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-icu
endif

ifeq "$(USE_LIBXSLT)" "y"
	CONFIGURE_FLAGS += --with-system-libxslt
	BUILD_DEPS += , libxslt1-dev [$(OOO_ARCHS)]
	DBG_DBG_SUGGESTS+= , libxslt1-dbg
endif

ifeq "$(USE_SYSTEM_XMLSEC)" "y"
  ifeq "$(MOZILLA)" "xulrunner"
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9-1.1) [$(OOO_ARCHS)], libxmlsec1-nss (>= 1.2.9-1.1) [$(OOO_ARCHS)], libxmlsec1-openssl (>= 1.2.9-1.1) [$(OOO_ARCHS)]
  else
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9) [$(OOO_ARCHS)], libxmlsec1-nss (>= 1.2.9) [$(OOO_ARCHS)], libxmlsec1-openssl (>= 1.2.9) [$(OOO_ARCHS)]
  endif
	CONFIGURE_FLAGS += --with-system-xmlsec
endif

ifeq "$(BUILD_CAIROCANVAS)" "y"
  ifeq "$(USE_SYSTEM_CAIRO)" "y"
	BUILD_DEPS+= , libcairo2-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS+= --with-system-cairo
  endif
else
	CONFIGURE_FLAGS+= --disable-cairo
endif

ifeq "$(BUILD_KDE)" "n"
	CONFIGURE_FLAGS+= --disable-kde
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-kde
	CONFIGURE_FLAGS+= --with-images="industrial crystal hicontrast tango $(HUMAN)"
else
	BUILD_DEPS += , kdelibs4-dev $(KDELIBS_MINVER) [$(OOO_ARCHS)]
	DBG_DBG_SUGGESTS+= , kdelibs-dbg, qt-x11-free-dbg
endif

ifeq "$(BUILD_BINFILTERS)" "y"
	CONFIGURE_FLAGS+= --enable-binfilter
	OOO_BINFILTER_DEP = openoffice.org$(VER)-filter-binfilter
else
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-filter-binfilter
endif

ifneq "$(BUILD_PYUNO)" "y"
	DEBHELPER_OPTIONS+= -Npython-uno
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(USE_SYSTEM_HSQLDB)" "y"
	BUILD_DEPS += , libhsqldb-java (>= 1.8.0.8-1) [$(OOO_JAVA_ARCHS)]
	BASE_HSQLDB_DEPENDS = libhsqldb-java (>= 1.8.0.8-1)
	CONFIGURE_FLAGS+= --with-system-hsqldb
  endif
  ifeq "$(USE_SYSTEM_BSH)" "y"
	BUILD_DEPS += , bsh (>= 2.0b4-1) [$(OOO_JAVA_ARCHS)]
	COMMON_BSH_DEPENDS = bsh (>= 2.0b4-1)
	CONFIGURE_FLAGS+= --with-system-beanshell
    ifneq "$(ETCH_BACKPORT)" "y"
	JAVA_GCJ_DEPENDS += , bsh-gcj
    endif
  endif
endif

ifeq "$(USE_SYSTEM_LPSOLVE)" "y"
  ifeq "$(USE_SHARED_LPSOLVE)" "y"
	BUILD_DEPS += , liblpsolve55-dev $(LPSOLVE_MIN_VERSION) [$(OOO_ARCHS)], lp-solve $(LPSOLVE_MIN_VERSION) [$(OOO_ARCHS)]
	LPSOLVE_DEP = lp-solve $(LPSOLVE_MIN_VERSION)
  else
	BUILD_DEPS += , liblpsolve55-dev $(LPSOLVE_MIN_VERSION) [$(OOO_ARCHS)]
  endif
	CONFIGURE_FLAGS += --with-system-lpsolve
  ifeq "$(USE_LIBSUITESPARSE)" "y"
	DBG_DBG_SUGGESTS+= , libsuitesparse-dbg
	BUILD_DEPS += , libsuitesparse-dev [$(OOO_ARCHS)]
  else	
	DBG_DBG_SUGGESTS+= , libufsparse-dbg
	BUILD_DEPS += , libufsparse-dev [$(OOO_ARCHS)]
  endif
endif

ifeq "$(USE_DBUS)" "y"
	BUILD_DEPS += , libdbus-glib-1-dev (>= 0.60) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --enable-dbus
endif

ifeq "$(USE_GSTREAMER)" "y"
	BUILD_DEPS += , libgstreamer-plugins-base0.10-dev [$(OOO_ARCHS)]
	GSTREAMER_PLUGINS_SUGGESTS += , gstreamer0.10-plugins-base, gstreamer0.10-plugins-good, gstreamer0.10-plugins-ugly, gstreamer0.10-plugins-bad, gstreamer0.10-ffmpeg
	DBG_DBG_SUGGESTS+= , libgstreamer0.10-0-dbg 
else
	CONFIGURE_FLAGS += --disable-gstreamer
endif

ifeq "$(USE_SYSTEM_NEON)" "y"
	BUILD_DEPS += , libneon$(NEONSONR)-gnutls-dev [$(OOO_ARCHS)]
	DBG_DBG_SUGGESTS+= , libneon$(NEONSONR)-gnutls-dbg
	CONFIGURE_FLAGS += --with-system-neon
endif

# CairoFonts patchset is applied for sid and this patch needs Gtk 2.10
ifneq "$(CAIRO_FONTS_PATCH)" "y"
	BUILD_DEPS += , libgtk2.0-dev [$(OOO_ARCHS)]
else
	BUILD_DEPS += , libgtk2.0-dev (>= 2.10) [$(OOO_ARCHS)]
  # cairo canvas might be disabled, but the patch needs cairo headers
  ifneq "$(BUILD_CAIROCANVAS)" "y"
	BUILD_DEPS += , libcairo2-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-cairo
  endif
endif

# Use compiler cache?  Include ccache in DEB_BUILD_OPTIONS for much faster rebuild times
# A complete build uses about 200Mb of compiler cache.
ifeq (ccache,$(findstring ccache,$(DEB_BUILD_OPTIONS)))
	CONFIGURE_FLAGS += --with-gcc-speedup=ccache
endif

# Small symbols?
ifeq "$(SMALL_SYMBOLS)" "y"
	CONFIGURE_FLAGS += --enable-symbols=SMALL
endif

# Restart build from a particular project?
# DEB_BUILD_OPTIONS=from=<projectname>
BUILD_FROM=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^\(.*,\)\?from=\([a-zA-Z0-9]\+\).*$$/\2/p')
export BUILD_FROM

# Build n projects in parallel?
# DEB_BUILD_OPTIONS=parallel=<n>
NUM_CPUS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^\(.*,\)\?parallel=\([0-9]\+\).*$$/\2/p')
ifeq "$(NUM_CPUS)" ""
	NUM_CPUS := 1
  ifeq "$(PARALLEL_BUILD)" "y"
	AVAIL_CPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
    	# according to Pavel Janik, build -P<number of cores> -- -P2
	# is ideal. This sets the first -P according to the number
	# of CPUs (where dual-core CPUS report 2, too)
	# Default to 2 on 1-processor machines anyway
    ifneq ($(AVAIL_CPUS),1)
	NUM_CPUS := $(shell expr $(AVAIL_CPUS))
    endif
  endif
endif
	CONFIGURE_FLAGS += --with-num-cpus=$(NUM_CPUS)

# Build python depends from current python version
PYMAJOR:=$(shell python -c "import sys; print sys.version_info[0]")
PYMINOR:=$(shell python -c "import sys; print sys.version_info[1]")
PYMINORPLUS1:=$(shell python -c "import sys; print sys.version_info[1]+1")
PYTHON_SITE:=debian/python-uno/usr/lib/python$(PYMAJOR).$(PYMINOR)/site-packages

CURDIR ?= $(shell pwd)

ifeq ($(GCC_VERSION),)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$$PATH
else
  ifeq ($(GCC_VERSION),snapshot)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:/usr/lib/gcc-snapshot/bin:$$PATH
	BUILD_LD_LIBRARY_PATH = /usr/lib/gcc-snapshot/lib:$$LD_LIBRARY_PATH
  else
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$(CURDIR)/debian/usr/bin:$$PATH
  endif
endif
BUILD_PATH := $(CURDIR)/debian/usr/bin:$(BUILD_PATH)

ifeq "$(BUILD_ONLY_LIBMYTHES)" "y"
clean:
	dh_testdir
	dh_testroot

	rm -rf ooo-build/build
	rm -rf debian/libmythes-dev
	
	dh_clean

build:
	mkdir -p ooo-build/build
	cd ooo-build/build && \
		tar xfvj ../src/$(CORE_TARBALL) $(TAG)/lingucomponent/source/thesaurus/mythes \
			$(TAG)/lingucomponent/inc && \
		tar xfvj ../src/$(SYSTEM_TARBALL) $(TAG)/dictionaries/util
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -O2 -Wall -ansi -pedantic -I. -I../../../inc/pch \
			-c mythes.cxx && \
		ar rc libmythes.a mythes.o && ranlib libmythes.a && \
		mv libmythes.a $(CURDIR)/ooo-build/build
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -fPIC -O2 -Wall -ansi -pedantic -I. -I../../../inc/pch \
			-c mythes.cxx && \
		ar rc libmythes_pic.a mythes.o && ranlib libmythes_pic.a && \
		mv libmythes_pic.a $(CURDIR)/ooo-build/build

install: $(CURDIR)/ooo-build/build/libmythes.a $(CURDIR)/ooo-build/build/libmythes_pic.a
	mkdir -p debian/libmythes-dev/usr/lib
	mkdir -p debian/libmythes-dev/usr/include
	mkdir -p debian/libmythes-dev/usr/share/mythes
	install -m644 \
		$(CURDIR)/ooo-build/build/libmythes.a \
		debian/libmythes-dev/usr/lib/libmythes.a
	install -m644 \
		$(CURDIR)/ooo-build/build/libmythes_pic.a \
		debian/libmythes-dev/usr/lib/libmythes_pic.a
	install -m644 $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes/mythes.hxx \
		debian/libmythes-dev/usr/include
	install -m755 $(SOURCE_TREE)/dictionaries/util/th_gen_idx.pl \
		debian/libmythes-dev/usr/share/mythes/th_gen_idx.pl

binary: binary-arch

binary-arch: install
	dh_testdir
	dh_testroot
	dh_installdocs -plibmythes-dev
	dh_installchangelogs -plibmythes-dev
	chmod 755 debian/scripts/installoverrides
	debian/scripts/installoverrides
	dh_link -plibmythes-dev
	dh_fixperms -plibmythes-dev
	dh_compress -plibmythes-dev
	dh_installdeb -plibmythes-dev
	dh_gencontrol -plibmythes-dev -- -v$(BINARY_VERSION)
	dh_md5sums -plibmythes-dev
	dh_builddeb -plibmythes-dev
else
# Because of the stampdir magic, when you actually want to run a rule
# over, you would have to remove the stamp manually.  Now, just do
# 'debian/rules <target> <target> ... FORCE=1', and the stamp files
# that match the given targets will be removed automagically.
stampdir_targets=files.backup icons.scale patch.apply build.prepare.artwork 
stampdir_targets+=build.prepare configure
stampdir_targets+=setupins setup install install-arch install-indep
stampdir_targets+=langpacks helppacks binary-common binary-arch binary-indep
ifdef FORCE
 DUMMY:=$(shell rm -f $(patsubst %,$(STAMP_DIR)/%,$(filter $(stampdir_targets),$(MAKECMDGOALS))))
endif

# If this is defined, then none of the 'long' commands will be run.  Useful
# for testing.
# test_rules=1

# Since the final stages use up a large amount of diskspace, provide targets to
# remove them without needing a full rebuild

# Clean up the package directories (about 830M) 
clean-debdir:
	dh_testdir
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	rm -f $(STAMP_DIR)/setup
	dh_clean

# Clean compilation results, but leave solver (about 600Mb in addition to instsetoo)
clean-objectdirs: clean-instsetoo
	dh_testdir
	find $(SOURCE_TREE) -maxdepth 2 -name $(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT) -type d -exec rm -rf {} \;

clean:
	dh_testroot
	dh_testdir

	# openoffice.applications and openoffice*.keys are not removed via make distclean
	# although they are generated files. Work around this.
	# FIXME: Fix the makefiles in ooo-build directly
	if [ -e ooo-build/desktop/openoffice.applications ]; then \
		$(MAKE) -C ooo-build/desktop clean || true;\
	fi
	if [ -r ooo-build/Makefile ]; then \
	  $(MAKE) -C ooo-build distclean || true ;\
	fi

ifeq "$(PRUNE_OOOBUILD)" "y"
	# prune upstream ooo-build files
	set -e; \
	cd ooo-build ;\
	rm -rf \
	 scratch/buildbot \
	 scratch/offapi-vba/constants/constant_types.rdb \
	 src/*.ico \
	 src/*.jpg \
	 src/*.xcf \
	 src/*_nld.* \
	 src/Draft.jpg \
	 src/file-bug*.png \
	 src/open*.png \
	 src/open{intro,about}*.bmp \
	 src/easter/*.png \
	 patches/test/*.tar \
	 www/images/*.png \
	 www/l10n/*.gif
	 if [ -d ooo-build/test ]; then \
		find ooo-build/test ooo-build/doc ooo-build/scratch -type f \
			\( -name '*.123' -o -name '*.doc' -o -name '*.lwp' \
			-o -name '*.odp' -o -name "*.ods" -o -name '*.odt' \
			-o -name '*.png' -o -name '*.ppt' -o -name '*.sx?' \
			-o -name '*.wb2' -o -name '*.WB2' -o -name '*.xls' \
			-o -name '*.XLS' -o -name '*.xlsx' -o -name '*.xls.gz' \
			-o -name '*.xls.bz2' \) \
			-exec rm {} \; ;\
	 fi
	 find ooo-build/scratch ooo-build/src -type f \
		\( -name '*.odg' -o -name '*.ods' -o -name '*.ott' \) \
		-exec rm {} \;
endif

	# remove file with space in the name
	rm -f ooo-build/test/macro/clock\ chart.xls

	rm -rf ooo-build/autom4ate.cache
	rm -rf ooo-build/build
	rm -rf ooo-build/desktop/*.desktop
	rm -f ooo-build/fonts/symbols.xls
	rm -f ooo-build/po/.intltool-merge-cache
	rm -f ooo-build/src/GSI*.sdf

	# remove generated symlinks / java wrappers
	rm -rf debian/usr

	# stlport home
	rm -rf $(CURDIR)/stlport
	# convenience link
	rm -f build

	rm -f ooo-build/src/GSI*err
	rm -f ooo-build/config.*

ifneq "$(OOO_L10N_DIR)" ""
	rm -rf $(OOO_L10N_DIR)
endif

	# uuencode upstream ooo-build binary files
	set -e; \
	cd ooo-build ; \
	 for f in \
	   desktop/*/*.png \
	   doc/*.ods \
	   doc/*.sxw \
	   patches/test/*.tar \
	   scratch/buildbot/buildbot-0.7.3/buildbot/*.png \
	   scratch/buildbot/buildbot-0.7.3/docs/PyCon-2003/*.png \
	   scratch/offapi-vba/constants/*.rdb \
	   scratch/sc-vba/TestDocuments/*.xls \
	   scratch/scsolver/docs/*.odg \
	   scratch/scsolver/workben/testcase/*.ods \
	   src/*.bmp \
	   src/*.ico \
	   src/*.jpg \
	   src/*.odb \
	   src/*.png \
	   src/easter/*.png \
	   templates/*.ott \
	   test/Lwp/*.lwp \
	   test/Lwp/*.png \
	   test/calc/*.xls \
	   test/draw/*.odp \
	   test/draw/*.ppt \
	   test/draw/*.sxd \
	   test/excel/*.xls \
	   test/excel/*.xlsx \
	   test/excel/*.xls.gz \
	   test/excel/*.xls.bz22 \
	   test/lotus/*.123 \
	   test/macro/*.ods \
	   test/macro/*.xls \
	   test/macro/ConvertTests/*.xls \
	   test/macro/vba_donated_docs/*.XLS \
	   test/macro/vba_donated_docs/*.xls \
	   test/qpro/*.png \
	   test/qpro/*.WB2 \
	   test/qpro/*.wb2 \
	   test/qpro/*.xls \
	   test/writer/*.odt \
	   test/writer/*.sxw \
	   www/images/*.png \
	   www/l10n/*.gif \
	   ; do \
	  if [ -s $$f ]; then \
	   uuencode $$f $$f > $$f.uu.tmp && \
	   ../debian/scripts/move-if-change $$f.uu.tmp $$f.uu; \
	   touch -r $$f $$f.uu ; \
	   rm -f $$f ; \
	  fi ; \
	 done

	# uuencode add-on ooo-build binary files
	set -e; \
	cd ooo-build ; \
	 for f in \
	   src/*.bz2 \
	   src/*.dll \
	   src/*.gz \
	   ; do \
	  if [ -s $$f ]; then \
	   case "$$f" in src/$(TAG)*) continue ; esac ; \
	   case "$$f" in src/OOo_*_src*) continue ; esac; \
	   uuencode $$f $$f > $$f.uu.tmp && \
	   ../debian/scripts/move-if-change $$f.uu.tmp $$f.uu; \
	   touch -r $$f $$f.uu ; \
	   rm -f $$f ; \
	  fi ; \
	 done

	dh_clean

	# Files created in debian directory
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	if [ -d "$(STAMP_DIR)" ]; then rm -rf "$(STAMP_DIR)"; fi
	rm -f debian/shlibs.override.stdlibs
	rm -f debian/libuno-cil.installcligac

ifeq "$(ENABLE_MONO)" "y"
	rm -rf $(MONO_SHARED_DIR)/.wapi
endif

ifeq "$(HELPISOS)" ""
	rm -rf images*
endif

	rm -f l10n.fdupes
	rm -f debian/shlibs.local

	rm -f debian/openoffice.org-dev-doc.doc-base.*
	rm -f debian/*.menu
	for i in base calc draw impress math writer; do \
		rm -f debian/openoffice.org-$$i.overrides.lintian; \
	done

	$(MAKE) -f debian/rules control


# Generate control file, because we have so many different languages
# Based on script by Martin Quinson <Martin.Quinson@tuxfamily.org>
control: debian/control
debian/control: debian/control.in debian/control.lang.in debian/control.help.in debian/control.fonts.in debian/control.sdk.in debian/control.mozilla.in debian/control.gcj.in debian/control.gcj.in debian/control.mono.in debian/control.qa.in debian/control.postgresql.in ooo-build/bin/openoffice-xlate-lang debian/rules
	chmod 755 ooo-build/bin/openoffice-xlate-lang
	sed -e "s#openoffice.orgVER#openoffice.org$(VER)#g" \
	    -e "s#broffice.orgVER#broffice.org$(VER)#g" \
	    -e "s#%$(DIST)=\([^%]*\)%#, \1#g#" \
	    -e "s#%[A-Za-z]*=[^%]*%##g#" \
	    -e "s#%BUILD_DEPS%#$(strip $(BUILD_DEPS))#g" \
	    < debian/control.in > debian/control

	for LNUM in $(filter-out en-US,$(LANGPACKISOS)) ; do \
	    [ "$$LNUM" = en-US -a "$(PKGSOURCE)" = "openoffice.org$(VER)-l10n" ] && continue; \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    case "$$LCODE" in \
		bn|gu-in|pa-in|ml-in|or-in|te-in|ta-in) \
			FONT_SUGGESTS=", ttf-`echo $$LNAME | tr A-Z a-z`-fonts"; \
			;; \
		hi-in|ne|mr-in) \
			FONT_SUGGESTS=", ttf-devanagari-fonts"; \
			;; \
		he) \
			FONT_SUGGESTS=", culmus"; \
			;; \
		km) \
			FONT_SUGGESTS=", ttf-khmeros"; \
			;; \
		lo) \
			FONT_SUGGESTS=", ttf-lao"; \
			;; \
		ar) \
			FONT_SUGGESTS=", ttf-arabeyes"; \
			;; \
		fa) \
			FONT_SUGGESTS=", ttf-farsiweb"; \
			;; \
		dz) \
			FONT_SUGGESTS=", ttf-dzongkha"; \
			;; \
		*) \
			FONT_SUGGESTS= ;; \
	    esac; \
	    case "$$LCODE" in \
		rw) \
			LOCALES_DEPENDS="locales (>= 2.3.6) | belocs-locales-data | locales-all (>= 2.3.6)" \
			;; \
		ss|ts|km|sr-cs|ns|tn) \
			LOCALES_DEPENDS="locales (>= 2.3.5-12) | belocs-locales-data | locales-all" \
			;; \
		as-in|or-in|nr) \
			LOCALES_DEPENDS="locales (>= 2.3.6.ds1-1) | locales-all (>= 2.3.6.ds1-1)" \
			;; \
		*) \
			LOCALES_DEPENDS="locales | belocs-locales-data | locales-all" \
			;; \
	    esac; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
	        -e "s|@FONT_SUGGESTS@|$$FONT_SUGGESTS|g" \
	        -e "s:@LOCALES_DEPENDS@:$$LOCALES_DEPENDS:g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.lang.in; \
	done

ifneq "$(HELPISOS)" ""
	for LNUM in $(HELPISOS) ; do \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.help.in; \
	done
	# en_US is in -common
	perl -pi -e 's|(Depends: openoffice.org$(VER)-writer), openoffice.org$(VER)-l10n-en-us|\1|' \
		debian/control
	perl -pi -e 's|(Depends: openoffice.org$(VER)-writer, openoffice.org$(VER)-l10n-en-us)|\1, ttf-devanagari-fonts|' \
		debian/control
endif
ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.gcj.in
  endif
endif
ifeq "$(ENABLE_MONO)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.mono.in
endif
ifeq "$(PACKAGE_QA_TOOLS)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.qa.in
endif
ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.mozilla.in
endif
ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.fonts.in
endif
ifeq "$(BUILD_DBG_PACKAGE)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.debug.in
endif
ifeq "$(PACKAGE_SDK)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.sdk.in
endif
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.postgresql.in

	perl -pi -e "s,%OOO_ARCHS%,$(OOO_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_JAVA_ARCHS%,$(OOO_JAVA_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_MONO_ARCHS%,$(OOO_MONO_ARCHS),g" debian/control
	perl -pi -e "s,%OOO_NPSOPLUGIN_ARCHS%,$(OOO_NPSOPLUGIN_ARCHS),g" debian/control

ifeq (he,$(findstring he,$(LANGPACKISOS)))
	perl -pi -e 's/openoffice.org-help-he$$/openoffice.org-help-he, openoffice.org-ctl-he/' debian/control
endif

ifeq "$(ETCH_BACKPORT)" "y"
	perl -pi -e 's/Package: openoffice.org$(VER)-core/Package: openoffice.org$(VER)-core\nRecommends: nfs-common/' debian/control
endif

	python debian/scripts/joinctrl.py < debian/control > debian/control.tmp
	mv debian/control.tmp debian/control

	# make -l10n-fi suggest openoffice.org-spellcheck-fi to
	# match myspell-fi and openoffice.org-soikko/-voikko
	perl -pi -e 's/myspell-dictionary-fi/myspell-dictionary-fi | openoffice.org-spellcheck-fi/' debian/control

.DELETE_ON_ERROR: debian/control

build: build-arch build-indep
build-arch: $(STAMP_DIR)/build
build-indep: $(STAMP_DIR)/build

# All 'important' targets have 2 lines.  The one that is run by
# dpkg-buildpackage or the user, and the one that does the actual work.  This
# indirection is needed so that the 'stamp' files that signify when a rule is
# done can be located in a separate 'stampdir'.  Recall that make has no way to
# know when a goal has been met for a phony target (like "build" or "install").
#
# At the end of each stampdir target, be sure to run the command 'touch $@'
# so that the target will not be run again.  Removing the file will make
# make run the target over.

configure: ooo-build/config.status
ooo-build/config.status: ooo-build/configure
	dh_testdir

	# Make sure needed scripts are executable
	set -e;\
	for FILE in debian/scripts/installoverrides \
		    debian/scripts/move-if-change \
		    debian/scripts/cleandupes \
		    debian/scripts/fix_image_rgb \
		    ooo-build/configure \
		    ooo-build/bin/[a-z]* ;\
	do \
	  chmod 755 $$FILE ;\
	done
	  
	mkdir -p $(STAMP_DIR)

	# uudecode files, omit GSI files
	set -e; \
	for uu in \
	  `find . -name *.uu` \
	  ; do \
	 case "$$uu" in ooo-build/src/GSI*) continue ; esac ; \
	 orig="`echo "$$uu" |sed -e 's#.uu$$##'`" ;\
	 if [ ! -s $$orig ]; then \
	  uudecode -o $$orig $$uu ; \
	  touch -r $$uu $$orig ; \
	 fi ; \
	done

ifneq ($(GCC_VERSION),)
  ifneq ($(GCC_VERSION),snapshot)
	# create links for gcc and g++ (and gij and gcj), ooo-build does not
	# honour overriding CC and CXX and we need to use gcc/g++ 4.0 or /
	# ant.mk wants gcj at the moment...
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/bin/$(CC_PREFIX)gcc-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcc
	ln -sf /usr/bin/$(CC_PREFIX)g++-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/g++
	#ln -sf /usr/bin/$(CC_PREFIX)gcj-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcj
	#ln -sf /usr/bin/gij-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gij
  else
    ifneq "$(CC_PREFIX)" ""
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcc $(CURDIR)/debian/usr/bin/gcc
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)g++ $(CURDIR)/debian/usr/bin/g++
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcj $(CURDIR)/debian/usr/bin/gcj
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gij $(CURDIR)/debian/usr/bin/gij
    endif
  endif
endif

ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# stlport home
	if [ ! -d stlport ]; then \
		mkdir -p stlport; \
		ln -sf /usr/include/stlport stlport/stlport; \
		ln -sf /usr/lib stlport/lib; \
	fi
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifneq "$(LANGPACKISOS)" "en-US"
	# extract extra GSIs
	find ooo-build/src -name "*.sdf.bz2" -exec bunzip2 -k \{\} \;
	for i in `find ooo-build/src/*.sdf.gz`; do gunzip -dc "$$i" > \
		ooo-build/src/`basename $$i .gz`; done
	# work around broken stuff in the GSI breaking the build in svx
	for iso in lv sh-YU sr-CS; do \
	  case " $(LANGPACKISOS) " in *\ $$iso\ *) ;; *) continue; esac; \
	  [ -f ooo-build/src/GSI_$$iso.sdf ] || continue; \
	  TMP=`mktemp -q`; \
	  grep -v OOO_LICENSE ooo-build/src/GSI_$$iso.sdf \
	    > $$TMP && mv $$TMP ooo-build/src/GSI_$$iso.sdf; \
	done
	# we change the message, and those translations therefore don't match anymore.
	for iso in $(LANGPACKISOS); do \
	  [ -f ooo-build/src/GSI_$$iso.sdf ] || continue; \
	  if [ "$$iso" = "ku" ]; then continue; fi; \
	  TMP=`mktemp -q`; \
	  grep -v RID_STR_EXTENSION_NOT_PRESENT ooo-build/src/GSI_$$iso.sdf \
	    > $$TMP && mv $$TMP ooo-build/src/GSI_$$iso.sdf; \
	done
    ifeq (he,$(findstring he,$(LANGPACKISOS)))
	# TKOS_BUILD_DATE is bogus, too
	if [ -f ooo-build/src/GSI_he.sdf ]; then \
	 TMP=`mktemp -q`; \
	 sed -e "s/TKOS_BUILD_DATE//g" < ooo-build/src/GSI_he.sdf \
	   > $$TMP && mv $$TMP ooo-build/src/GSI_he.sdf ; \
	fi
    endif
  endif
endif

	# Make convenience link
ifeq (ccache,$(findstring ccache,$(DEB_BUILD_OPTIONS)))
	if [ ! -L build ]; then ln -s ooo-build/build/current build ; fi
else
	if [ ! -L build ]; then ln -s $(SOURCE_TREE) build ; fi
endif

	# Make sure we have /proc mounted - otherwise idlc will fail later.
	test -r /proc/version

	# hrmpf. Empty in ooo-build and patch does not give them to us but
	# configure need them. Create them...
	touch ooo-build/distro-configs/Win32.conf.in
	touch ooo-build/distro-configs/Solaris.conf.in

	cd ooo-build ; \
		PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) ../ooo-build/configure $(CONFIGURE_FLAGS)

	touch $@

build: $(STAMP_DIR)/build
$(STAMP_DIR)/build: ooo-build/config.status
	dh_testdir

ifeq "$(BUILD_KDE)" "n"
	# hack to tell we want crystal icons nevertheless and they should be
	# extracted...
	if ! grep -q crystal ooo-build/bin/setup; then \
		cp ooo-build/bin/setup ooo-build/bin/setup.bak && \
		cat ooo-build/bin/setup.bak \
			| sed -e s/\'industrial/\'industrial\ crystal/ \
			> ooo-build/bin/setup && rm ooo-build/bin/setup.bak; \
	fi
endif

	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) DEFAULT_TO_ENGLISH_FOR_PACKING=1 $(MAKE)

	if [ -d ooo-build/build/current -a ! -d $(SOURCE_TREE) ]; then \
		ln -sf current $(SOURCE_TREE); \
	fi

	# DPKG is only set on with-EPM build what we don't do and the menu stuff
	# is only built wenn DPKG is set.. Same with PKGFORMAT.
	cd $(SOURCE_TREE)/sysui; \
		. $(CURDIR)/$(SOURCE_TREE)/*.sh; \
		PATH=$(BUILD_PATH) DPKG="dpkg" PKGFORMAT="deb" NO_PKG_MANGLE=go-away \
		../solenv/bin/build.pl && ../solenv/bin/deliver.pl

ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	# build non-PIC version of libmythes
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -O2 -Wall -ansi -pedantic -I. -I../../../inc/pch \
			-c mythes.cxx && \
		ar rc libmythes_nopic.a mythes.o && ranlib libmythes_nopic.a && \
		mv libmythes_nopic.a $(CURDIR)/$(SOURCE_TREE)
endif

	touch $@

test: $(STAMP_DIR)/test
$(STAMP_DIR)/test: $(STAMP_DIR)/build
ifneq (nocheck,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
ifeq "$(RUN_UNIT_TESTS)" "y"
	# build/run unit tests
	cd $(SOURCE_TREE)/instsetoo_native; \
		. $(CURDIR)/$(SOURCE_TREE)/*.sh; \
		PATH=$(BUILD_PATH) DPKG="dpkg" PKGFORMAT="deb" NO_PKG_MANGLE=go-away \
		../solenv/bin/build.pl --ignore --all check
endif
ifeq "$(RUN_SMOKETEST)" "y"
	# smoketest
	cd $(SOURCE_TREE)/smoketestoo_native && \
		mkdir -p $(CURDIR)/oosmoketest && \
		. $(CURDIR)/$(SOURCE_TREE)/*.sh; \
		export PATH=$(BUILD_PATH); \
		export TEMP=$(CURDIR)/oosmoketest; \
		if [ -n "$$DISPLAY" ]; then \
			../solenv/bin/build.pl; \
		else \
			xvfb-run -a ../solenv/bin/build.pl; \
		fi && \
		rm -rf $(CURDIR)/oosmoketest
endif
endif

	touch $@

install: $(STAMP_DIR)/install
$(STAMP_DIR)/install: $(STAMP_DIR)/build $(STAMP_DIR)/test
	dh_testdir
	dh_testroot

	rm -rf $(CURDIR)/debian/tmp
	# apparently setting this here globally doesn't work, so hack around. If we don't do this we get loads
	# of harmless, but log-bloating warnings
	if ! grep fakeroot $(SOURCE_TREE)/*.sh; then \
		perl -pi -e 's,LD_LIBRARY_PATH=\"(.*)\",LD_LIBRARY_PATH=\"/usr/lib/libfakeroot:\1\",' $(SOURCE_TREE)/*.sh; \
	fi
	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH="/usr/lib/libfakeroot:$(BUILD_LD_LIBRARY_PATH)" DESTDIR=$(CURDIR)/debian/tmp $(MAKE) install

ifeq "$(HELPISOS)" ""
	for i in common calc math draw writer impress base; do \
		rm -rf debian/tmp/pkg/openoffice.org-$$i/$(OODIR)/help; \
	done
else
	# install *english* help; we can't do that later since this is in
	# arch-dep and arch-indep stuff..
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-help-en-us/$(OODIR)/help/en; \
		for i in common calc math draw writer impress base; do \
			cp -r ./openoffice.org-$$i/$(OODIR)/help/en/* \
			 ./openoffice.org-help-en-us/$(OODIR)/help/en && \
			if [ "$$i" = "common" ]; then \
				rm -rf ./openoffice.org-$$i/$(OODIR)/help/en; \
			else \
				rm -rf ./openoffice.org-$$i/$(OODIR)/help; \
			fi; \
		done
	# save space by removing non-packaged localized help; we don't need
	# them anyway
	cd debian/tmp/pkg && \
		for iso in $(filter-out en-US,$(LANGPACKISOS)); do \
			if ! `echo $(HELPISOS) | grep -q $$iso`; then \
				rm -rf openoffice.org-help-$$iso; \
			fi; \
		done
endif

	# move resources which have been installed outside of common there
	cd debian/tmp/pkg; \
		for i in `find . -name "*en-US.res" | grep -v common`; do \
			mv $$i openoffice.org-common/$(OODIR)/program/resource/`basename $$i`; \
		done

ifeq "$(ENABLE_JAVA)" "y"
	# move officebean.jar into -officebean (They will be moved out of -core
	# in the install-arch target). Do the /usr/share/java move here already
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-core/usr/share/java/openoffice$(VER); \
		mv openoffice.org-common/$(OODIR)/program/classes/officebean.jar \
			openoffice.org-core/usr/share/java/openoffice$(VER)

	# move sdbc_hsqldb.jar into -base (do the move
	# to /usr/share/java here directly, we do it for the "rest"
	# later
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-base/usr/share/java/openoffice$(VER); \
		mkdir -p openoffice.org-base/$(OODIR)/program/classes; \
		mv openoffice.org-common/$(OODIR)/program/classes/sdbc_hsqldb.jar \
			openoffice.org-base/usr/share/java/openoffice$(VER); \
		ln -s /usr/share/java/openoffice$(VER)/sdbc_hsqldb.jar \
			openoffice.org-base/$(OODIR)/program/classes/sdbc_hsqldb.jar
endif

	# move .so to -dev
	cd debian/tmp/pkg; \
		mkdir -p -m755 openoffice.org-dev/$(OODIR)/program; \
		mv openoffice.org-common/$(OODIR)/program/*.so \
			openoffice.org-dev/$(OODIR)/program

	# somehow, these go into -common. Move them to -core here to be able
	# to install them later in install-arch
ifeq "$(ENABLE_MONO)" "y"
	cd debian/tmp/pkg; \
	mv openoffice.org-common/$(OODIR)/program/cli_*.dll  \
		openoffice.org-core/$(OODIR)/program
	if [ -d openoffice.org-common/$(OODIR)/program/assembly ]; then \
		rm -rf openoffice.org-common/$(OODIR)/program/assembly; \
	fi
endif
ifeq "$(PACKAGE_QA_TOOLS)" "y"
	cd debian/tmp/pkg; \
	mv openoffice.org-common/$(OODIR)/program/testtoolrc \
		openoffice.org-core/$(OODIR)/program
endif
	# remove eventually sneaked in .testtoolrc
	cd debian/tmp/pkg; \
	rm -f openoffice.org-common/$(OODIR)/program/.testtoolrc

	# Gtk quickstarter for the eggtrtray stuff, so to -gtk (via -gnome)
	mkdir -p -m755 debian/tmp/pkg/openoffice.org-gnome/$(OODIR)/share/xdg
	mv debian/tmp/pkg/openoffice.org-common/$(OODIR)/share/xdg/qstart.desktop \
		debian/tmp/pkg/openoffice.org-gnome/$(OODIR)/share/xdg

	# move gengal stuff into -dev
	mkdir -p debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program
	mv debian/tmp/pkg/openoffice.org-core/$(OODIR)/program/gengal* \
		debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program
	mv debian/tmp/pkg/openoffice.org-common/$(OODIR)/program/gengal  \
		debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program

ifeq "$(PACKAGE_SDK)" "y"
	# move SDK documentation into own package
	rm -rf debian/tmp/pkg/openoffice.org-dev-doc
	mkdir -p debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev-doc
	mv debian/tmp/pkg/openoffice.org-dev/usr/share/doc/openoffice.org \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev && \
	mv debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/sdk/docs \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev
	mkdir -p debian/tmp/pkg/openoffice.org-dev-doc/$(OODIR)/sdk
	mv debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/sdk/index.html \
		debian/tmp/pkg/openoffice.org-dev-doc/$(OODIR)/sdk
	rm -f debian/tmp/pkg/openoffice.org-dev/$(OODIR)/sdk/index.html
	rm -rf debian/tmp/pkg/openoffice.org-dev/usr/share/doc/openoffice.org \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/sdk
	mv debian/tmp/pkg/openoffice.org-dev/$(OODIR)/sdk/examples \
		debian/tmp/pkg/openoffice.org-dev-doc/$(OODIR)/sdk
endif

	# FIXME: Is there a reason this moved from -math to -common?
	mkdir -p debian/tmp/pkg/openoffice.org-math/$(OODIR)/share/registry/modules/org/openoffice/Office/Common/
	mv  debian/tmp/pkg/openoffice.org-common/$(OODIR)/share/registry/modules/org/openoffice/Office/Common/Common-math.xcu \
		debian/tmp/pkg/openoffice.org-math/$(OODIR)/share/registry/modules/org/openoffice/Office/Common/Common-math.xcu

	find debian/tmp ! -perm -200 | xargs -r chmod u+w

	touch $@

#
# Generate maintainer scripts
maintscripts: $(STAMP_DIR)/maintscripts
$(STAMP_DIR)/maintscripts: debian/shell-lib.sh debian/control
	dh_testdir

	rm -f debian/*.{pre,post}{inst,rm}

	# generate maintainer scripts from *.in
	for PKG in $(PACKAGES); do \
	  for FILE in postinst postrm preinst prerm; do \
	    MAINTSCRIPT=debian/$$PKG.$$FILE ; \
	    if [ -e $$MAINTSCRIPT.in ]; then \
	      sed -n '1,/^#INCLUDE_SHELL_LIB#$$/p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' > $$MAINTSCRIPT; \
	      grep LIBSUFFIX debian/scripts/vars.$(ARCH) >> $$MAINTSCRIPT; \
	      cat debian/shell-lib.sh >> $$MAINTSCRIPT; \
	      sed -n '/^#INCLUDE_SHELL_LIB#$$/,$$p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' >> $$MAINTSCRIPT; \
	      perl -pi -e "s/\@LANGPACKISOS\@/$(LANGPACKISOS)/" $$MAINTSCRIPT; \
	      perl -pi -e "s,\@OODIR\@,$(OODIR),g" $$MAINTSCRIPT; \
	      perl -pi -e "s/\@VER\@/$(VER)/g" $$MAINTSCRIPT; \
	    fi; \
	  done; \
	done
	
	touch $@

# Install files generated by setup into package directories
helppacks: $(STAMP_DIR)/helppacks
$(STAMP_DIR)/helppacks: $(STAMP_DIR)/install ooo-build/bin/openoffice-xlate-lang

ifneq "$(HELPISOS)" ""
	# we assume here that when we want to build/package help here we want
	# to do that with en-US anyway...
	rm -rf $(PKGDIR)-help-en-us $(PKGDIR)-help-en-us.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-help-en-us $(PKGDIR)-help-en-us || exit 1
  ifneq "$(HELPISOS)" "en-US"
	set -e; \
	for iso in $(filter-out en-US,$(HELPISOS)); do \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  rm -rf $(PKGDIR)-help-$$pkgiso $(PKGDIR)-help-$$pkgiso.*.debhelper; \
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-help-$$iso \
		$(PKGDIR)-help-$$pkgiso; \
	done
    ifeq (hi-IN,$(findstring hi-IN,$(HELPISOS)))
	for i in $(PKGDIR)-help-hi-in/$(OODIR)/help/hi-IN/*.css; do \
	  perl -pi -e 's|(font-family: )(.*)|\1 \"Lohit Hindi\", \2|' $$i; \
	done
    endif
  endif
endif

	touch $@

# Install files generated by setup into package directories
langpacks: $(STAMP_DIR)/langpacks
$(STAMP_DIR)/langpacks: $(STAMP_DIR)/install $(STAMP_DIR)/install-indep ooo-build/bin/openoffice-xlate-lang

	for ext in `echo $(LANGPACKISOS) |tr A-Z a-z` ; do \
	  rm -rf $(PKGDIR)-l10n-$$ext;\
	  rm -rf $(PKGDIR)-l10n-$$ext.*.debhelper;\
	done

	# ... and install the rest of the langpacks
	for iso in $(LANGPACKISOS); do \
	  if [ "$$iso" = "en-US" ]; then continue; fi ; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  rm -rf $(PKGDIR)-l10n-$$pkgiso $(PKGDIR)-l10n-$$pkgiso.*.debhelper; \
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-l10n-$$iso \
		$(PKGDIR)-l10n-$$pkgiso || exit 1; \
	done
	
	# remove empty uno_packages dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/uno_packages; \
	done
	
	# remove ooo dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/dict/ooo; \
	done

	# remove extra license files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/licenses; \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/readme/LICENSE*; \
	done
	
	# remove extra readme files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/readmes; \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/readme/README*; \
	done

	# remove empty help directories
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/help; \
	done

	# replace duplicate files in the langpacks with symlinks
	fdupes --quiet --recurse --sameline --size \
		debian/openoffice.org$(VER)-common/$(OODIR) \
		$(foreach d,$(shell echo $(filter-out en-US,$(LANGPACKISOS)) | tr A-Z a-z),debian/openoffice.org$(VER)-l10n-$(d)/$(OODIR)) \
		> l10n.fdupes
	debian/scripts/cleandupes --base=openoffice.org$(VER) --prefix=debian < l10n.fdupes

	touch $@

native-jars: $(STAMP_NATIVE_JARS)
$(STAMP_NATIVE_JARS): $(STAMP_DIR)/install
	rm -rf debian/tmp/native-jars
	mkdir -p debian/tmp/native-jars/gcj
	cp -a \
	    debian/tmp/pkg/openoffice.org-common/$(OODIR)/program/classes/*.jar \
		debian/tmp/native-jars/
	cp -a \
	    debian/tmp/pkg/openoffice.org-core/usr/share/java/openoffice$(VER)/*.jar \
	        debian/tmp/native-jars/
	cp -a \
	    debian/tmp/pkg/openoffice.org-base/usr/share/java/openoffice$(VER)/*.jar \
	        debian/tmp/native-jars/
	cp -a \
	    debian/tmp/pkg/openoffice.org-writer/$(OODIR)/program/classes/*.jar \
	        debian/tmp/native-jars
	: # remove problematic ones
	rm -f debian/tmp/native-jars/ridl.jar
	: # compile the others
	AOT_MAKEFLAGS=-j$(NUM_CPUS) aot-compile -L /usr/lib/gcj/openoffice \
	    debian/tmp/native-jars debian/tmp/native-jars/gcj
	$(GCJ_DBTOOL) -n debian/tmp/native-jars/tmp.db 64
	find debian/tmp/native-jars/gcj -name '*.db' -print0 \
	    | xargs -r -0 \
		$(GCJ_DBTOOL) -m debian/tmp/native-jars/tmp.db debian/tmp/native-jars/tmp.db || exit 1
	rm -f debian/tmp/native-jars/gcj/*.db
	touch $@

# Install files generated by setup into arch-dependent package directories
install-arch: $(STAMP_DIR)/install-arch
$(STAMP_DIR)/install-arch: $(STAMP_DIR)/install $(STAMP_NATIVE_JARS)
	dh_testdir
	dh_testroot
	umask 022

	# Copy files placed by ooo-build/bin/package-ooo	
	for i in base calc core draw impress math writer gnome dev headless \
		filter-binfilter; do \
	  rm -rf $(PKGDIR)-$$i $(PKGDIR)-$$i.*.debhelper ;\
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-$$i $(PKGDIR)-$$i || exit 1;\
	done

	rm -rf debian/mozilla-openoffice.org debian/mozilla-openoffice.org.*.debhelper
	rm -rf $(PKGDIR) $(PKGDIR).*.debhelper
	rm -rf $(PKGDIR)-evolution $(PKGDIR)-evolution.*.debhelper
ifeq "$(BUILD_KDE)" "y"
	rm -rf $(PKGDIR)-kde $(PKGDIR)-kde.*.debhelper
endif

	dh_installdirs -a

ifeq "$(BUILD_KDE)" "y"
	mkdir -p -m755 $(PKGDIR)-kde/$(OODIR)/program
	for f in kdefilepicker fps_kde.uno.so libvclplug_kde[0-9]*.so libkab*so kdebe*so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-kde/$(OODIR)/program || exit 1 ;\
	done
endif

	# move the GNOME stuff which are *not* in gid_Module_Optional_Gnome
	# (which is moved into -gnome in package-ooo) into -gnome
	mkdir -p -m755 $(PKGDIR)-gnome/$(OODIR)/program
	for f in gnome-open-url.bin fps_gnome.uno.so libvclplug_gtk[0-9]*.so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done
	for f in libeggtray* libqstart_gtk*; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done

	# split out gtk stuff
	rm -rf $(PKGDIR)-gtk
	mkdir -p -m755 $(PKGDIR)-gtk/$(OODIR)/program
	mv $(PKGDIR)-gnome/$(OODIR)/program/* $(PKGDIR)-gtk/$(OODIR)/program/
	mkdir -p -m755 $(PKGDIR)-gtk/$(OODIR)/share
	mv $(PKGDIR)-gnome/$(OODIR)/share/xdg $(PKGDIR)-gtk/$(OODIR)/share
	mv $(PKGDIR)-gtk/$(OODIR)/program/ucpgvfs1.uno.so \
		$(PKGDIR)-gnome/$(OODIR)/program/
	mv $(PKGDIR)-gtk/$(OODIR)/program/gnome-set-default-application \
		$(PKGDIR)-gnome/$(OODIR)/program/
	mv $(PKGDIR)-gtk/$(OODIR)/program/gconfbe* \
		$(PKGDIR)-gnome/$(OODIR)/program

	mkdir -p -m755 $(PKGDIR)-evolution/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libevoab2.so $(PKGDIR)-evolution/$(OODIR)/program

ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
	mkdir -p -m755 debian/mozilla-openoffice.org/$(OODIR)/program
	for f in libnpsoplugin.so nsplugin; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f debian/mozilla-openoffice.org/$(OODIR)/program; \
	done
	cd debian/mozilla-openoffice.org && \
		for b in iceape iceweasel mozilla mozilla-firefox firefox; do \
			mkdir -p usr/lib/$$b/plugins && \
				ln -sf /$(OODIR)/program/libnpsoplugin.so \
				   usr/lib/$$b/plugins/libnpsoplugin.so; \
		done
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/libnpsoplugin.so
	rm -f $(PKGDIR)-core/$(OODIR)/program/nsplugin
endif

	# OOo's package split sucks...
	mv $(PKGDIR)-core/$(OODIR)/program/libsw* \
		$(PKGDIR)-writer/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libsd6* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdd* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdui* \
		$(PKGDIR)-draw/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/slideshow.uno.so \
		$(PKGDIR)-impress/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-base/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libdba* \
		$(PKGDIR)-base/$(OODIR)/program
	for i in odbcbase2 dbpool2 jdbc2 odbc2 sdbc2 mysql2 adabas2; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
ifeq "$(ENABLE_JAVA)" "y"
	for i in jdbc2 hsqldb2; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
endif
	mv $(PKGDIR)-core/$(OODIR)/program/libflat*so \
		$(PKGDIR)-base/$(OODIR)/program; \

	# move vba stuff into -calc, they are calc-only and linked to
	# libsc*
	for i in libvbaobj vbaevents; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$i*uno.so \
			$(PKGDIR)-calc/$(OODIR)/program; \
	done
	mv $(PKGDIR)-core/$(OODIR)/program/scsolver.uno.so \
		$(PKGDIR)-calc/$(OODIR)/program
ifneq "$(USE_SYSTEM_LPSOLVE)" "y"
	mv $(PKGDIR)-core/$(OODIR)/program/liblpsolve55.so \
		$(PKGDIR)-calc/$(OODIR)/program
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(USE_SYSTEM_HSQLDB)" "y"
	# link to system hsqldb
	ln -sf /usr/share/java/hsqldb.jar \
	        $(PKGDIR)-base/$(OODIR)/program/classes/hsqldb.jar
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-officebean
	mkdir -p -m755 $(PKGDIR)-officebean/$(OODIR)/program/classes
	mkdir -p -m755 $(PKGDIR)-officebean/usr/share/java
	mv $(PKGDIR)-core/usr/share/java/openoffice$(VER) \
		$(PKGDIR)-officebean/usr/share/java
	ln -s /usr/share/java/openoffice$(VER)/officebean.jar \
		 $(PKGDIR)-officebean/$(OODIR)/program/classes/officebean.jar
	mv $(PKGDIR)-core/$(OODIR)/program/libofficebean.so \
		$(PKGDIR)-officebean/$(OODIR)/program
endif

	mkdir -p -m755 $(PKGDIR)-base/usr/share/applications \
	               $(PKGDIR)-core/usr/share/applications

ifeq "$(PACKAGE_QA_TOOLS)" "y"
	mkdir -p -m755 $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/ootestapi $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/ootesttool $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/oosmoketest $(PKGDIR)-qa-tools/usr/bin

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/program
	for f in testtool.bin libcommuni* libsimplecm*; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-qa-tools/$(OODIR)/program; \
	done

  ifeq "$(ENABLE_JAVA)" "y"
	mkdir -p -m755 $(PKGDIR)-qa-tools/usr/share/java/openoffice$(VER)
	cp $(SOURCE_TREE)/qadevOOo/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/class/OOoRunnerLight.jar \
		$(PKGDIR)-qa-tools/usr/share/java/openoffice$(VER)
  endif

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/smoketest
	install -m755 $(SOURCE_TREE)/smoketestoo_native/smoketest.pl \
		$(SOURCE_TREE)/smoketestoo_native/testlog.pl \
		$(PKGDIR)-qa-tools/$(OODIR)/smoketest

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/presets/basic/Standard
	install -m644 $(SOURCE_TREE)/smoketestoo_native/data/scripts/*.x* \
		$(PKGDIR)-qa-tools/$(OODIR)/presets/basic/Standard

	mv $(PKGDIR)-core/$(OODIR)/program/testtoolrc \
		$(PKGDIR)-qa-tools/$(OODIR)/program && \
	chmod 644 $(PKGDIR)-qa-tools/$(OODIR)/program/testtoolrc
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/testtool.bin
	rm -f $(PKGDIR)-core/$(OODIR)/program/libcommuni*
	rm -f $(PKGDIR)-core/$(OODIR)/program/libsimplecm*
	rm -f $(PKGDIR)-common/$(OODIR)/program/testtoolrc
endif

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
		sed -e 's,Exec=$${UNIXPRODUCTNAME}$${PRODUCTVERSION} \(.*\) %U,Exec=ooffice$(VER) \1 %U,' \
		    -e 's,Icon=$${WITHOUTDOTUNIXPRODUCTNAME}[0123456789]\+,Icon=ooo,' \
		    -e 's,Name=$${PRODUCTNAME} $${PRODUCTVERSION},Name=OpenOffice.org $(VER),' \
		    -e 's/  / /' \
		   < $$dirname/$$p.desktop \
		   > $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop || exit 1 ;\
	done

	# qstart.desktop is different to the above. Should be handled by
	# --with-unix-wrapper of ooo-build but that somehow doesn't work as
	# expected. FIXME.
	PRODUCTVERSION=`grep PRODUCTVERSION $(SOURCE_TREE)/sysui/desktop/productversion.mk | head -n 1 | cut -d"=" -f2 | sed -e s/\ //g`; \
	sed -i -e "s,Exec=openoffice.org$$PRODUCTVERSION,Exec=ooffice$(VER)," \
		-e "s,Name=OpenOffice.org $$PRODUCTVERSION,Name=OpenOffice.org $(VER)," \
		-e "s/  / /" \
		$(PKGDIR)-gtk/$(OODIR)/share/xdg/qstart.desktop
	# we don't need the share/xdgs except qstart
	for f in `find debian -name '*.desktop' | grep xdg | grep -v qstart`; do \
		rm -f $$f; done
	for f in `find debian -name '*.desktop'`; do \
		sed -i -e '/^Comment\[de\]/s/- *\([a-zA-Z0-9]*\) *macht.*glich.*$$/mit \1/' $$f; \
		if ! grep -q X-KDE-Protocols $$f; then \
			echo 'X-KDE-Protocols=file,http,smb,ftp,webdav' >> $$f; \
		fi; \
	done
	sed -i -e '/^MimeType/s,text/rtf,text/rtf;application/rtf,' \
		$(PKGDIR)-writer/usr/share/applications/ooo$(VER)-writer.desktop
	sed -i -e 's/Office;/Office;Graphics;/' $(PKGDIR)-draw/usr/share/applications/ooo$(VER)-draw.desktop
	# invalid, according to lintian. make it shut up.
	for i in writer calc impress draw math base; do \
		perl -pi -e 's/Application;//; s/X-Red-Hat-Base;//; s/X-SuSE-Core-Office;//; s/X-MandrivaLinux-.*;//;' $(PKGDIR)-$$i/usr/share/applications/ooo$(VER)-$$i.desktop; \
	done
	perl -pi -e 's/Application;//' $(PKGDIR)-gtk/$(OODIR)/share/xdg/qstart.desktop
else
	# menu files from ooo-build/desktop
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
			sed -e '/^TryExec=.*/d' \
			    -e "s,^Exec=.*,Exec=ooffice$(VER) -$$p %U," \
			    -e "s,^Icon=.*,Icon=ooo-$$p," \
			    -e '/^Name=/s,  , ,' \
			    -e 's/@STARTUPNOTIFY@/true/' \
			    -e '/^Categories/s/Office/Application;Office/' \
				ooo-build/desktop/$$p.desktop \
				> $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop || exit 1 ;\
	done
endif
	# add version to .menu and .overrides.lintian
	ICONVERSION=`grep PRODUCTVERSION $(SOURCE_TREE)/sysui/desktop/productversion.mk | head -n 1 | cut -d"=" -f2 | sed -e s/\ //g | sed -e s/\\\.//`; \
	for i in base calc draw impress math writer; do \
		cat debian/openoffice.org$(VER)-$$i.menu.in \
			| sed -e s/@ICONVERSION@/$$ICONVERSION/ \
			> debian/openoffice.org$(VER)-$$i.menu; \
		cat debian/openoffice.org$(VER)-$$i.overrides.lintian.in \
			| sed -e s/@ICONVERSION@/$$ICONVERSION/ \
			> debian/openoffice.org$(VER)-$$i.overrides.lintian; \
	done

ifeq "$(BUILD_PYUNO)" "y"
	# PyUNO packging
	rm -rf debian/python-uno debian/python-uno.*.debhelper
	cp -r --preserve=mode debian/tmp/pkg/python-uno debian/python-uno
	
	install -d $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/uno.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/unohelper.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/pyuno.so $(PYTHON_SITE)
	touch debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u+w debian/python-uno/$(OODIR)/program/pythonloader.unorc
	( echo '[Bootstrap]'; \
	  echo 'PYTHONHOME=file:///usr/lib/python$(PYMAJOR).$(PYMINOR)' ;\
	  echo 'PYTHONPATH=$$PYTHONHOME $$PYTHONHOME/site-packages $$PYTHONHOME/lib-dynload $$PYTHONHOME/lib-tk $$ORIGIN' \
	) > debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u-w debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod 755 debian/python-uno/$(OODIR)/program/mailmerge.py
	perl -pi -e 's,/bin,/usr/bin,' \
		 debian/python-uno/$(OODIR)/program/mailmerge.py

	mkdir -p debian/python-uno/usr/share/doc/python-uno
	for i in doc demo; do \
		cp -r $(SOURCE_TREE)/pyuno/$$i \
		  debian/python-uno/usr/share/doc/python-uno; \
	done
	cd debian/python-uno/usr/share/doc/python-uno && \
		find . -type d -name "CVS" | xargs -r rm -rf
endif

ifeq "$(ENABLE_MONO)" "y"
	# Mono bindings
	mkdir -p -m755 debian/libuno-cil/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libcli* \
		debian/libuno-cil/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/cli_*.dll \
		debian/libuno-cil/$(OODIR)/program
	mkdir -p debian/libuno-cil/usr/lib/mono
	mkdir -p debian/libuno-cil/usr/lib/pkgconfig
	cat debian/tmp/usr/lib/pkgconfig/mono-openoffice$(VER).pc \
		| sed -e s,/usr/lib/mono/openoffice,/$(OODIR)/program,g \
		> debian/libuno-cil/usr/lib/pkgconfig/mono-openoffice$(VER).pc
endif

ifeq "$(PACKAGE_SDK)" "y"
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# when we use external stlport, we just can and should do a symlink
	# for the SDK includes
	cd $(PKGDIR)-dev/usr/include/openoffice$(VER) && \
		rm -rf stl && ln -s /usr/include/stlport stl
    ifeq "$(USE_STLPORT5)" "y"
	perl -pi -e "s/STORELIB=-lstore/STORELIB=-lstore\nSTLPORT_VER=500/" \
		 $(PKGDIR)-dev/$(OODIR)/sdk/settings/settings.mk
    endif
  endif
  ifeq "$(ENABLE_JAVA)" "y"
	# move SDK Java stuff into /usr/share/java/openoffice
	rm -f $(PKGDIR)-dev/$(OODIR)/sdk/classes
	mkdir -p $(PKGDIR)-dev/usr/share/java/openoffice$(VER)/win
	mkdir -p $(PKGDIR)-dev/usr/share/java/openoffice$(VER)/com/sun/star/lib/loader
	mkdir -p $(PKGDIR)-dev/$(OODIR)/sdk/classes/com/sun/star/lib/loader
	mv $(PKGDIR)-dev/usr/share/openoffice/sdk/classes/com/sun/star/lib/loader/* \
		$(PKGDIR)-dev/usr/share/java/openoffice$(VER)/com/sun/star/lib/loader && \
	mv $(PKGDIR)-dev/usr/share/openoffice/sdk/classes/win \
		$(PKGDIR)-dev/$(OODIR)/sdk/classes
	chmod 644 $(PKGDIR)-dev/$(OODIR)/sdk/classes/win/unowinreg.dll
	cd $(PKGDIR)-dev/$(OODIR)/sdk/classes/com/sun/star/lib/loader && \
		for i in $(CURDIR)/$(PKGDIR)-dev/usr/share/java/openoffice$(VER)/com/sun/star/lib/loader/*.class; do \
			ln -s `echo $$i | sed -e 's,$(CURDIR)/$(PKGDIR)-dev,,'` `basename $$i`; \
		done
	rm -rf $(PKGDIR)-dev/usr/share/openoffice/sdk
  endif
	chmod 644 $(PKGDIR)-dev/$(OODIR)/sdk/configure.pl
	for i in csh csh.in; do \
		perl -pi -e 's,/usr/bin/csh,/bin/csh,'\
			$(PKGDIR)-dev/$(OODIR)/sdk/setsdkenv_unix.$$i; \
	done
	# create wrapper scripts
	cd $(PKGDIR)-dev/$(OODIR)/sdk/$(OS)/bin && \
	for i in *; do \
		if [ "$$i" = "regcomp" -o "$$i" = "regcomp.bin" ]; then \
			continue; \
		fi; \
		mv $$i $$i.bin && \
		( \
		  echo "#!/bin/sh"; \
		  echo "# wrapper script for OOos SDK programs"; \
		  echo ""; \
		  echo 'LD_LIBRARY_PATH=/$(OODIR)/program /$(OODIR)/sdk/$(OS)/bin/`basename $$0`.bin "$$@"'; \
		) > $$i; \
		chmod 755 $$i; \
	done && \
	( \
	  echo "#!/bin/sh"; \
	  echo "# wrapper script for OOos SDK programs"; \
	  echo ""; \
	  echo 'LD_LIBRARY_PATH=/$(OODIR)/program /$(OODIR)/sdk/$(OS)/bin/`basename $$0`.bin "$$@"'; \
	) > regcomp; \
	chmod 755 regcomp
        # remove symlink, it should be in -dev-doc
	cd $(PKGDIR)-dev/$(OODIR)/sdk && \
		rm docs

	# install gsicheck into -dev
	install -m755 $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD/$$OUTPATH$$PROEXT)/bin/gsicheck \
		$(PKGDIR)-dev/$(OODIR)/program/gsicheck.bin
	( \
	  echo '#! /bin/sh'; \
	  echo 'LD_LIBRARY_PATH=$${LD_LIBRARY_PATH:+$$LD_LIBRARY_PATH:}/$(OODIR)/program'; \
	  echo 'export LD_LIBRARY_PATH'; \
	  echo 'exec /$(OODIR)/program/gsicheck.bin "$$@"'; \
	) > $(PKGDIR)-dev/$(OODIR)/program/gsicheck
	chmod 755 $(PKGDIR)-dev/$(OODIR)/program/gsicheck
endif

ifeq "$(INTERNAL_STDLIBS)" "y"
	# we have to do this manually; specifying --without-system-stdlibs
	# won't work because the odering of the configure arguments...
	LIBSTDCPP=`readlink `PATH=$(BUILD_PATH) g++ --print-file-name=libstdc++.so``; \
	LIBGCC=`readlink `PATH=$(BUILD_PATH) gcc --print-file-name=libgcc_s.so``; \
	LIBSTDCPP_SOVER=`echo $$LIBSTDCPP | sed -e 's/.*\.//'`; \
	LIBGCC_SOVER=`echo $$LIBGCC | sed -e 's/.*\.//'`; \
	cp $$LIBSTDCPP $(PKGDIR)-core/$(OODIR)/program; \
	cp $$LIBGCC $(PKGDIR)-core/$(OODIR)/program; \
	echo "libstdc++	$$LIBSTDCPP_SOVER" > debian/shlibs.override.stdlibs; \
	echo "libgcc_s	$$LIBGCC_SOVER" >> debian/shlibs.override.stdlibs
endif
ifeq "$(USE_SYSTEM_STLPORT)" "y"
	rm -f $(PKGDIR)-core/$(OODIR)/program/libstlport*
  ifneq "$(USE_STLPORT5)" "y"
	ln -s `readlink /usr/lib/libstlport_gcc.so` \
		debian/openoffice.org$(VER)-core/$(OODIR)/program/libstlport_gcc.so
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
    ifneq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	rm -rf $(PKGDIR)-gcj/usr/lib/gcj
	mkdir -p $(PKGDIR)-gcj/usr/lib/gcj/openoffice
	cp -p debian/tmp/native-jars/gcj/* $(PKGDIR)-gcj/usr/lib/gcj/openoffice
	mkdir -p $(PKGDIR)-gcj/usr/share/gcj/classmap.d
	cp -p debian/tmp/native-jars/tmp.db \
		$(PKGDIR)-gcj/usr/share/gcj/classmap.d/openoffice.org.db
    endif
  endif
endif

	# install some docs.
	mkdir -p $(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-base
	cp ooo-build/doc/using-mysql-databases.txt \
		$(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-base
	cp ooo-build/doc/data-from-remote-mysql-server.txt \
		$(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-base

ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	# install libmythes and th_gen_idx.pl (on archs where we build OOo)
	rm -rf debian/libmythes-dev
	mkdir -p debian/libmythes-dev/usr/lib
	mkdir -p debian/libmythes-dev/usr/include
	mkdir -p debian/libmythes-dev/usr/share/mythes
	install -m644 \
		$(SOURCE_TREE)/lingucomponent/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/lib/libmythes.a \
		debian/libmythes-dev/usr/lib/libmythes_pic.a
	install -m644 \
		$(SOURCE_TREE)/libmythes_nopic.a \
		debian/libmythes-dev/usr/lib/libmythes.a
	install -m644 $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes/mythes.hxx \
		debian/libmythes-dev/usr/include
	install -m755 $(SOURCE_TREE)/dictionaries/util/th_gen_idx.pl \
		debian/libmythes-dev/usr/share/mythes/th_gen_idx.pl
endif

ifeq "$(PACKAGE_SDK)" "y"
  ifeq "$(ENABLE_JAVA)" "y"
	# install the UNO Java sources for e.g. eclipse
	mkdir -p $(CURDIR)/$(PKGDIR)-dev/usr/share/java/openoffice$(VER)
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin && \
		for i in juh jurt jut ridl unoloader; do \
			cp $${i}_src.zip \
			  $(CURDIR)/$(PKGDIR)-dev/usr/share/java/openoffice; \
		done
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	# hrmpf, again something like that, we really need to find the root cause for that
	ln -s libjava_uno.so \
		$(PKGDIR)-base/$(OODIR)/program/libjava_uno
endif

	# move impressgraphics filter stuff into -impress
	mkdir -p $(PKGDIR)-draw/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types
	mkdir -p $(PKGDIR)-draw/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter
	mv $(PKGDIR)-draw/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types/fcfg_impressgraphics_types.xcu \
	  $(PKGDIR)-impress/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types
	mv $(PKGDIR)-draw/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter/fcfg_impressgraphics_filters.xcu \
	  $(PKGDIR)-impress/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter

ifeq "$(ENABLE_JAVA)" "y"
	# move writer2latex.jar into the right dir
	mkdir -p $(PKGDIR)-writer/usr/share/java/openoffice$(VER)
	mv $(PKGDIR)-writer/$(OODIR)/program/classes/writer2latex.jar \
		$(PKGDIR)-writer/usr/share/java/openoffice$(VER) && \
	ln -s /usr/share/java/openoffice$(VER)/writer2latex.jar \
		$(PKGDIR)-writer/$(OODIR)/program/classes/writer2latex.jar
endif

	# remove empty resource directories
	for i in draw base writer impress calc math; do \
		rm -rf $(PKGDIR)-$$i/$(OODIR)/program/resource; \
	done

	# install scsolvers ChangeLog
	install -D -m644 $(SOURCE_TREE)/scsolver/ChangeLog \
		$(PKGDIR)-calc/usr/share/doc/openoffice.org$(VER)-calc/changelog.scsolver

	# move rpt stuff into -report-builder
	rm -rf $(PKGDIR)-report-builder
	mkdir -p $(PKGDIR)-report-builder/$(OODIR)/program
	mv $(PKGDIR)-base/$(OODIR)/program/librpt* \
		$(PKGDIR)-report-builder/$(OODIR)/program
ifeq "$(ENABLE_JAVA)" "y"
	# install this; we need to register this ourselved later in
	# the maintainer scripts. This is intended upstream (**rpt* stuff
	# in 2.3 and the actual report builde as an extension, without which
	# the *rpt* stuff is a no-op.
	install -D -m644 $(SOURCE_TREE)/reportdesign/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin/sun-report-builder.oxt \
		$(PKGDIR)-report-builder/$(OODIR)/share/extension/install/sun-report-builder.oxt
	# unneeded license files
	for i in THIRDPARTYREADMELICENSE.html license_en-US.html readme_en-US.html readme_en-US.txt; do \
		zip -d $(CURDIR)/$(PKGDIR)-report-builder/$(OODIR)/share/extension/install/sun-report-builder.oxt $$i; \
	done
endif

	rm -rf $(PKGDIR)-sdbc-postgresql
	install -D -m644 $(SOURCE_TREE)/connectivity/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/lib/postgresql-sdbc-$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g).zip \
		$(PKGDIR)-sdbc-postgresql/$(OODIR)/share/extension/install/postgresql-sdbc-$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g).zip

	for i in $(ARCH_DEP_PACKAGES); do \
		install -D -m644 debian/presubj \
			debian/$$i/usr/share/bug/$$i/presubj; \
		if [ -e debian/$$i.control.bug ]; then \
			install -D -m644 debian/$$i.control.bug \
				debian/$$i/usr/share/bug/$$i/control; \
		fi ;\
	done

	touch $@
	
broffice: $(STAMP_DIR)/broffice
$(STAMP_DIR)/broffice: $(STAMP_DIR)/install $(STAMP_DIR)/install-arch $(STAMP_DIR)/install-indep $(STAMP_DIR)/langpacks
	dh_testdir
	dh_testroot
	
	# BrOffice.org
	rm -rf debian/broffice.org
	mkdir -p debian/broffice.org/usr/bin
	mkdir -p debian/broffice.org/usr/share/applications
	mkdir -p debian/broffice.org/usr/lib/openoffice/program/resource
	mkdir -p debian/broffice.org/usr/lib/openoffice/share/registry/data/org/openoffice
	cat $(PKGDIR)-common/$(OODIR)/program/bootstraprc \
		| sed -e "s/OpenO/BrO/" | sed -e "s/openo/bro/" \
		> debian/broffice.org/$(OODIR)/program/bootstraprc
	cat $(PKGDIR)-common/$(OODIR)/program/versionrc \
		| sed -e "s/en-US/pt-BR/" | sed -e "s/openo/bro/" \
		> debian/broffice.org/$(OODIR)/program/versionrc
	cat $(PKGDIR)-common/$(OODIR)/share/registry/data/org/openoffice/Setup.xcu \
		| sed -e "s/OpenO/BrO/" \
		> debian/broffice.org/$(OODIR)/share/registry/data/org/openoffice/Setup.xcu
	for iso in $(LANGPACKISOS); do \
		if [ "$$iso" = "en-US" ]; then p=common; else p=l10n-`echo $$iso | tr A-Z a-z`; fi; \
		cat $(PKGDIR)-$$p/$(OODIR)/program/resource/ooo$(SRCNUM)$$iso.res \
		| sed -e "s/OpenO/BrO/" \
		> debian/broffice.org/$(OODIR)/program/resource/ooo$(SRCNUM)$$iso.res; \
	done
	for i in writer calc draw impress math base; do \
		cat $(PKGDIR)-$$i/usr/share/applications/ooo-$$i.desktop \
			| sed -e "s/ooff/broff/" | sed -e "s/OpenO/BrO/" \
			> debian/broffice.org/usr/share/applications/ooo-$$i.desktop; \
	done
	cat $(PKGDIR)-common/usr/share/applications/ooo-extension.desktop \
		| sed -e "s/ooff/broff/" | sed -e "s/OpenO/BrO/" \
		> debian/broffice.org/usr/share/applications/ooo-extension.desktop
	cat $(PKGDIR)-common/usr/share/applications/ooo-template.desktop \
		| sed -e "s/ooff/broff/" | sed -e "s/OpenO/BrO/" \
		 > debian/broffice.org/usr/share/applications/ooo-template.desktop
	if dpkg-parsechangelog | grep urgency | grep -q "\~.*m"; then \
		 debian/scripts/fix_image_rgb \
			 $(SOURCE_TREE)/ooo_custom_images/dev_nologo_broffice/introabout/intro.bmp \
			 debian/broffice.org/$(OODIR)/program/intro.bmp; \
	else \
		debian/scripts/fix_image_rgb \
			$(SOURCE_TREE)/ooo_custom_images/nologo_broffice/introabout/intro.bmp \
			debian/broffice.org/$(OODIR)/program/intro.bmp; \
	fi
	install -m644 $(SOURCE_TREE)/ooo_custom_images/broffice/introabout/about.bmp \
		debian/broffice.org/$(OODIR)/program/about.bmp
	cd debian/broffice.org/usr/bin && ln -s ooffice broffice

	touch $@

# Install files generated by setup into arch-independent package directories
install-indep: $(STAMP_DIR)/install-indep
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER)-mimelnk.install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).dirs
$(STAMP_DIR)/install-indep: $(STAMP_DIR)/install
	dh_testdir
	dh_testroot

	# Copy files placed by ooo-build/bin/package-ooo/install
	rm -rf $(PKGDIR)-common $(PKGDIR)-common.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-common $(PKGDIR)-common || exit 1
ifeq "$(PACKAGE_SDK)" "y"
	rm -rf $(PKGDIR)-dev-doc $(PKGDIR)-dev-doc.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-dev-doc $(PKGDIR)-dev-doc || exit 1
endif

	dh_installdirs -i

ifneq "$(USE_GSTREAMER)" "y"
	# sound doesn't work anyway, remove the .wav files to save space
	rm -rf $(PKGDIR)-common/$(OODIR)/share/gallery/sounds
	rm -f $(PKGDIR)-common/$(OODIR)/share/gallery/sg9.*
endif

	rm -f $(PKGDIR)-common/$(OODIR)/program/oo_product.bmp

	# Extract and install icons
	cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin/desktop-integration && dpkg --extract openoffice.org-debian-menus_*_all.deb . && cd usr/share/icons; \
	for d in `find -type d`; do \
	  install -d -m755 $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$d || exit 1 ;\
	done &&\
	for f in `find -type f`; do \
	  install -m644 $$f $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$f || exit 1 ;\
	done && cd ../../.. && rm -rf usr etc

	# install .applications, .keys and .mime
	mkdir -p $(PKGDIR)-common/usr/share/application-registry && \
	install -m644 $(SOURCE_TREE)/sysui/desktop/mimetypes/openoffice.applications \
		$(PKGDIR)-common/usr/share/application-registry
	mkdir -p $(PKGDIR)-common/usr/share/mime/packages && \
	mkdir -p $(PKGDIR)-common/usr/share/mime-info && \
	install -m644 $(SOURCE_TREE)/sysui/desktop/mimetypes/openoffice.mime \
		$(PKGDIR)-common/usr/share/mime-info && \
	rm -f $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	for i in $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/openoffice.org/*.keys; do \
		cat $$i >> $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	done
#	install -m644 $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare/openoffice.org.xml \
#		$(PKGDIR)-common/usr/share/mime/packages

	mkdir -p $(PKGDIR)-common/usr/share/applications
	sed 's/@VER@/$(VER)/g' debian/template.desktop.in \
		> $(PKGDIR)-common/usr/share/applications/ooo-template.desktop

	# install openoffice-xlate-lang
	install -d -m755 $(PKGDIR)-common/usr/share/openoffice$(VER)/bin
	install -m755 ooo-build/bin/openoffice-xlate-lang \
		$(PKGDIR)-common/usr/share/openoffice$(VER)/bin

ifeq "$(HELPISOS)" ""
	# when we don't build helpcontent2 here we are missing helpxsl.zip so
	# this file doesn't get installed either. Do it manually..
	mkdir -p -m755 $(PKGDIR)-common/$(OODIR)/help && \
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/main_transform.xsl \
		$(PKGDIR)-common/$(OODIR)/help
endif

ifeq "$(PACKAGE_SDK)" "y"
	chmod 644 $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs/images/bg_table2.gif
	chmod 644 $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs/images/bg_table3.gif
	chmod 644 $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/DevelopersGuide/ScriptingFramework/ScriptSelector/build.xml
	chmod 644 $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/DevelopersGuide/ScriptingFramework/SayHello/build.xml
	chmod 644 `find $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/java/Inspector -type f | xargs`
	chmod 644 `find $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/java/EmbedDocument -type f | xargs`
	rm -f $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc/LICENSE

	# replace href's to the non-free DevelopersGuide with links to the
	# online docs
	find $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs -name '*.html' \
	  | xargs sed -ri 's,href="[^"]*DevelopersGuide/([^"]*\.(xhtml|pdf)[^"]*")(.*),href="http://api.openoffice.org/docs/DevelopersGuide/\1\3,g'

  ifeq "$(ENABLE_JAVA)" "y"
        # fix links
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs/java/ref && \
	for i in `find . -type f | xargs`; do \
		perl -pi -e 's,file:$(CURDIR)/ooo-build/build/(current|$(TAG))/odk/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin/odkcommon/docs/common/ref/,,g' $$i; \
	done
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-java-common
	# move common Java stuff to -java-common
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/program/classes
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/share/Scripts
	mkdir -p $(PKGDIR)-java-common/usr/share/java/openoffice$(VER)
	mv $(PKGDIR)-common/$(OODIR)/program/JREProperties.class \
		$(PKGDIR)-java-common/$(OODIR)/program
	mv $(PKGDIR)-common/$(OODIR)/share/Scripts/java \
		$(PKGDIR)-java-common/$(OODIR)/share/Scripts
	mv $(PKGDIR)-common/$(OODIR)/program/classes/* \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)
	cd $(PKGDIR)-java-common/$(OODIR)/program/classes && \
		for i in $(CURDIR)/$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/*; do \
			case "`basename $$i`" in aportisdoc.jar|pexcel.jar|pocketword.jar) continue ;; \
			*) ln -s `echo $$i | sed -e 's,$(CURDIR)/$(PKGDIR)-java-common,,'` `basename $$i` ;; esac; \
	done

	# move into extra package
	rm -rf $(PKGDIR)-filter-mobiledev
	mkdir -p $(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter
	mkdir -p $(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types
	mkdir -p $(PKGDIR)-filter-mobiledev/usr/share/java/openoffice$(VER)
	mkdir -p $(PKGDIR)-filter-mobiledev/$(OODIR)/program/classes
	for i in palm pocketexcel pocketword; do \
	  mv $(PKGDIR)-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter/fcfg_$${i}_filters.xcu \
	    $(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter; \
	  mv $(PKGDIR)-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types/fcfg_$${i}_types.xcu \
	    $(PKGDIR)-filter-mobiledev/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types; \
	done
	for i in aportisdoc pexcel pocketword; do \
	  mv $(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/$$i.jar \
		$(PKGDIR)-filter-mobiledev/usr/share/java/openoffice$(VER); \
	  ln -s /usr/share/java/openoffice$(VER)/$$i.jar \
		$(PKGDIR)-filter-mobiledev/$(OODIR)/program/classes; \
	done
endif

	# fix permissions
	for i in editpic poll savepic show webcast; do \
		chmod 755 $(PKGDIR)-common/$(OODIR)/share/config/webcast/$$i.pl; \
	done

	# fix permission
	chmod 644 $(PKGDIR)-common/$(OODIR)/program/hid.lst

	rm -f $(PKGDIR)-common/$(OODIR)/LICENSE

	# move uno_packages/cache to /var and create symlink for for
	# documentation referencing it...
	rm -rf $(PKGDIR)-common/$(OODIR)/share/uno_packages/cache
	mkdir -p $(PKGDIR)-common/var/spool/openoffice$(VER)/uno_packages/cache
	ln -s /var/spool/openoffice$(VER)/uno_packages/cache \
		$(PKGDIR)-common/$(OODIR)/share/uno_packages/cache
	perl -pi -e \
	      's,\$$UNO_SHARED_PACKAGES/cache,file:///var/spool/openoffice$(VER)/uno_packages/cache,g' \
		$(PKGDIR)-common/$(OODIR)/program/unorc

	# install DicOOo; we need to do this manually; the
	# dictionaries/ module isn't built with --without-myspell-dicts
	# and those two somehow (why?) are in there...
	mkdir -p $(PKGDIR)-common/usr/share/myspell/dicts
	install -m644 $(SOURCE_TREE)/dictionaries/diclst/DicOOo.sxw \
		$(PKGDIR)-common/usr/share/myspell/dicts
	# issue 79153
	perl -pi -e 's,\s<library:element library:name="FontOOo"/>\n,,' \
		$(PKGDIR)-common/$(OODIR)/share/basic/launcher/script.xlb

ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	mkdir -p debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	mv $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf \
		debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	rm -rf $(PKGDIR)-common/$(OODIR)/share/fonts/truetype
else
	rm -f $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf
endif

	# dictionary symlink
	rm -rf $(PKGDIR)-common/$(OODIR)/share/dict/ooo
	ln -s /usr/share/myspell/dicts \
		$(PKGDIR)-common/$(OODIR)/share/dict/ooo
	mkdir -p $(PKGDIR)-common/usr/share/myspell/dicts
	ln -s /etc/openoffice/dictionary.lst \
		$(PKGDIR)-common/usr/share/myspell/dicts/dictionary.lst

	# convert icons to xpm; we need them for the Debian menu policy...
	cd $(PKGDIR)-common/usr/share/icons/gnome/32x32/apps && \
	  for x in *.png; do gm convert $$x `basename $$x .png`.xpm; done

ifeq "$(ENABLE_JAVA)" "y"
	# symlink jars we use externally
  ifeq "$(SYSTEM_XALAN)" "y"
	ln -sf /usr/share/java/xalan2.jar \
		$(PKGDIR)-java-common/$(OODIR)/program/classes/xalan.jar
  endif
  ifeq "$(SYSTEM_XML_APIS)" "y"
	ln -sf /usr/share/java/xml-apis.jar \
		$(PKGDIR)-java-common/$(OODIR)/program/classes/xml-apis.jar
  endif
  ifeq "$(SYSTEM_XERCES)" "y"
	ln -sf /usr/share/java/xercesImpl.jar \
		$(PKGDIR)-java-common/$(OODIR)/program/classes/xercesImpl.jar
  endif
  ifeq "$(USE_SYSTEM_BSH)" "y"
	ln -sf /usr/share/java/bsh.jar \
	        $(PKGDIR)-java-common/$(OODIR)/program/classes/bsh.jar
  endif
endif
	# remove extra license files
	rm -rf $(PKGDIR)-commmon/$(OODIR)/licenses
	rm -rf $(PKGDIR)-common/$(OODIR)/share/readme/LICENSE*
	rm -f $(PKGDIR)-common/$(OODIR)/THIRDPARTYLICENSEREADME.html
	rm -f $(PKGDIR)-common/$(OODIR)/LICENSE.html

	# remove extra readme files
	rm -rf $(PKGDIR)-common/$(OODIR)/readmes
	rm -rf $(PKGDIR)-common/$(OODIR)/share/readme/README*

	# install Ximian desktop icons
	mkdir -p $(PKGDIR)-common/usr/share/icons/hicolor/48x48/apps
	cp ooo-build/desktop/48x48/*.png \
		$(PKGDIR)-common/usr/share/icons/hicolor/48x48/apps

	# add MySQL, MaxDB and PostgreSQL JDBC drivers to OOos CLASSPATH
	TMP=`mktemp -q`; \
	sed -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/mysql.jar|' \
	    -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/sapdbc.jar|' \
	    -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/postgresql.jar|' < $(PKGDIR)-common/$(OODIR)/program/jvmfwk3rc > $$TMP && \
	mv $$TMP $(PKGDIR)-common/$(OODIR)/program/jvmfwk3rc

	# move psprint.conf into /etc
	mkdir -p $(PKGDIR)-common/etc/openoffice$(VER)
	mv $(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf \
		$(PKGDIR)-common/etc/openoffice$(VER)
	ln -s /etc/openoffice$(VER)/psprint.conf \
		$(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf

	# prepare a fake sofficerc in the place where OOo expects it
	# which does nothing except reference the "normal" one
	# which we put into /etc
	mv $(PKGDIR)-common/$(OODIR)/program/sofficerc \
		$(PKGDIR)-common/etc/openoffice$(VER)/sofficerc
	( \
	  echo "# *DO NOT* CHANGE THIS FILE. IT ONLY TAKES THE SETTINGS FROM"; \
	  echo "# /etc/openoffice$(VER)/sofficerc. CHANGE THAT FILE IF YOU"; \
	  echo "# REALLY WANT TO CHANGE SOMETHING."; \
	  echo "FHS_CONFIG_FILE=file:///etc/openoffice$(VER)/sofficerc"; \
	  echo "" >> $(PKGDIR)-common/$(OODIR)/program/sofficerc; \
	) > $(PKGDIR)-common/$(OODIR)/program/sofficerc	
	cat $(PKGDIR)-common/etc/openoffice$(VER)/sofficerc \
		| perl -p -e 's/(.*)=(.*)/$$1=\$${\$$FHS_CONFIG_FILE:Bootstrap:$$1}/' \
		>> $(PKGDIR)-common/$(OODIR)/program/sofficerc

	install -m 644 debian/soffice.sh \
	  $(PKGDIR)-common/etc/openoffice$(VER)/soffice.sh

ifeq "$(HELPISOS)" ""
	# the helpimgs are not included when we don't build with help here.
	# Add them now because openoffice.org-help-* packaged in contrib or so
	# will need them
	set -e; \
	for z in images.zip images_industrial.zip images_crystal.zip images_hicontrast.zip images_tango.zip $(IMAGES_HUMAN_ZIP); do \
		echo "adding helpimgs to $$z..."; \
		rm -rf $$z; mkdir $$z; \
		cd $$z; \
		unzip -q $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		cp -r $(CURDIR)/$(SOURCE_TREE)/default_images/res/helpimg res && \
		chmod +w $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		zip -q -r $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z *; \
		cd ..; \
		rm -rf $$z; \
	done
endif
	set -e; \
	for s in andromeda industrial crystal hicontrast tango $(HUMAN); do \
		z=images_$$s.zip; \
		case "$$s" in andromeda) z=images.zip; esac; \
		mkdir -p $(PKGDIR)-style-$$s/$(OODIR)/share/config; \
		mv $(PKGDIR)-common/$(OODIR)/share/config/$$z \
			$(PKGDIR)-style-$$s/$(OODIR)/share/config/; \
	done

	rm -rf $(PKGDIR)-dtd-officedocument1.0
	mkdir -p $(PKGDIR)-dtd-officedocument1.0/$(OODIR)/share/dtd
	mv $(PKGDIR)-common/$(OODIR)/share/dtd/officedocument \
		$(PKGDIR)-dtd-officedocument1.0/$(OODIR)/share/dtd
	cp debian/catalog.xml $(PKGDIR)-dtd-officedocument1.0/$(OODIR)/share/dtd/officedocument/1_0

ifeq "$(PACKAGE_QA_TOOLS)" "y"
  ifeq "$(ENABLE_JAVA)" "y"
	mkdir -p -m755 $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests/java
	for d in objdsc testdocs; do \
		cp -r $(SOURCE_TREE)/qadevOOo/$$d $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/$$d; \
	done
  endif

	mkdir -p -m755 $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests
	cp -r $(SOURCE_TREE)/qadevOOo/tests/basic $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests
  ifeq "$(ENABLE_JAVA)" "y"
	for d in mod ifc; do \
		cp -r $(SOURCE_TREE)/qadevOOo/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/class/$$d $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests/java; \
	done
  endif

	find $(PKGDIR)-qa-api-tests -type d -name "CVS" | xargs rm -rf
	find $(PKGDIR)-qa-api-tests -type f | xargs chmod 0644

  ifeq "$(ENABLE_JAVA)" "y"
	echo "TestBase=java_fat" > $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/java.props
  endif
	echo "TestBase=java_complex" > $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/complex.props
	echo "TestBase=basic_fat" > $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/basic.props

	echo "BASICBRIDGE=/$(OODIR)/qadevOOo/testdocs/BasicBridge.sxw" >> \
		$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/basic.props
	echo "BASICRESPTH=/$(OODIR)/qadevOOo/tests/basic" >> \
		$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/basic.props

  ifeq "$(ENABLE_JAVA)" "y"
	echo "DescriptionPath=/$(OODIR)/qadevOOo/objdsc" >> \
		$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/java.props; \
	echo "TestDocumentPath=/$(OODIR)/qadevOOo/testdocs" >> \
		$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/java.props; \
	echo "AppExecutionCommand=/$(OODIR)/program/soffice" \
		"-norestore -nocrashreport -accept=socket,host=localhost,port=8100;urp;" >> \
		$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/java.props
  endif
	for i in complex basic; do \
		echo "DescriptionPath=/$(OODIR)/qadevOOo/objdsc" >> \
			$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/$$i.props; \
		echo "TestDocumentPath=/$(OODIR)/qadevOOo/testdocs" >> \
			$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/$$i.props; \
		echo "AppExecutionCommand=/$(OODIR)/program/soffice" \
			"-norestore -nocrashreport -accept=socket,host=localhost,port=8100;urp;" >> \
			$(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/$$i.props; \
	done
endif

	# add "openoffice" symlink
	cd $(PKGDIR)-common/usr/bin && ln -s ooffice openoffice

ifeq "$(PACKAGE_SDK)" "y"
	# add symlinks for docs and examples
	cd $(PKGDIR)-dev-doc/$(OODIR)/sdk && \
		rm -rf docs && \
		ln -sf /usr/share/doc/openoffice.org-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc && \
		ln -s /usr/share/doc/openoffice.org-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc && \
		ln -s /$(OODIR)/sdk/examples examples
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev && \
		ln -s /$(OODIR)/sdk/examples examples
endif

ifneq "$(DIST)" "Ubuntu"
	# ooo-build has a patch with this hardcoded.
	perl -pi -e "s/Ubuntu helper/helper/" $(PKGDIR)-common/$(OODIR)/program/soffice
	perl -pi -e "s/Ubuntu config/config/" $(PKGDIR)-common/$(OODIR)/program/soffice
	perl -pi -e "s/Ubuntu stuff/stuff/" $(PKGDIR)-common/$(OODIR)/program/soffice
endif

	for i in $(ARCH_INDEP_DEP_PACKAGES); do \
		install -D -m644 debian/presubj \
			debian/$$i/usr/share/bug/$$i/presubj; \
		if [ -e debian/$$i.control.bug ]; then \
			install -D -m644 debian/$$i.control.bug \
				debian/$$i/usr/share/bug/$$i/control; \
		fi ;\
	done

	# fix intro
	if dpkg-parsechangelog | grep urgency | grep -q  "\~.*m"; then \
		debian/scripts/fix_image_rgb \
			$(SOURCE_TREE)/ooo_custom_images/dev_nologo/introabout/intro.bmp \
			$(PKGDIR)-common/$(OODIR)/program/intro.bmp; \
	else \
		debian/scripts/fix_image_rgb \
			$(SOURCE_TREE)/ooo_custom_images/nologo/introabout/intro.bmp \
			$(PKGDIR)-common/$(OODIR)/program/intro.bmp; \
	fi

ifeq "$(USE_OOO_BUILD_DESKTOPS)" "n"
	# menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	mkdir -p -m755 $(PKGDIR)-common/usr/share/applications ;\
	sed -e 's,Exec=unopkg,Exec=/$(OODIR)/program/unopkg,' \
	    -e 's,Name=$${PRODUCTNAME} $${PRODUCTVERSION},Name=OpenOffice.org $(VER),' \
	    -e 's/  / /' \
	    < $$dirname/extension.desktop \
	    > $(PKGDIR)-common/usr/share/applications/ooo$(VER)-extension.desktop || exit 1
	sed -i -e 's/Application;//' $(PKGDIR)-common/usr/share/applications/ooo$(VER)-extension.desktop
	sed -i -e 's/Office;/Office;System;/' $(PKGDIR)-common/usr/share/applications/ooo$(VER)-extension.desktop
endif

	touch $@

binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch: $(STAMP_DIR)/install-arch debian/control $(STAMP_DIR)/maintscripts
	dh_testdir
	dh_testroot

	for pkg in $(ARCH_DEP_PACKAGES) ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

	dh_installdocs -A -Nlibmythes-dev debian/README.Debian \
		debian/tmp/pkg/openoffice.org-common/$(OODIR)/README
	dh_installdocs -plibmythes-dev debian/copyright
	dh_installman -s
	# fix manpage symlinks
	for i in writer calc draw base math impress; do \
		for i in `find $(PKGDIR)-$$i -type l -name "o*.1"`; do \
			mv $$i $$i.gz; \
			if [ "`readlink $$i`" != "openoffice.1.gz" ]; then \
				ln -sf openoffice.1.gz $$i.gz; \
			fi; \
		done; \
	done
	dh_installchangelogs -s -Nlibmythes-dev ooo-build/ChangeLog
ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	dh_installchangelogs -plibmythes-dev
endif
	dh_installmime -s
	dh_installmenu -s
ifeq "$(USE_PYCENTRAL)" "y"
	dh_pycentral -ppython-uno 
else
	dh_python
endif
	debian/scripts/installoverrides -s
	dh_link -s 
	dh_fixperms -s
ifeq "$(BUILD_DBG_PACKAGE)" "y"
	dh_strip -s --dbg-package=openoffice.org$(VER)-dbg
	# dh_strip --dbg-package= is not idempotent, force copying of the binaries
	# again...
	rm -f $(STAMP_DIR)/install-arch
else
	dh_strip -s
endif
	dh_desktop -s 
ifneq "$(ETCH_BACKPORT)" "y"
	dh_icons -s
endif
ifeq "$(ENABLE_MONO)" "y"
	cat debian/libuno-cil.installcligac.in | \
		sed -e s,@OODIR@,$(OODIR), > debian/libuno-cil.installcligac
	dh_installcligac -s
endif
	dh_compress -s -X.py -X.mk -X.sxd
	dh_makeshlibs -s -n -V -Xlibxmlsec
	dh_installdeb -s
	cat debian/openoffice.org-core.shlibs.local > debian/shlibs.local
ifneq "$(USE_SYSTEM_XMLSEC)" "y"
	cat debian/shlibs.override.xmlsec >> debian/shlibs.local
endif
ifeq "$(USE_SYSTEM_ICU)" "n"
	cat debian/shlibs.override.icu >> debian/shlibs.local
endif
ifeq "$(INTERNAL_STDLIBS)" "y"
	cat debian/shlibs.override.stdlibs >> debian/shlibs.local
endif
	LD_LIBRARY_PATH="/usr/lib/libfakeroot:$(PKGDIR)-core/$(OODIR)/program" \
		dh_shlibdeps -s $(SHLIBS_OVERRIDE)
	# this is in an extension (.zip), so dh_shlibdeps doesn't get it. We need to do
	# it manually.
	LD_LIBRARY_PATH="/usr/lib/libfakeroot:$(PKGDIR)-core/$(OODIR)/program" \
		dpkg-shlibdeps -O \
			$(SOURCE_TREE)/connectivity/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/lib/postgresql-sdbc*.so \
			> debian/openoffice.org$(VER)-sdbc-postgresql.substvars
ifeq "$(ENABLE_MONO)" "y"
	dh_makeclilibs -s -V
	dh_clideps -s
endif
# This switch to dh_shlibdeps reduces the 'libXXX not found' warnings but
# causes ldd crashes sometimes when used with fakeroot:
#          -l $(PKGDIR)-core/$(OPENOFFICEDIR)/program
	dh_gencontrol -s -Nopenoffice.org$(VER)-report-builder \
		-Nopenoffice.org$(VER)-sdbc-postgresql -- \
		-V'base-version=$(BASE_VERSION)' \
		-V'help-l10n-virtual-version=$(HELP_L10N_VIRTUAL_VERSION)' \
		-V'dev-stl-depends=$(DEV_STL_DEPENDS)' \
		-V'writer-pyuno-dep=$(WRITER_PYUNO_DEP)' \
		-V'base-hsqldb-depends=$(BASE_HSQLDB_DEPENDS)' \
		-V'java-common-depends=$(JAVA_COMMON_DEPENDS)' \
		-V'gcj-jawt-depends=$(GCJ_JAWT_DEPENDS)' \
		-V'java-gcj-depends=$(JAVA_GCJ_DEPENDS)' \
		-V'mozilla-nss-depends=$(MOZILLA_NSS_DEPENDS)' \
		-V'Binary-Version=$(BINARY_VERSION)' \
		-V'ooo-binfilter-dep=$(OOO_BINFILTER_DEP)' \
		-V'lpsolve-dep=$(LPSOLVE_DEP)' \
		-V'gstreamer-plugins-suggests=$(GSTREAMER_PLUGINS_SUGGESTS)' \
		-V'dbg-dbg-suggests=$(DBG_DBG_SUGGESTS)' \
		-v$(BINARY_VERSION)
	dh_gencontrol -popenoffice.org$(VER)-report-builder -- \
		-v`echo $(BINARY_VERSION) | cut -d: -f1`:$(shell grep "<version" $(SOURCE_TREE)/reportdesign/util/post.xml | perl -pi -e 's,<version value=\"(.*)\"/>,\1,; s/^\s+//')+OOo`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_gencontrol -popenoffice.org$(VER)-sdbc-postgresql -- \
		-v`echo $(BINARY_VERSION) | cut -d: -f1`:$(shell grep ^PQ_SDBC_M $(SOURCE_TREE)/connectivity/source/drivers/postgresql/makefile.mk | cut -d"=" -f2 | xargs | sed -e s/\ /\./g)+OOo`echo $(BINARY_VERSION) | cut -d: -f2`
	dh_md5sums -s
	dh_builddeb -s $(BUILDDEB_OPTIONS)
	
	touch $@

binary-indep: $(GSI_EXPORT_STAMP) $(STAMP_DIR)/binary-indep
$(STAMP_DIR)/binary-indep: $(STAMP_DIR)/install-indep debian/control $(STAMP_DIR)/maintscripts $(STAMP_DIR)/langpacks $(STAMP_DIR)/helppacks $(STAMP_DIR)/broffice
ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_JAVA_ARCHS)))
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "For uploads with binary-all packages, please use arches where Java is enabled!!!!!"
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
endif
	dh_testdir
	dh_testroot

	for pkg in $(ARCH_INDEP_PACKAGES) ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

ifeq "$(PACKAGE_SDK)" "y"
	. $(SOURCE_TREE)/solenv/inc/udkversion.mk && \
	for i in common cpp java; do \
		cat debian/udk-$$i-ref.in \
			| sed -e "s/@UDK_MAJOR@/$$UDK_MAJOR/" \
		      	      -e "s/@UDK_MINOR@/$$UDK_MINOR/" \
		      	      -e "s/@UDK_MICRO@/$$UDK_MICRO/" \
		      	      -e "s/@VER@/$(VER)/" \
			> debian/openoffice.org-dev-doc.doc-base.udk-$$i-ref; \
	done
	# remove Autodoc_DiagnosticMessages.txt
	find $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev \
		-name "Autodoc_DiagnosticMessages.txt" -exec rm {} \;
	UDK_CPP_FILES=`find $(CURDIR)/debian/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/docs/cpp/ref | sed -e 's,$(CURDIR)/debian/openoffice.org-dev-doc,,g' | xargs`; \
	echo "Files: $$UDK_CPP_FILES" >> debian/openoffice.org-dev-doc.doc-base.udk-cpp-ref
  ifeq "$(ENABLE_JAVA)" "y"
	UDK_JAVA_FILES=`find $(CURDIR)/debian/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/docs/java/ref | sed -e 's,$(CURDIR)/debian/openoffice.org-dev-doc,,g' | xargs`; \
	echo "Files: $$UDK_JAVA_FILES" >> debian/openoffice.org-dev-doc.doc-base.udk-java-ref
  endif
	# xargs strips the many files here so we need to post-process it.
	UDK_COMMON_FILES=`find $(CURDIR)/debian/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/docs/common/ref | sed -e 's,$(CURDIR)/debian/openoffice.org-dev-doc,,g' | xargs`; \
	TMP=`mktemp -q`; \
	cp debian/openoffice.org-dev-doc.doc-base.udk-common-ref $$TMP; \
	echo "Files: $$UDK_COMMON_FILES" >> $$TMP; \
	cat $$TMP | perl -e 'while(<>) { if (/^Files/) {$$f=1;} if ($$f eq "1") { chomp(); } print $$_; }' > debian/openoffice.org-dev-doc.doc-base.udk-common-ref; \
	rm -f $$TMP
	# no idea why this happens; afais this can't come from above
	# since it doesn't affect the files at the end of the lines...
	# But fix it..
	perl -pi -e 's,html/,html /,g' debian/openoffice.org-dev-doc.doc-base.udk-common-ref
endif
	dh_installdocs -A  debian/README.Debian debian/tmp/pkg/openoffice.org-common/$(OODIR)/README
	dh_installman -i
	for i in `find $(PKGDIR)-common -type l -name "o*.1"`; do \
		mv $$i $$i.gz; \
		if [ "`readlink $$i`" != "openoffice.1.gz" ]; then \
			ln -sf openoffice.1.gz $$i.gz; \
		fi; \
	done
	dh_installchangelogs -i ooo-build/ChangeLog
	debian/scripts/installoverrides -i
	dh_link -i
	dh_fixperms -i
	dh_desktop -i
ifneq "$(ETCH_BACKPORT)" "y"
	dh_icons -i
endif
	dh_installxmlcatalogs -i
	dh_compress -X.py -X.mk -X.sxd
	dh_installdeb -i
	dh_gencontrol -i -- \
		-V'base-version=$(BASE_VERSION)' \
		-V'help-l10n-virtual-version=$(HELP_L10N_VIRTUAL_VERSION)' \
		-V'common-bsh-depends=$(COMMON_BSH_DEPENDS)' \
		-V'java-common-depends=$(JAVA_COMMON_DEPENDS)' \
		-V'java-common-java-depends=$(JAVA_COMMON_JAVA_DEPENDS)' \
		-V'Binary-Version=$(BINARY_VERSION)' \
		-V'ooo-binfilter-dep=$(OOO_BINFILTER_DEP)' \
		-V'dbg-dbg-suggests=$(DBG_DBG_SUGGESTS)' \
		-v$(BINARY_VERSION)
	dh_md5sums -i
	dh_builddeb -i $(BUILDDEB_OPTIONS)
	
	touch $@

binary: binary-arch binary-indep

# Get ooo-build
get-ooo-build:
ifeq "" "$(OOO_BUILD_BRANCH)"
	svn co svn://svn.gnome.org/svn/ooo-build/trunk ooo-build
else
	svn co svn://svn.gnome.org/svn/ooo-build/branches/$(OOO_BUILD_BRANCH) ooo-build
endif
	cd ooo-build && NOCONFIGURE=1 ./autogen.sh

# Download the latest sources needed for ooo-build. Note that is
# might download more than actually needed here....
download: ooo-build/config.status
	ooo-build/download	

# Update debian and ooo-build directories from version control
vcsupdate:
	cd debian && bzr update
	cd ooo-build && svn up

.PHONY: control
.PHONY: clean-debdir clean-instsetoo clean-objectdirs clean default configure
.PHONY: build build-indep build-arch install-arch install-indep
.PHONY: $(stampdir_targets)
endif

# vim:set noet ai sts=8 sw=8 tw=0:
