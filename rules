#!/usr/bin/make -f
###################################################################################
# OpenOffice.org source package rules flie
#
# Please see debian/README for detailed documentation about the build system, and
# how to build OpenOffice.org.
###################################################################################
# Authors:
# Chris Halls <halls@debian.org>
# Rene Engelhard <rene@debian.org>
# Copyright 2002-2006 Software in the Public Interest, Inc.
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL or <http://www.gnu.org/copyleft/gpl.txt>.
###################################################################################

default: environment
#VER:=2
SHELL:=/bin/bash
PKGDIR:=debian/openoffice.org$(VER)
OODIR:=usr/lib/openoffice$(VER)

PKGSOURCE := $(shell dpkg-parsechangelog | awk '/^Source:/ {print $$2;exit 0}')
SOURCE_VERSION:=$(shell head -1 debian/changelog | cut -d\( -f2 | cut -d\) -f1)
UPSTREAM_VERSION:=$(shell echo "$(SOURCE_VERSION)"| cut -d- -f1)
BINARY_VERSION=$(SOURCE_VERSION)
#BINARY_VERSION=2.0.3-$(shell dpkg-parsechangelog  | grep urgency \
	| awk '{print $$2}' | sed -e s/"("// -e s/")"// | cut -d"-" -f2)
PACKAGES := $(shell dh_listpackages)
BASE_VERSION=2.0.3
NEXT_BASE_VERSION=2.0.4

ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)
DIST := $(shell lsb_release -is)
DISTREL := $(shell lsb_release -cs)
# Figure out who's building this package.
BUILDER:=$(shell echo $$LOGNAME)
OOO_VENDOR:=Debian
#ifeq "$(DIST)" "Ubuntu"
OOO_VENDOR+= and Ubuntu
#endif
export OOO_VENDOR

# debhelper
export DH_OPTIONS
export DH_ALWAYS_EXCLUDE=CVS
#export DH_VERBOSE=1

# work around tcsh bugs.debian.org/339034: tcsh: Unknown colorls variable `su'
unexport LS_COLORS

#TAG=src680-m$(MILESTONE)
#MILESTONE:=$(shell echo "$(UPSTREAM_VERSION)"| cut -d. -f3)
TAG=ooc680-m7
SOURCE_TREE=ooo-build/build/$(TAG)
STAMP_DIR=debian/stampdir

# Read in architecture-specific variables of importance.
#include debian/scripts/vars.$(ARCH)

AMD64_EXPERIMENTAL=n
ifeq "$(DISTREL)" "edgy"
  AMD64_EXPERIMENTAL=y
endif
ifeq "$(ARCH)" "amd64"
  PKGS_AMD64_NOEXP = openoffice.org$(VER) openoffice.org$(VER)-core \
	openoffice.org$(VER) openoffice.org$(VER)-writer \
	openoffice.org$(VER)-calc openoffice.org$(VER)-impress \
	openoffice.org$(VER)-draw openoffice.org$(VER)-math \
	openoffice.org$(VER)-base openoffice.org$(VER)-kde \
	openoffice.org$(VER)-gtk openoffice.org$(VER)-gnome \
	openoffice.org$(VER)-evolution openoffice.org$(VER)-officebean \
	openoffice.org$(VER)-dev openoffice.org$(VER)-filter-so52 \
	openoffice.org$(VER)-gtk-gnome \
	python-uno
#	openoffice.org$(VER)-gcj
  PKGS_AMD64_EXP = $(foreach p, $(PKGS_AMD64_NOEXP),$(p)-experimental)
  ifeq "$(AMD64_EXPERIMENTAL)" "y"
	EXPSUFFIX=-experimental
	PACKAGES := $(filter-out $(PKGS_AMD64_NOEXP), $(PACKAGES))
	DEBHELPER_OPTIONS += $(foreach p, $(PKGS_AMD64_NOEXP),-N$(p))
  else
	PACKAGES := $(filter-out $(PKGS_AMD64_EXP), $(PACKAGES))
	DEBHELPER_OPTIONS += $(foreach p, $(PKGS_AMD64_EXP),-N$(p))
  endif
endif

SARGE_BACKPORT=n
ifeq "$(DISTREL)" "sarge"
  SARGE_BACKPORT=y
endif

#########
# Default package configuration
#
OS:= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
BUILD_AMD64=n
PATCHSET=$(DIST)
BUILD_DEPS=
BUILD_PYUNO=y
PACKAGE_QA_TOOLS=n
PACKAGE_TTF_OPENSYMBOL=y
PACKAGE_NPSOPLUGIN=n
BUILD_JARS_NATIVE=n
REBUILD_JARS_NATIVE=y
SHLIBS_OVERRIDE = -- -Ldebian/openoffice.org-core.shlibs.local
BUILD_BINFILTERS=y
BUILD_ONLY_EN_US=n
ENABLE_JAVA=y
ENABLE_MONO=n
USE_SYSTEM_HUNSPELL=y
SYSTEM_ALTLINUXHYPH=y
LIBALTLINUXHYPH_MINVER= (>= 0.1.1-7)
SYSTEM_AGG=n
USE_STLPORT=y
USE_STLPORT5=n
USE_SYSTEM_STLPORT=y
ifeq "$(USE_STLPORT5)" "y"
  LIBSTLPORT_MINVER= (>= 5.0.2-3)
  BUILD_BINFILTERS=n
else
  LIBSTLPORT_MINVER= (>= 4.6.2-3)
endif
USE_SYSTEM_BOOST=n
USE_SYSTEM_PORTAUDIO=y
USE_EXTERNAL_CXXLIBS=y
LIBWPD8_MINVER= (>= 0.8.3-3)
USE_SYSTEM_SABLOT=n
USE_EXTERNAL_MYTHES=n
USE_SYSTEM_ICU=y
USE_SYSTEM_XMLSEC=n
BUILD_CAIROCANVAS=y
USE_SYSTEM_CAIRO=y
BUILD_MDBTOOLS=y
USE_SYSTEM_MDBTOOLS=y
BUILD_KDE=y
BUILD_DBG_PACKAGE=n
USE_SYSTEM_BSH=y
USE_SYSTEM_HSQLDB=y
LIBDB_JAVA_MINVER= (>= 4.2.52-21)
USE_FIREFOX=n
USE_XULRUNNER=n
KDELIBS_MINVER= (>= 4:3.4.3-2)
USE_SYSTEM_LPSOLVE=y
USE_DBUS=y
USE_SYSTEM_NEON=y
USE_PYCENTRAL=y

# when we have a package we want to have to be installed on older things with some older
# C++ ABI (like it was the case with openoffice.org2), we need to set this. Don't touch
# otherwise
INTERNAL_STDLIBS=n

# Default flags to pass to configure of ooo-build
CONFIGURE_FLAGS= --disable-post-install-scripts \
                 --with-tag=$(TAG) \
                --with-system-gcc \
                --with-distro=$(PATCHSET) \
		--with-vendor='$(OOO_VENDOR)' \
                --enable-package-directories \
                --with-installed-ooo-dirname=openoffice$(VER) \
                --mandir=/usr/share/man \
                --with-docdir=/usr/share/doc/openoffice.org \
                --with-lang="$(BUILD_ISOS)" \
		 -x-libraries=/usr/lib \
                --with-build-version="openoffice.org$(VER) $(BINARY_VERSION), `LANG=C date`" \
                --disable-strip \
                --enable-atkbridge \
                --enable-lockdown

#############
# Distro-specific overrides

# Debian
ifeq "$(DIST)" "Debian"
  # we don't need to build all languages and the thesaurus on the buildds;
  # they do binary-only builds anyway
  ifeq (buildd,$(shell whoami))
       BUILD_ONLY_EN_US=y
  endif
  SYSTEM_AGG=y
  USE_SYSTEM_XMLSEC=y
  USE_SYSTEM_HUNSPELL=y
  USE_XULRUNNER=y
endif

ifeq "$(DIST)" "Ubuntu"
  USE_FIREFOX=y
  BUILD_DEPS += , translate-toolkit (>= 0.8.rel)
  BUILD_AMD64=y
  PACKAGE_QA_TOOLS=y
  ifeq "$(ARCH)" "amd64"
    PACKAGE_QA_TOOLS=n
  endif
  SYSTEM_ALTLINUXHYPH=n
  USE_SYSTEM_XMLSEC=y
  USE_SYSTEM_HUNSPELL=n
  # not for dapper
  USE_SYSTEM_LPSOLVE=n
  ifeq "$(DISTREL)" "dapper"
    USE_PYCENTRAL=n
    BUILD_AMD64=n
  endif
endif

# Debian Sarge backport
ifeq "$(SARGE_BACKPORT)" "y"
  OS:= $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)
  PATCHSET=$(DIST)Sarge
  BUILD_CAIROCANVAS=n
  BUILD_JARS_NATIVE=n
  KDELIBS_MINVER=
  LIBALTLINUXHYPH_MINVER=
  LIBDB_JAVA_MINVER=
  LIBSTLPORT_MINVER=
  LIBWPD8_MINVER=
  SYSTEM_AGG=n
  SYSTEM_ALTLINUXHYPH=n
  USE_STLPORT5=n
  USE_SYSTEM_BSH=n
  USE_SYSTEM_HSQLDB=n
  USE_SYSTEM_HUNSPELL=n
  USE_SYSTEM_ICU=n
  USE_SYSTEM_MDBTOOLS=n
  USE_SYSTEM_PORTAUDIO=n
  USE_SYSTEM_XMLSEC=n
  USE_XULRUNNER=n
  USE_SYSTEM_LPSOLVE=n
  USE_DBUS=n
  USE_PYCENTRAL=n
endif

# X, curl and neon builddeps...
ifeq "$(SARGE_BACKPORT)" "y"
	BUILD_DEPS += , libcurl3-dev [$(OOO_ARCHS)]
	BUILD_DEPS += , xlibs-static-dev [$(OOO_ARCHS)], render-dev [$(OOO_ARCHS)]
	BUILD_DEPS += , unixodbc-dev [$(OOO_ARCHS)]
else
	BUILD_DEPS += , libcurl3-openssl-dev [$(OOO_ARCHS)]
	BUILD_DEPS += , libxkbfile-dev [$(OOO_ARCHS)], libxinerama-dev [$(OOO_ARCHS)], x11proto-render-dev [$(OOO_ARCHS)]
	BUILD_DEPS += , unixodbc-dev (>= 2.2.11) [$(OOO_ARCHS)]
endif

#############
# Architecture-specific changes

OOO_ARCHS= i386 powerpc sparc
ifeq "$(BUILD_AMD64)" "y"
  OOO_ARCHS += amd64
endif
# Java...
OOO_JAVA_ARCHS = i386 powerpc sparc
ifeq (,$(findstring $(ARCH),$(OOO_JAVA_ARCHS)))
       ENABLE_JAVA=n
endif

# Changes for 64 bit build
ifeq "$(ARCH)" "amd64"
  PATCHSET=$(DIST)64
  BUILD_PYUNO=n
  BUILD_BINFILTERS=n
  USE_SYSTEM_BOOST=y
endif

# For sarge, there's no suitable Java
ifeq "$(ARCH)" "sparc"
  ifeq "$(SARGE_BACKPORT)" "y"
    ENABLE_JAVA=n
  endif
endif
ifeq "$(ARCH)-linux-gnu" "sparc-linux-gnu"
	# use 32-bit compiler
	CC_PREFIX=sparc-linux-gnu-
endif

# We only build the main openoffice.org packages on those architectures where it works
# all other architectures build libmythes-dev
ifneq "$(USE_EXTERNAL_MYTHES)" "y"
  ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_ARCHS)))
       BUILD_ONLY_LIBMYTHES=y
  else
    ifeq "$(ARCH)" "amd64"
      ifneq "$(BUILD_AMD64)" "y"
               BUILD_ONLY_LIBMYTHES=y
      endif
    endif
  endif
endif

ifneq "$(BUILD_DBG_PACKAGE)" "y"
	DH_COMPAT=4
	SMALL_SYMBOLS = y
else
	DH_COMPAT=5
	SMALL_SYMBOLS = n
endif
export DH_COMPAT


ifeq "$(BUILD_PYUNO)" "y"
    ifeq "$(USE_PYCENTRAL)" "y"
	BUILD_DEPS += , python-central (>= 0.5) [$(OOO_ARCHS)], debhelper (>= 5.0.37.2), python-dev (>= 2.3.5-7) [$(OOO_ARCHS)]
    else
	BUILD_DEPS += , debhelper (>= 4.2.21), python-dev [$(OOO_ARCHS)]
    endif
else 
  ifeq "$(BUILD_DBG_PACKAGE)" "y"
	BUILD_DEPS += , debhelper (>= 4.2.21)
  else
    ifneq "$(SARGE_BACKPORT)" "y"
	BUILD_DEPS += , debhelper (>= 5)
    endif
  endif
  BUILD_DEPS += python [$(OOO_ARCHS)]
endif

ifeq "$(BUILD_JARS_NATIVE)" "y"
	BUILD_DEPS += , dpkg-dev (>= 1.13.19)
else
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-gcj
endif

ifneq "$(PACKAGE_QA_TOOLS)" "y"
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-qa-tools -Nopenoffice.org$(VER)-qa-api-tests
	CONFIGURE_FLAGS += --disable-qadevooo
endif
ifneq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	DEBHELPER_OPTIONS+= -Nttf-opensymbol
endif
ifneq "$(PACKAGE_NPSOPLUGIN)" "y"
	DEBHELPER_OPTIONS+= -Nmozilla-openoffice.org
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
  ifeq (lang=,$(findstring lang=,$(DEB_BUILD_OPTIONS)))
    ISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
    HELPISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
    LANGPACKISOS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^.*lang=\([^,]*\),.*/\1/p')
  else
    # Note that the first one here *has to be* en-US. the first one gets
    # gid_Module_Root as filelist later and the rest gid_Module_Root.$iso
    # but we can't/shouldn't do dynamic switching, so let en-US be the first
    # one to that gid_Module_Root always is english and the other langpacks
    # have gid_Module_Root.$iso
    #ISOS=$(shell ooo-build/bin/openoffice-xlate-lang -i all')
    ISOS:=en-US af ar be-BY bg bn br bs ca cs cy da de el \
	en-GB en-ZA es et fa fi fr ga gu-IN he hi-IN hr hu it ja \
	km ko lo lt lv mk ml-IN ne nb nl nn nr pa-IN \
	pl pt-BR ru rw sk sl sr-CS st sv \
	ta-IN te-IN tg th ti-ER tn tr ts vi xh zh-CN zh-TW zu
    #HELPISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all') 
    HELPISOS:=en-US bg cs da de en-GB es et fr hu it ja km ko mk nl \
	pl pt-BR ru sk sl sv zh-CN zh-TW
    #LANGPACKISOS:=$(shell ooo-build/bin/openoffice-xlate-lang -i all')
    LANGPACKISOS:=en-US af ar be-BY bg bn br bs ca cs cy da de el \
	en-GB en-ZA es et fa fi fr ga gu-IN he hi-IN hr hu nb nl nn it ja \
	km ko lo lt lv mk ml-IN ne nr pa-IN \
	pl pt-BR ru rw sk sl sr-CS st sv \
	ta-IN te-IN tg th ti-ER tn tr ts vi xh zh-CN zh-TW zu

    # additional things built in Ubuntu, having belocs-locales
    #ISOS := $(sort $(ISOS) as-IN ku mr-IN or-IN sh-YU ur-IN)
    ISOS := en-US $(sort $(filter-out en-US, $(ISOS)) ku)
    HELPISOS := en-US $(sort $(filter-out en-US, $(HELPISOS)) br ru)
    LANGPACKISOS := en-US $(sort $(filter-out en-US, $(LANGPACKISOS)) ku)
    REMOVE_HELP := bs cy fi lt lv sh-YU sr-CS ur-IN
    FILTER_HELP := ga hr pl rw sk th tr vi

#    # ALL_ISOS, taken from solenv/inc/postset.mk
#    ALL_ISOS := af ar be-BY bg br bn bn-BD bn-IN bs ca cs cy da de el \
#	en-GB en-US en-ZA eo es et eu fa fi fr ga gl gu-IN he hi-IN hr hu \
#	it ja km kn-IN ko lo lt lv mk ms ne nb nl nn nr ns \
#	pa-IN pl pt pt-BR ru rw sk sl sh-YU sr-CS ss st sv sw sw-TZ sx \
#	ta-IN th tn tr ts ve vi xh zh-CN zh-TW zu
#    # filter out all, which are not in ALL, add ALL
#    BUILD_ISOS = en-US ALL $(filter-out $(ALL_ISOS), $(ISOS))
    BUILD_ISOS = $(ISOS)
  endif
else
  ISOS=en-US
  HELPISOS=en-US
  LANGPACKISOS=en-US
endif

ifeq "$(DIST)" "Ubuntu"
  LANGUAGES := $(ISOS)
  ifeq "$(PKGSOURCE)" "openoffice.org$(VER)"
	BUILD_ONLY_EN_US=y
	ISOS := en-US
	LANGPACKISOS := $(ISOS)
	#HELPISOS := $(ISOS)
	HELPISOS := 
	OOO_L10N_DIR = $(CURDIR)/debian/l10n
#    ifeq (,$(findstring nogsi, $(DEB_BUILD_OPTIONS)))
#	GSI_EXPORT_STAMP = $(STAMP_DIR)/gsi-export
#    endif
  endif
  ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	PACKAGE_QA_TOOLS=n
	PATCHSET = UbuntuL10n
	# seems necessary to build en-US, or else the first language in the list of languages
	# is dropped from the build. Don't package en-us.
	#ISOS := $(filter-out en-US, $(ISOS))
	#ISOS:=en-US de el es fr
	#LANGPACKISOS := $(filter-out en-US, $(ISOS))
	#HELPISOS := $(filter-out af be-BY bn ca gu-IN hu nl nn pa-IN st zu, $(ISOS))
	DEBHELPER_OPTIONS += $(foreach p, $(shell echo $(PACKAGES) | egrep -v l10n) openoffice.org$(VER)-l10n-en-us,-N$(p))
  endif
endif

HELP_PACKAGES = $(filter-out %-common, $(filter openoffice.org$(VER)-help-%, $(PACKAGES)))
LANG_PACKAGES = $(filter-out %-common, $(filter openoffice.org$(VER)-l10n-%, $(PACKAGES)))

ifeq "$(VER)" ""
	CONFIGURE_FLAGS += --with-binsuffix=no
else
	CONFIGURE_FLAGS += --with-binsuffix=$(VER)
endif

ifeq "$(ENABLE_JAVA)" "y"
ifneq "$(SARGE_BACKPORT)" "y"
	export JAVA_HOME=/usr/lib/jvm/java-gcj
	CONFIGURE_FLAGS += --with-java=gij
	BUILD_DEPS += , java-gcj-compat-dev (>= 1.0.56) [$(OOO_JAVA_ARCHS)], ant (>= 1.6.5) [$(OOO_JAVA_ARCHS)] #, mingw32 [$(OOO_JAVA_ARCHS)]
	GCJ_VERSION = $(shell $(JAVA_HOME)/bin/gcj --version | head -n 1 | awk '{ print $$3; }' | cut -d"." -f1,2)
	SYSTEM_XT=y
	SYSTEM_XALAN=y
	SYSTEM_XERCES=y
	SYSTEM_XML_APIS=y
else
ifeq "$(ARCH)" "i386"
	JAVA_HOME=/usr/lib/j2se/1.4
else
	JAVA_HOME=/usr/lib/j2sdk1.4-ibm
endif
	BUILD_DEPS += , j2sdk1.4 [i386], ibm-j2sdk1.4 [powerpc], ant [$(OOO_JAVA_ARCHS)], mingw32 [$(OOO_JAVA_ARCHS)]
	CONFIGURE_FLAGS += --with-system-xml-apis
	SYSTEM_XT=n
	SYSTEM_XALAN=y
	SYSTEM_XERCES=y
	SYSTEM_XML_APIS=y
endif
export JAVA_HOME
	CONFIGURE_FLAGS += --with-jdk-home=$(JAVA_HOME)
	JAVA_COMMON_DEPENDS= , openoffice.org$(VER)-java-common
  ifeq "$(SYSTEM_XT)" "y"
	CONFIGURE_FLAGS += --with-system-xt	
	JAVA_COMMON_JAVA_DEPENDS+= , libxt-java (>= 0.20050823)
	BUILD_DEPS += , libxt-java (>= 0.20050823) [$(OOO_JAVA_ARCHS)]
  endif
  ifeq "$(SYSTEM_XERCES)" "y"
	CONFIGURE_FLAGS += --with-system-xerces
	BUILD_DEPS += , libxerces2-java [$(OOO_JAVA_ARCHS)]
	JAVA_COMMON_JAVA_DEPENDS+= , libxerces2-java
  endif
  ifeq "$(SYSTEM_XALAN)" "y"
	CONFIGURE_FLAGS += --with-system-xalan
	BUILD_DEPS += , libxalan2-java (>= 2.6.0-1) [$(OOO_JAVA_ARCHS)]
	JAVA_COMMON_JAVA_DEPENDS+= , libxalan2-java (>= 2.6.0-1)
  endif
  ifeq "$(SYSTEM_XML_APIS)" "y"
	CONFIGURE_FLAGS += --with-system-xml-apis
	BUILD_DEPS += , libjaxp1.2-java [$(OOO_JAVA_ARCHS)]
	JAVA_COMMON_JAVA_DEPENDS+= , libjaxp1.2-java
  endif
  ifeq "$(DIST)" "Ubuntu"
	BUILD_DEPS += , libdb4.3-java [$(OOO_JAVA_ARCHS)]
  else ifneq "$(SARGE_BACKPORT)" "y"
	BUILD_DEPS += , libdb4.2-java (>= 4.2.52-21) [$(OOO_JAVA_ARCHS)]
  else
	BUILD_DEPS += , libdb4.2-java [$(OOO_JAVA_ARCHS)]
  endif
else
	CONFIGURE_FLAGS += --without-java
	DEBHELPER_OPTIONS += -Nopenoffice.org$(VER)-officebean -Nopenoffice.org$(VER)-java-common
	HELPISOS=
endif

ifeq "$(USE_FIREFOX)" "y"
	CONFIGURE_FLAGS+= --with-firefox
	BUILD_DEPS+= , firefox-dev (>= 1.5.dfsg+1.5.0.1-1ubuntu7) [$(OOO_ARCHS)], libnspr-dev [$(OOO_ARCHS)]
else
 ifeq "$(USE_XULRUNNER)" "y"
	CONFIGURE_FLAGS+= --with-xulrunner
	BUILD_DEPS+= , libxul-dev [$(OOO_ARCHS)], libnss3-dev [$(OOO_ARCHS)]
 else
	BUILD_DEPS+= , mozilla-dev [$(OOO_ARCHS)], libnss-dev (>= 1.7.5) [$(OOO_ARCHS)]
	MOZILLA_NSS_DEPENDS = libnss3 (>= 1.7.5), libnspr4
 endif
endif

ifeq "$(ENABLE_MONO)" "y"
       BUILD_DEPS += , mono-mcs (>= 1.1.8) [$(OOO_ARCHS)], libmono-dev (>= 1.1.8) [$(OOO_ARCHS)], cli-common-dev (>= 0.4.0) [$(OOO_ARCHS)]
	# http://pkg-mono.alioth.debian.org/cli-policy/ch-mono.html#s7.3
	export MONO_SHARED_DIR=$(CURDIR)
else
       CONFIGURE_FLAGS+= --disable-mono
endif

ifeq "$(USE_SYSTEM_HUNSPELL)" "y"
		BUILD_DEPS += , libhunspell-dev (>= 1.0.8-3) [$(OOO_ARCHS)]
		CONFIGURE_FLAGS+= --with-system-hunspell
endif

ifeq "$(SYSTEM_ALTLINUXHYPH)" "y"
	BUILD_DEPS += , libaltlinuxhyph-dev $(LIBALTLINUXHYPH_MINVER) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-altlinuxhyph
endif

ifeq "$(SYSTEM_AGG)" "y"
       BUILD_DEPS += , libagg-dev (>= 2.3-2) [$(OOO_ARCHS)]
       CONFIGURE_FLAGS += --with-system-agg
endif

ifneq "$(USE_STLPORT)" "y"
	CONFIGURE_FLAGS += --without-stlport
else
  ifeq "$(USE_SYSTEM_STLPORT)" "y"
    ifeq "$(USE_STLPORT5)" "y"
      BUILD_DEPS += , libstlport5.0-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
      DEV_STL_DEPENDS=, libstlport5.0-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
    else
      BUILD_DEPS += , libstlport4.6-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
      DEV_STL_DEPENDS=, libstlport4.6-dev $(LIBSTLPORT_MINVER) [$(OOO_ARCHS)]
    endif
    CONFIGURE_FLAGS+= --with-stlport=$(CURDIR)/stlport
  endif
endif

ifeq "$(USE_SYSTEM_BOOST)" "y"
	BUILD_DEPS += , libboost-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-boost
else
  ifeq "$(BUILD_AMD64)" "y"
	BUILD_DEPS += , libboost-dev [amd64]
  endif
endif

ifeq "$(USE_SYSTEM_PORTAUDIO)" "y"
	BUILD_DEPS += , libportaudio-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-portaudio
endif

ifeq "$(USE_EXTERNAL_CXXLIBS)" "y"
       BUILD_DEPS += , libwpd8-dev $(LIBWPD8_MINVER) [$(OOO_ARCHS)]
       CONFIGURE_FLAGS+=  --with-system-libwpd
ifeq "$(USE_SYSTEM_SABLOT)" "y"
	BUILD_DEPS += , libsablot0-dev (>= 1.0.2-4) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-sablot
endif
ifeq "$(USE_EXTERNAL_MYTHES)" "y"
	BUILD_DEPS += , libmythes-dev (>= 1.0-2) [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-mythes
	DEBHELPER_OPTIONS+= -Nlibmythes-dev
endif
endif

ifeq "$(USE_SYSTEM_ICU)" "y"
	BUILD_DEPS += , libicu34-dev [$(OOO_ARCHS)]
	CONFIGURE_FLAGS += --with-system-icu
	# ICU utils are in /usr/sbin (!)
	PATH+=:/usr/sbin
endif

ifeq "$(USE_SYSTEM_XMLSEC)" "y"
  ifeq "$(USE_XULRUNNER)" "y"
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9-1.1) [$(OOO_ARCHS)], libxmlsec1-nss (>= 1.2.9-1.1) [$(OOO_ARCHS)], libxmlsec1-openssl (>= 1.2.9-1.1) [$(OOO_ARCHS)]
  else
	BUILD_DEPS += , libxmlsec1-dev (>= 1.2.9) [$(OOO_ARCHS)], libxmlsec1-nss (>= 1.2.9) [$(OOO_ARCHS)], libxmlsec1-openssl (>= 1.2.9) [$(OOO_ARCHS)]
  endif
	CONFIGURE_FLAGS += --with-system-xmlsec
else
	SHLIBS_OVERRIDE += -Ldebian/shlibs.override.xmlsec
endif

ifeq "$(BUILD_CAIROCANVAS)" "y"
  ifeq "$(USE_SYSTEM_CAIRO)" "y"
    BUILD_DEPS+= , libcairo2-dev [$(OOO_ARCHS)], libglitz-glx1-dev [$(OOO_ARCHS)]
    CONFIGURE_FLAGS+= --with-system-cairo
  endif
else
  CONFIGURE_FLAGS+= --disable-cairo
endif

ifneq "$(BUILD_MDBTOOLS)" "y"
  CONFIGURE_FLAGS+= --disable-access
else
  ifeq "$(USE_SYSTEM_MDBTOOLS)" "y"
    BUILD_DEPS += , mdbtools-dev (>= 0.5.99.0.6pre1.0.20050409-1) [$(OOO_ARCHS)]
    CONFIGURE_FLAGS += --with-system-mdbtools
  endif
endif

ifeq "$(BUILD_KDE)" "n"
	CONFIGURE_FLAGS+= --disable-kde
	DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-kde
	CONFIGURE_FLAGS+= --with-images="industrial crystal hicontrast"
else
       BUILD_DEPS += , kdelibs4-dev $(KDELIBS_MINVER) [$(OOO_ARCHS)]
endif

ifeq "$(BUILD_BINFILTERS)" "y"
		CONFIGURE_FLAGS+= --enable-binfilter
		OOO_FILTER52_DEP = openoffice.org$(VER)-filter-so52
else
		DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-filter-so52
		DEBHELPER_OPTIONS+= -Nopenoffice.org$(VER)-filter-so52-experimental
		OOO_FILTER52_DEP = openoffice.org$(VER)-filter-so52$(EXPSUFFIX)
endif
ifneq "$(BUILD_PYUNO)" "y"
		DEBHELPER_OPTIONS+= -Npython-uno
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(USE_SYSTEM_HSQLDB)" "y"
	BUILD_DEPS += , libhsqldb-java (>= 1.8.0.0-2) [$(OOO_JAVA_ARCHS)]
	BASE_HSQLDB_DEPENDS = libhsqldb-java (>= 1.8.0.0-2)
	CONFIGURE_FLAGS+= --with-system-hsqldb
  endif

  ifeq "$(USE_SYSTEM_BSH)" "y"
	BUILD_DEPS += , bsh (>= 2.0b4-1) [$(OOO_JAVA_ARCHS)]
	COMMON_BSH_DEPENDS = bsh (>= 2.0b4-1)
	CONFIGURE_FLAGS+= --with-system-beanshell
  endif
endif

ifeq "$(USE_SYSTEM_LPSOLVE)" "y"
	CONFIGURE_FLAGS += --with-system-lpsolve
	BUILD_DEPS += , liblpsolve55-dev [$(OOO_ARCHS)]
endif

ifeq "$(USE_DBUS)" "y"
	BUILD_DEPS += , libdbus-glib-1-dev (>= 0.60) [$(OOO_ARCHS)]
endif

ifeq "$(USE_SYSTEM_NEON)" "y"
  ifeq "$(SARGE_BACKPORT)" "y"
	BUILD_DEPS += , libneon24-dev [$(OOO_ARCHS)]
  else
	BUILD_DEPS += , libneon25-dev [$(OOO_ARCHS)]
  endif
	CONFIGURE_FLAGS += --with-system-neon
endif

# Use compiler cache?  Include ccache in DEB_BUILD_OPTIONS for much faster rebuild times
# A complete build uses about 200Mb of compiler cache.
ifeq (ccache,$(findstring ccache,$(DEB_BUILD_OPTIONS)))
  CONFIGURE_FLAGS += --with-gcc-speedup=ccache
endif

# Small symbols?
ifeq "$(SMALL_SYMBOLS)" "y"
  CONFIGURE_FLAGS += --enable-symbols=SMALL
endif

# Restart build from a particular project?
# DEB_BUILD_OPTIONS=from=<projectname>
BUILD_FROM=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^\(.*,\)\?from=\([a-zA-Z0-9]\+\).*$$/\2/p')
export BUILD_FROM

# Build n projects in paralell / override automatic detection?
# DEB_BUILD_OPTIONS=num-cpus=<n>
NUM_CPUS=$(shell echo "$(DEB_BUILD_OPTIONS)," | sed -n 's/^\(.*,\)\?num-cpus=\([0-9]\+\).*$$/\2/p')
ifneq "$(NUM_CPUS)" ""
  CONFIGURE_FLAGS += --with-num-cpus=$(NUM_CPUS)
else
  NUM_CPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
  # using make -jX is not wanted on the Debian buildds, so don't do it...
  ifeq "$(DIST)" "Debian"
    ifeq (buildd,$(shell whoami))
      NUM_CPUS := 1
    endif
  endif
  ifeq "$(NUM_CPUS)" "1"
    # do at least a build with --with-num-cpus=2 to do something while
    # helpcontent2 is doing things slowly..
    NUM_CPUS := 2
  endif
  #CONFIGURE_FLAGS += --with-num-cpus=$(NUM_CPUS)
endif
AVAIL_CPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
# buildd problem?
ifneq (,$(findstring $(ARCH), powerpc sparc))
  AVAIL_CPUS := 1
endif
AVAIL_CPUS := 1
ifneq ($(AVAIL_CPUS),1)
  CONFIGURE_FLAGS += --with-num-cpus=$(shell expr $(AVAIL_CPUS) + 1)
endif

# Build python depends from current python version
PYMAJOR:=$(shell python -c "import sys; print sys.version_info[0]")
PYMINOR:=$(shell python -c "import sys; print sys.version_info[1]")
PYMINORPLUS1:=$(shell python -c "import sys; print sys.version_info[1]+1")
PYTHON_SITE:=debian/python-uno/usr/lib/python$(PYMAJOR).$(PYMINOR)/site-packages

CURDIR ?= $(shell pwd)

ifeq ($(GCC_VERSION),)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$$PATH
else
ifeq ($(GCC_VERSION),snapshot)
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:/usr/lib/gcc-snapshot/bin:$$PATH
	BUILD_LD_LIBRARY_PATH = /usr/lib/gcc-snapshot/lib:$$LD_LIBRARY_PATH
else
	BUILD_PATH = /usr/lib/jvm/java-gcj/bin:$(CURDIR)/debian/usr/bin:$$PATH
endif
endif
BUILD_PATH := $(CURDIR)/debian/usr/bin:$(BUILD_PATH)

ifeq "$(BUILD_ONLY_LIBMYTHES)" "y"
clean:
	dh_testdir
	dh_testroot

	rm -rf ooo-build/build
	rm -rf debian/libmythes-dev
	
	dh_clean

build:
	mkdir -p ooo-build/build
	cd ooo-build/build && \
		tar xfvj ../src/$(TAG)-core.tar.bz2 $(TAG)/lingucomponent/source/thesaurus/mythes && \
		tar xfvj ../src/$(TAG)-system.tar.bz2 $(TAG)/dictionaries/util
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -O2 -Wall -ansi -pedantic -I. -c mythes.cxx && \
		ar rc libmythes.a mythes.o && ranlib libmythes.a && \
		mv libmythes.a $(CURDIR)/ooo-build/build
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -fPIC -O2 -Wall -ansi -pedantic -I. -c mythes.cxx && \
		ar rc libmythes_pic.a mythes.o && ranlib libmythes_pic.a && \
		mv libmythes_pic.a $(CURDIR)/ooo-build/build

install: build
	mkdir -p debian/libmythes-dev/usr/lib
	mkdir -p debian/libmythes-dev/usr/include
	mkdir -p debian/libmythes-dev/usr/share/mythes
	install -m644 \
		$(CURDIR)/ooo-build/build/libmythes.a \
		debian/libmythes-dev/usr/lib/libmythes.a
	install -m644 \
		$(CURDIR)/ooo-build/build/libmythes_pic.a \
		debian/libmythes-dev/usr/lib/libmythes_pic.a
	install -m644 $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes/mythes.hxx \
		debian/libmythes-dev/usr/include
	install -m755 $(SOURCE_TREE)/dictionaries/util/th_gen_idx.pl \
		debian/libmythes-dev/usr/share/mythes/th_gen_idx.pl

binary: binary-arch

binary-arch: install
	dh_testdir
	dh_testroot
	dh_installdocs -plibmythes-dev
	dh_installchangelogs -plibmythes-dev -XNEWS
	chmod 755 debian/scripts/installoverrides
	debian/scripts/installoverrides
	dh_link -plibmythes-dev
	dh_fixperms -plibmythes-dev
	dh_compress -plibmythes-dev
	dh_installdeb -plibmythes-dev
	dh_gencontrol -plibmythes-dev -- -v$(BINARY_VERSION)
	dh_md5sums -plibmythes-dev
	dh_builddeb -plibmythes-dev
else
# Because of the stampdir magic, when you actually want to run a rule
# over, you would have to remove the stamp manually.  Now, just do
# 'debian/rules <target> <target> ... FORCE=1', and the stamp files
# that match the given targets will be removed automagically.
stampdir_targets=files.backup icons.scale patch.apply build.prepare.artwork 
stampdir_targets+=build.prepare configure
stampdir_targets+=setupins setup install install-arch install-indep
stampdir_targets+=langpacks helppacks binary-common binary-arch binary-indep
ifdef FORCE
 DUMMY:=$(shell rm -f $(patsubst %,$(STAMP_DIR)/%,$(filter $(stampdir_targets),$(MAKECMDGOALS))))
endif

# If this is defined, then none of the 'long' commands will be run.  Useful
# for testing.
# test_rules=1

# Since the final stages use up a large amount of diskspace, provide targets to
# remove them without needing a full rebuild

# Clean up the package directories (about 830M) 
clean-debdir:
	dh_testdir
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	rm -f $(STAMP_DIR)/setup
ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	rm -rf debian/ttf-opensymbol \
		debian/openoffice.org$(VER)-common \
		debian/openoffice.org$(VER)-dev-doc \
		debian/openoffice.org$(VER)-java-common \
		debian/openoffice.org$(VER)-l10n-en-us
endif
	dh_clean

# Clean up the installation sets and package directories (about 2.5 Gb!)
clean-instsetoo: clean-debdir
	dh_testdir
	rm -f $(STAMP_DIR)/instsetoo
	# Remove all installation sets
	rm -rf $(SOURCE_TREE)/instsetoo/$(ARCHBUILDDIR)

# Clean compilation results, but leave solver (about 600Mb in addition to instsetoo)
clean-objectdirs: clean-instsetoo
	dh_testdir
	find $(SOURCE_TREE) -maxdepth 2 -name $(ARCHBUILDDIR) -type d -exec rm -rf {} \;

clean:
	dh_testroot
	dh_testdir

	if [ -r ooo-build/Makefile ]; then \
	  $(MAKE) -C ooo-build distclean || true ;\
	fi

	if [ -d ooo-build/test ]; then \
		find ooo-build/test ooo-build/doc -type f \
		     \( -name '*.xls' -o -name '*.sx?' -o -name '*.doc' \
			-o -name '*.123' -o -name '*.lwp' -o -name '*.ppt' \
			-o -name '*.wb2' -o -name '*.png' -o -name '*.WB2' \
			-o -name '*.odp' -o -name '*.odt' -o -name "*.ods" \) \
			-exec rm {} \; ;\
	fi
	find ooo-build/scratch ooo-build/src -type f \
			\( -name '*.ott' -o -name '*.ods' -o -name '*.odg' \) \
			-exec rm {} \;
	rm -f ooo-build/fonts/symbols.xls
	rm -rf ooo-build/desktop/*.desktop
	rm -rf ooo-build/build
	rm -f ooo-build/src/GSI*.sdf
	rm -f ooo-build/po/.intltool-merge-cache
	rm -rf ooo-build/autom4ate.cache

	# remove generated symlinks / java wrappers
	rm -rf debian/usr

	# stlport home
	rm -rf $(CURDIR)/stlport
	# convenience link
	rm -f build

	# uuencode binary files
	set -e; \
	cd ooo-build ;\
	  for f in fonts/opens___.ttf src/ooo_*_images*.bz2 src/extras*bz2 \
	    src/evolocal.odb src/*.gz src/GSI*bz2 src/xt*zip src/go-oo-team.png \
	    src/Draft.jpg src/easter/*.png src/*.bmp src/*.png \
	    templates/*.o?? src/biblio*bz2; do \
	  if [ -s $$f ]; then \
	    uuencode $$f $$f > $$f.uu.tmp && \
	    ../debian/scripts/move-if-change $$f.uu.tmp $$f.uu; \
            touch -r $$f $$f.uu ;\
	  fi ;\
	  rm -f $$f ;\
	done

	# uuencode binary files
	for f in ubuntu/*.otp; do \
	  if [ -s $$f ]; then \
	    uuencode $$f $$f > $$f.uu.tmp && \
	    debian/scripts/move-if-change $$f.uu.tmp $$f.uu; \
            touch -r $$f $$f.uu ;\
	  fi ;\
	  rm -f $$f ;\
	done
	rm -f ubuntu/*.otp

        # uuencode Ximian desktop icons
	set -e; \
	for i in base calc draw impress math template web writer; do \
	  f=ooo-build/desktop/ooo-$$i.png; \
	  if [ -s $$f ]; then \
	    uuencode $$f $$f > $$f.uu.tmp && \
	    debian/scripts/move-if-change $$f.uu.tmp $$f.uu; \
            touch -r $$f $$f.uu ;\
	fi; \
	done

	# we do not need them and they make problem with dpkg-source....
	rm -f ooo-build/www/*.png \
		ooo-build/www/images/*.png \
		ooo-build/www/l10n/*.gif \
		ooo-build/src/open*.png ooo-build/src/file-bug*.png \
		ooo-build/src/*.bmp ooo-build/src/*.xcf \
		ooo-build/src/*.ico \
		ooo-build/scratch/scsolver/docs/class_diagram.odg \
		ooo-build/scratch/scsolver/workben/test_run.ods \
		ooo-build/src/Draft.jpg \
		ooo-build/src/easter/*.png

	rm -f ooo-build/desktop/*.png
	rm -f ooo-build/src/GSI*err
	rm -f ooo-build/config.*

ifneq "$(OOO_L10N_DIR)" ""
	rm -rf $(OOO_L10N_DIR)
endif

ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	rm -rf debian/ttf-opensymbol \
		debian/openoffice.org$(VER)-common \
		debian/openoffice.org$(VER)-dev-doc \
		debian/openoffice.org$(VER)-java-common \
		debian/openoffice.org$(VER)-l10n-en-us
endif
	dh_clean

	# Files created in debian directory
	rm -f debian/*.postinst debian/*.postrm debian/*.preinst debian/*.prerm
	if [ -d "$(STAMP_DIR)" ]; then rm -rf "$(STAMP_DIR)"; fi
	rm -f debian/shlibs.override.stdlibs

ifeq "$(ENABLE_MONO)" "y"
	rm -rf $(MONO_SHARED_DIR)/.wapi
endif

ifeq "$(HELPISOS)" ""
	rm -rf images*
endif

	rm -f l10n.fdupes

	$(MAKE) -f debian/rules control


# Generate control file, because we have so many different languages
# Based on script by Martin Quinson <Martin.Quinson@tuxfamily.org>
control: debian/control
debian/control: debian/control.in debian/control.lang.in debian/control.help.in ooo-build/bin/openoffice-xlate-lang debian/rules
	chmod 755 ooo-build/bin/openoffice-xlate-lang
	sed -e "s#openoffice.orgVER#openoffice.org$(VER)#g" \
	    -e "s#%$(DIST)=\([^%]*\)%#, \1#g#" \
	    -e "s#%[A-Za-z]*=[^%]*%##g#" \
	    -e "s#%BUILD_DEPS%#$(strip $(BUILD_DEPS))#g" \
	    < debian/control.in > debian/control

ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	awk '{print} /^ *$$/ {exit}' debian/control > debian/control.l10n
	sed 's/Build-Depends:/Build-Depends-Indep:/' debian/control.l10n > debian/control
	rm -f debian/control.l10n

	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.l10n.in
endif

	for LNUM in $(LANGPACKISOS) ; do \
	    [ "$$LNUM" = en-US -a "$(PKGSOURCE)" = "openoffice.org$(VER)-l10n" ] && continue; \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    case "$$LCODE" in \
		bn|gu-in|pa-in|ml-in|or-in|te-in|ta-in) \
			FONT_SUGGESTS=", ttf-`echo $$LNAME | tr A-Z a-z`-fonts"; \
			;; \
		hi-in|ne|mr-in) \
			FONT_SUGGESTS=", ttf-devanagari-fonts"; \
			;; \
		he) \
			FONT_SUGGESTS=", culmus"; \
			;; \
		km) \
			FONT_SUGGESTS=", ttf-khmeros"; \
			;; \
		lo) \
			FONT_SUGGESTS=", ttf-lao"; \
			;; \
		ar) \
			FONT_SUGGESTS=", ttf-arabeyes"; \
			;; \
		fa) \
			FONT_SUGGESTS=", ttf-farsiweb"; \
			;; \
		*) \
			FONT_SUGGESTS= ;; \
	    esac; \
	    case "$$LCODE" in \
		rw|tn|ss|nso|ts|ve) \
			LOCALES_DEPENDS="belocs-locales-data" \
			;; \
		km|sr-cs) \
			LOCALES_DEPENDS="locales (>= 2.3.5-12) | belocs-locales-data | locales-all" \
			;; \
		*) \
			LOCALES_DEPENDS="locales | belocs-locales-data | locales-all" \
			;; \
	    esac; \
	    L10N_COMMON=; \
	    if [ "$(DIST)" = Ubuntu ]; then \
	        case "$$LCODE" in \
		    en-us) ;; \
		    *) L10N_COMMON='openoffice.orgVER-l10n-common (>= $${base-version}), '; \
		esac; \
		LOCALES_DEPENDS="openoffice.org$(VER)-common (>= \$${base-version}) | language-support-$$CCODE, openoffice.org$(VER)-common (<< \$${next-base-version}) | language-support-$$CCODE"; \
		if [ "$(AMD64_EXPERIMENTAL)" = y ]; then \
		LOCALES_DEPENDS="openoffice.org$(VER)-common (>= \$${base-version}) | openoffice.org$(VER)-common-experimental (>= \$${base-version}) | language-support-$$CCODE, openoffice.org$(VER)-common (<< \$${next-base-version}) | openoffice.org$(VER)-common-experimental (<< \$${next-base-version}) | language-support-$$CCODE"; \
		fi; \
	    fi; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
	        -e "s|@FONT_SUGGESTS@|$$FONT_SUGGESTS|g" \
	        -e "s:@LOCALES_DEPENDS@:$$LOCALES_DEPENDS:g" \
	        -e "s:@L10N_COMMON@:$$L10N_COMMON:g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.lang.in; \
	done

ifneq "$(HELPISOS)" ""
	for LNUM in $(HELPISOS) ; do \
	    LNAME=`ooo-build/bin/openoffice-xlate-lang -l $$LNUM | perl -e 'print ucfirst(<STDIN>);'`; \
	    LCODE=`ooo-build/bin/openoffice-xlate-lang -i $$LNUM | tr A-Z a-z`; \
	    CCODE=`echo $$LCODE | sed 's/-.*//'`; \
	    sed -e "s|@LNAME@|$$LNAME|g" -e "s|@LCODE@|$$LCODE|g" \
		-e "s|@CCODE@|$$CCODE|g" \
			-e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
	        >> debian/control < debian/control.help.in; \
	done
endif
ifeq "$(PKGSOURCE)" "openoffice.org$(VER)"
ifeq "$(BUILD_JARS_NATIVE)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.gcj.in
endif
ifeq "$(ENABLE_MONO)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.mono.in
endif
ifeq "$(PACKAGE_QA_TOOLS)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.qa.in
endif
ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.mozilla.in
endif
ifeq "$(BUILD_DBG_PACKAGE)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.debug.in
endif

ifeq "$(AMD64_EXPERIMENTAL)" "y"
	sed -e "s|openoffice.orgVER|openoffice.org$(VER)|g" \
		>> debian/control < debian/control.experimental
endif
endif
ifeq "$(SARGE_BACKPORT)" "y"
	perl -pi -e "s,%CONTRIB%,contrib/,g" debian/control
else
	perl -pi -e "s,%CONTRIB%,,g" debian/control
endif

	perl -pi -e "s,%OOO_ARCHS%,$(OOO_ARCHS),g" debian/control

	python debian/scripts/joinctrl.py < debian/control > debian/control.tmp
	mv debian/control.tmp debian/control

	# -l10n-en became -l10n-en-us
	perl -pi -e 's/Conflicts:(.*)openoffice.org2-l10n-en-us$$/Conflicts:$$1openoffice.org2-l10n-en-us, openoffice.org-l10n-en/' debian/control
	perl -pi -e 's/Replaces:(.*)openoffice.org2-l10n-en-us$$/Replaces:$$1openoffice.org2-l10n-en-us, openoffice.org-l10n-en/' debian/control
	perl -pi -e 's/Provides:(.*)openoffice.org2-l10n-en-us$$/Provides:$$1openoffice.org2-l10n-en-us, openoffice.org-l10n-en/' debian/control
	# ... and -hi became -hi-in
	perl -pi -e 's/Conflicts:(.*)openoffice.org2-l10n-hi-in$$/Conflicts:$$1openoffice.org2-l10n-hi-in, openoffice.org-l10n-hi/' debian/control
	perl -pi -e 's/Replaces:(.*)openoffice.org2-l10n-hi-in$$/Replaces:$$1openoffice.org2-l10n-hi-in, openoffice.org-l10n-hi/' debian/control
	perl -pi -e 's/Provides:(.*)openoffice.org2-l10n-hi-in$$/Provides:$$1openoffice.org2-l10n-hi-in, openoffice.org-l10n-hi/' debian/control
	# make -l10n-fi suggest openoffice.org-spellcheck-fi to
	# match myspell-fi and Soikko
	perl -pi -e 's/myspell-dictionary-fi/myspell-dictionary-fi | openoffice.org-spellcheck-fi/' debian/control

ifeq "$(USE_PYCENTRAL)" "y"
	# new python policy
	perl -pi -e 's/Package: python-uno$$/Package: python-uno\n\Provides: \$${python:Provides}\n\XB-Python-Version: \$${python:Versions}/' debian/control
	perl -pi -e 's/Package: python-uno-experimental/Package: python-uno-experimental\n\Provides: \$${python:Provides}\n\XB-Python-Version: \$${python:Versions}/' debian/control
endif

.DELETE_ON_ERROR: debian/control

build: pre-build build-arch build-indep
build-arch: $(STAMP_DIR)/build
build-indep: $(STAMP_DIR)/build

pre-build:
ifeq "$(ARCH)" "amd64"
	@echo "The amd64 build is still experimental"
	#exit 63
# finally fail in the binary-arch target
endif

# All 'important' targets have 2 lines.  The one that is run by
# dpkg-buildpackage or the user, and the one that does the actual work.  This
# indirection is needed so that the 'stamp' files that signify when a rule is
# done can be located in a separate 'stampdir'.  Recall that make has no way to
# know when a goal has been met for a phony target (like "build" or "install").
#
# At the end of each stampdir target, be sure to run the command 'touch $@'
# so that the target will not be run again.  Removing the file will make
# make run the target over.

configure: ooo-build/config.status
ooo-build/config.status: ooo-build/configure
	dh_testdir
	$(MAKE) -f debian/rules environment

	# Make sure needed scripts are executable
	set -e;\
	for FILE in debian/scripts/installoverrides \
		    debian/scripts/move-if-change \
		    debian/scripts/aot-compile \
		    debian/scripts/cleandupes \
		    ooo-build/configure \
		    ooo-build/bin/[a-z]* \
		    ooo-build/patches/apply.pl ;\
	do \
	  chmod 755 $$FILE ;\
	done
	  
	mkdir -p $(STAMP_DIR)

ifeq "$(DIST)" "Ubuntu"
  ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
	cp -p ooo-build/distro-configs/Ubuntu.conf.in ooo-build/distro-configs/UbuntuL10n.conf.in
  endif
endif

	# uudecode source files, omit GSI files, building only en-US
	cd ooo-build; for uu in fonts/opens___.ttf.uu src/*.uu templates/*.uu src/easter/*.uu; do \
	  case "$$uu" in src/GSI*) continue; esac; \
	  orig="`echo "$$uu" |sed -e 's#.uu$$##'`" ;\
          if [ ! -s $$orig ]; then \
            uudecode -o $$orig $$uu ;\
            touch -r $$uu $$orig ;\
          fi ;\
	done

	# uudecode ubuntu templates
	for uu in ubuntu/*.uu; do \
	  orig="`echo "$$uu" |sed -e 's#.uu$$##'`" ;\
          if [ ! -s $$orig ]; then \
            uudecode -o $$orig $$uu ;\
            touch -r $$uu $$orig ;\
          fi ;\
	done

        # uudecode Ximian desktop icons
	for i in base calc draw impress math template web writer; do \
	  if [ ! -s ooo-build/desktop/ooo-$$i.png ]; then \
	    uudecode -o ooo-build/desktop/ooo-$$i.png \
		ooo-build/desktop/ooo-$$i.png.uu ;\
	    touch -r ooo-build/desktop/ooo-$$i.png.uu \
		ooo-build/desktop/ooo-$$i.png ;\
	  fi; \
	done

ifneq ($(GCC_VERSION),)
ifneq ($(GCC_VERSION),snapshot)
	# create links for gcc and g++ (and gij and gcj), ooo-build does not
	# honour overriding CC and CXX and we need to use gcc/g++ 4.0 or /
	# ant.mk wants gcj at the moment...
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -sf /usr/bin/$(CC_PREFIX)gcc-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcc
	ln -sf /usr/bin/$(CC_PREFIX)g++-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/g++
	#ln -sf /usr/bin/$(CC_PREFIX)gcj-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gcj
	#ln -sf /usr/bin/gij-$(GCC_VERSION) $(CURDIR)/debian/usr/bin/gij
else
ifneq "$(CC_PREFIX)" ""
	mkdir -p $(CURDIR)/debian/usr/bin
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcc $(CURDIR)/debian/usr/bin/gcc
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)g++ $(CURDIR)/debian/usr/bin/g++
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gcj $(CURDIR)/debian/usr/bin/gcj
	ln -s /usr/lib/gcc-snapshot/bin/$(CC_PREFIX)gij $(CURDIR)/debian/usr/bin/gij
endif
endif
endif

#ifeq "$(DIST)" "Ubuntu"
#	mkdir -p $(CURDIR)/debian/usr/bin
#	ln -sf /usr/bin/gcj-$(GCJ_VERSION) $(CURDIR)/debian/usr/bin/gcj
#	ln -sf /usr/bin/gij-$(GCJ_VERSION) $(CURDIR)/debian/usr/bin/gij
#endif

ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# stlport home
	if [ ! -d stlport ]; then \
		mkdir -p stlport; \
		ln -sf /usr/include/stlport stlport/stlport; \
		ln -sf /usr/lib stlport/lib; \
	fi
endif

ifneq "$(BUILD_ONLY_EN_US)" "y"
ifneq "$(LANGPACKISOS)" "en-US"
	cd ooo-build; for uu in src/GSI*.uu; do \
	  iso=$$(echo $$uu | sed -n 's/.*GSI_\(.*\)\.sdf.*/\1/p'); \
	  case " $(LANGPACKISOS) " in *\ $$iso\ *) ;; *) continue; esac; \
	  orig="`echo "$$uu" |sed -e 's#.uu$$##'`" ;\
	  if [ ! -s $$orig ]; then \
	    uudecode -o $$orig $$uu ;\
	    touch -r $$uu $$orig ;\
	  fi ;\
	done
	# extract extra GSIs
	find ooo-build/src -name "*.sdf.bz2" -exec bunzip2 -k \{\} \;
	for i in `find ooo-build/src/*.sdf.gz`; do gunzip -dc "$$i" > \
		ooo-build/src/`basename $$i .gz`; done
	# work around broken stuff in the GSI breaking the build in svx
	for iso in as-IN he lo lv ml-IN mr-IN nb or-IN sh-YU sr-CS ur-IN; do \
	  case " $(LANGPACKISOS) " in *\ $$iso\ *) ;; *) continue; esac; \
	  [ -f ooo-build/src/GSI_$$iso.sdf ] || continue; \
	  TMP=`mktemp -q`; \
	  grep -v OOO_LICENSE ooo-build/src/GSI_$$iso.sdf \
	    > $$TMP && mv $$TMP ooo-build/src/GSI_$$iso.sdf; \
	done
endif
endif

	# Make convenience link
	if [ ! -L build ]; then ln -s $(SOURCE_TREE) build ; fi

	# Make sure we have /proc mounted - otherwise idlc will fail later.
	test -r /proc/version

	cd ooo-build ; \
		PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) ../ooo-build/configure $(CONFIGURE_FLAGS)

	touch $@

build: $(STAMP_DIR)/build
$(STAMP_DIR)/build: ooo-build/config.status
	dh_testdir

ifeq "$(BUILD_KDE)" "n"
	# hack to tell we want crystal icons nevertheless and they should be
	# extracted...
	if ! grep -q crystal ooo-build/bin/setup; then \
		cp ooo-build/bin/setup ooo-build/bin/setup.bak && \
		cat ooo-build/bin/setup.bak \
			| sed -e s/\'industrial/\'industrial\ crystal/ \
			> ooo-build/bin/setup && rm ooo-build/bin/setup.bak; \
	fi
endif

	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) DEFAULT_TO_ENGLISH_FOR_PACKING=1 $(MAKE)

	# DPKG is only set on with-EPM build what we don't do and the menu stuff
	# is only built wenn DPKG is set.. Same with PKGFORMAT.
	cd $(SOURCE_TREE)/sysui; \
		. $(CURDIR)/$(SOURCE_TREE)/*.sh; \
		PATH=$(BUILD_PATH) DPKG="dpkg" PKGFORMAT="deb" NO_PKG_MANGLE=go-away \
		../solenv/bin/build.pl && ../solenv/bin/deliver.pl

ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	# build non-PIC version of libmythes
	cd $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes && \
		$(CXX) -O2 -Wall -ansi -pedantic -I. -c mythes.cxx && \
		ar rc libmythes_nopic.a mythes.o && ranlib libmythes_nopic.a && \
		mv libmythes_nopic.a $(CURDIR)/$(SOURCE_TREE)
endif

ifeq "$(ENABLE_JAVA)" "y-braindamage"
	# rebuild unowinreg.dll from source
	cd $(SOURCE_TREE)/odk/source/unowinreg/win && \
		i586-mingw32msvc-gcc -Wall -D_JNI_IMPLEMENTATION_ -I$(JAVA_HOME)/include -shared -o unowinreg.dll unowinreg.c \
			-Wl,--kill-at -lkernel32 -ladvapi32 && \
		mv unowinreg.dll $(CURDIR)/$(SOURCE_TREE)
endif

	touch $@

install: $(STAMP_DIR)/install
$(STAMP_DIR)/install: $(STAMP_DIR)/build
	dh_testdir
	dh_testroot

	rm -rf $(CURDIR)/debian/tmp
	find debian/tmp ! -perm -200 | xargs -r chmod u+w
	cd ooo-build ; PATH=$(BUILD_PATH) LD_LIBRARY_PATH=$(BUILD_LD_LIBRARY_PATH) DESTDIR=$(CURDIR)/debian/tmp $(MAKE) install

	# no special ooqstart wrappers
	install -m 755 build/ooo-wrapper$(VER) \
	  debian/tmp/pkg/openoffice.org-common/usr/bin/
	for i in debian/tmp/pkg/*/usr/bin/oo*; do \
	  case $$i in *wrapper*) continue; esac; \
	  ln -sf ooo-wrapper$(VER) $$i; \
	done

ifeq "$(HELPISOS)" ""
	for i in common calc math draw writer impress base; do \
		rm -rf debian/tmp/pkg/openoffice.org-$$i/$(OODIR)/help; \
	done
else
	# install *english* help; we can't do that later since this is in
	# arch-dep and arch-indep stuff..
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-help-en-us/$(OODIR)/help/en; \
		for i in common calc math draw writer impress base; do \
			cp -r ./openoffice.org-$$i/$(OODIR)/help/en/* \
			 ./openoffice.org-help-en-us/$(OODIR)/help/en && \
			rm -rf ./openoffice.org-$$i/$(OODIR)/help/en; \
		done
	# save space by removing non-packaged localized help; we don't need
	# them anyway
	cd debian/tmp/pkg && \
		for iso in $(filter-out en-US,$(LANGPACKISOS)); do \
			if ! `echo $(HELPISOS) | grep -q $$iso`; then \
				rm -rf openoffice.org-help-$$iso; \
			fi; \
		done
endif

ifneq "$(findstring en-US,$(ISOS))" ""
ifeq "$(BUILD_BINFILTERS)" "y"
	# move en-US binfilter resources which are not in -l10n-en-us there.
	# They will be moved out of -common in the langpacks target...
	cd debian/tmp/pkg; \
		mv openoffice.org-calc/$(OODIR)/program/resource/bf_sc*en-US.res \
			openoffice.org-common/$(OODIR)/program/resource && \
		mv openoffice.org-math/$(OODIR)/program/resource/bf_sm*en-US.res \
			openoffice.org-common/$(OODIR)/program/resource
endif
	# ... same with base
	cd debian/tmp/pkg; \
	mv openoffice.org-base/$(OODIR)/program/resource/abp*en-US.res \
		openoffice.org-common/$(OODIR)/program/resource && \
	mv openoffice.org-base/$(OODIR)/program/resource/dbp*en-US.res \
		openoffice.org-common/$(OODIR)/program/resource && \
	mv openoffice.org-base/$(OODIR)/program/resource/dbu*en-US.res \
		openoffice.org-common/$(OODIR)/program/resource
endif

ifeq "$(ENABLE_JAVA)" "y"
	# move officebean.jar into -officebean (They will be moved out of -core
	# in the install-arch target). Do the /usr/share/java move here already
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-core/usr/share/java/openoffice$(VER); \
		mv openoffice.org-common/$(OODIR)/program/classes/officebean.jar \
			openoffice.org-core/usr/share/java/openoffice$(VER)

	# move hsqldb.jar and sdbc_hsqldb.jar into -base (do the move
	# to /usr/share/java here directly, we do it for the "rest"
	# later
	cd debian/tmp/pkg; \
		mkdir -p openoffice.org-base/usr/share/java/openoffice$(VER); \
		for i in *hsqldb.jar; do \
			mv openoffice.org-common/$(OODIR)/program/classes/$$i \
				openoffice.org-base/usr/share/java/openoffice$(VER); \
		done
endif

	# move .so to -dev
	cd debian/tmp/pkg; \
		mkdir -p -m755 openoffice.org-dev/$(OODIR)/program; \
		mv openoffice.org-common/$(OODIR)/program/*.so \
			openoffice.org-dev/$(OODIR)/program

ifeq "$(ENABLE_MONO)" "y"
	# somehow, these go into -common. Move them to -core here to be able
	# to install them later in install-arch
	cd debian/tmp/pkg; \
	mv openoffice.org-common/$(OODIR)/program/cli_*.dll  \
		openoffice.org-core/$(OODIR)/program
	if [ -d openoffice.org-common/$(OODIR)/program/assembly ]; then \
		rm -rf openoffice.org-common/$(OODIR)/program/assembly; \
	fi
endif

	# ooqstart should go into -core; we have just a glib dependency
	mkdir -p debian/tmp/pkg/openoffice.org-core/$(OODIR)/program
	mv debian/tmp/pkg/openoffice.org-common/$(OODIR)/program/ooqstart \
		debian/tmp/pkg/openoffice.org-core/$(OODIR)/program
#	mkdir -p -m755 debian/tmp/pkg/openoffice.org-gnome/$(OODIR)/share/xdg
#	mv debian/tmp/pkg/openoffice.org-common/$(OODIR)/share/xdg/qstart.desktop \
#		debian/tmp/pkg/openoffice.org-gnome/$(OODIR)/share/xdg

	# move gengal stuff into -dev
	mkdir -p debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program
	mv debian/tmp/pkg/openoffice.org-core/$(OODIR)/program/gengal* \
		debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program
	mv debian/tmp/pkg/openoffice.org-common/$(OODIR)/program/gengal  \
		debian/tmp/pkg/openoffice.org-dev/$(OODIR)/program

	# move SDK documentation into own package
	rm -rf debian/tmp/pkg/openoffice.org-dev-doc
	mkdir -p debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev-doc
	mv debian/tmp/pkg/openoffice.org-dev/usr/share/doc/openoffice.org \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev && \
	mv debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/sdk/docs \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev
	rm -rf debian/tmp/pkg/openoffice.org-dev/usr/share/doc/openoffice.org \
		debian/tmp/pkg/openoffice.org-dev-doc/usr/share/doc/openoffice.org-dev/sdk
	mkdir -p debian/tmp/pkg/openoffice.org-dev-doc/$(OODIR)/sdk
	mv debian/tmp/pkg/openoffice.org-dev/$(OODIR)/sdk/examples \
		debian/tmp/pkg/openoffice.org-dev-doc/$(OODIR)/sdk

	touch $@

#
# Generate maintainer scripts
maintscripts: $(STAMP_DIR)/maintscripts
$(STAMP_DIR)/maintscripts: debian/shell-lib.sh debian/control
	dh_testdir

	rm -f debian/*.{pre,post}{inst,rm}

	# generate maintainer scripts from *.in
	for PKG in $(PACKAGES); do \
	  case $$PKG in *l10n-*|*help-*|*experimental*) continue; esac; \
	  for FILE in postinst postrm preinst prerm; do \
	    MAINTSCRIPT=debian/$$PKG.$$FILE ; \
	    if [ -e $$MAINTSCRIPT.in ]; then \
	      sed -n '1,/^#INCLUDE_SHELL_LIB#$$/p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' > $$MAINTSCRIPT; \
	      grep LIBSUFFIX debian/scripts/vars.$(ARCH) >> $$MAINTSCRIPT; \
	      cat debian/shell-lib.sh >> $$MAINTSCRIPT; \
	      sed -n '/^#INCLUDE_SHELL_LIB#$$/,$$p' < $$MAINTSCRIPT.in | sed -e '/^#INCLUDE_SHELL_LIB#$$/d' >> $$MAINTSCRIPT; \
	    fi; \
	  done; \
	done

	touch $@

# Install files generated by setup into package directories
helppacks: $(STAMP_DIR)/helppacks
$(STAMP_DIR)/helppacks: $(STAMP_DIR)/install ooo-build/bin/openoffice-xlate-lang

ifneq "$(HELPISOS)" ""
	# we assume here that when we want to build/package help here we want
	# to do that with en-US anyway...
	rm -rf $(PKGDIR)-help-en-us $(PKGDIR)-help-en-us.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-help-en-us $(PKGDIR)-help-en-us || exit 1
ifneq "$(HELPISOS)" "en-US"
	set -e; \
	for iso in $(filter-out en-US,$(HELPISOS)); do \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  diriso=`echo $$pkgiso | cut -d"-" -f1`; \
	  if [ "$$pkgiso" = "pt-br" ]; then diriso=pt-BR; fi; \
	  if [ "$$pkgiso" = "th-cn" ]; then diriso=zh-CN; fi; \
	  if [ "$$pkgiso" = "zh-tw" ]; then diriso=zh-TW; fi; \
	  rm -rf $(PKGDIR)-help-$$pkgiso $(PKGDIR)-help-$$pkgiso.*.debhelper; \
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-help-$$iso \
		$(PKGDIR)-help-$$pkgiso; \
	done
endif

	# quick hack to reduce the size of the help packages
	for iso in $(HELPISOS); do \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  diriso=`echo $$pkgiso | cut -d"-" -f1`; \
	  case "$$iso" in en-US) iso=en; esac; \
	  for f in CONTEXTS DOCS DOCS.TAB LINKNAMES OFFSETS POSITIONS SCHEMA; do \
	    if cmp -s $(PKGDIR)-help-$$pkgiso/$(OODIR)/help/$$iso/simpress.idx/$$f \
	           $(PKGDIR)-help-$$pkgiso/$(OODIR)/help/$$iso/sdraw.idx/$$f; \
	    then \
	      echo "symlinking duplicate files: help/$$iso/sdraw.idx/$$f"; \
	      ln -sf ../sdraw.idx/$$f $(PKGDIR)-help-$$pkgiso/$(OODIR)/help/$$iso/simpress.idx/$$f; \
	    fi; \
	  done; \
	done	
endif

	touch $@

# Install files generated by setup into package directories
langpacks: $(STAMP_DIR)/langpacks
$(STAMP_DIR)/langpacks: $(STAMP_DIR)/install $(STAMP_DIR)/install-indep ooo-build/bin/openoffice-xlate-lang

	for ext in `echo $(LANGPACKISOS) |tr A-Z a-z` ; do \
	  rm -rf $(PKGDIR)-l10n-$$ext;\
	  rm -rf $(PKGDIR)-l10n-$$ext.*.debhelper;\
	done

ifneq "$(findstring en-US,$(ISOS))" ""
	# move the english stuff out of the -common install
	for dir in program/resource share/registry/res/en-US; do \
	  mkdir -m755 -p $(PKGDIR)-l10n-en-us/$(OODIR)/$$dir ;\
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-common/$(OODIR)/$$dir/* \
			$(PKGDIR)-l10n-en-us/$(OODIR)/$$dir || exit 1;\
	done
endif

	# ... and install the rest of the langpacks
	for iso in $(LANGPACKISOS); do \
	  if [ "$$iso" = "en-US" ]; then continue; fi ; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  rm -rf $(PKGDIR)-l10n-$$pkgiso $(PKGDIR)-l10n-$$pkgiso.*.debhelper; \
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-l10n-$$iso \
		$(PKGDIR)-l10n-$$pkgiso || exit 1; \
	done

	
	# remove empty uno_packages dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/uno_packages; \
	done
	
	# remove ooo dirs somehow in the langpacks(?)
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/dict/ooo; \
	done

	# remove extra license files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/licenses; \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/readme/LICENSE*; \
	done
	
	# remove extra readme files
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/readmes; \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/share/readme/README*; \
	done

	# remove empty help directories
	for iso in `echo $(LANGPACKISOS) | tr A-Z a-z`; do \
		rm -rf $(PKGDIR)-l10n-$$iso/$(OODIR)/help; \
	done

	# replace duplicate files in the langpacks with symlinks
	fdupes --quiet --recurse --sameline --size \
		debian/openoffice.org$(VER)-common/$(OODIR) \
		$(foreach d,$(shell echo $(LANGPACKISOS) | tr A-Z a-z),debian/openoffice.org$(VER)-l10n-$(d)/$(OODIR)) \
		> l10n.fdupes
	debian/scripts/cleandupes --base=openoffice.org$(VER) --prefix=debian < l10n.fdupes

	# install Ubuntu templates
	odts=`cd ubuntu; echo *.odt`; \
	for iso in $(LANGPACKISOS); do \
	  [ "$$iso" = "en-US" ] && continue; \
	  pkgiso=`echo $$iso | tr \[:upper:\] \[:lower:\]`; \
	  mkdir -p $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt; \
	  for odt in $$odts; do \
	    ln -sf ../../en-US/presnt/$$odt \
	      $(PKGDIR)-l10n-$$pkgiso/$(OODIR)/share/template/$$iso/presnt/$$odt; \
	  done; \
	done

ifeq "$(PACKAGE_QA_TOOLS)" "y"
	mkdir -p $(PKGDIR)-qa-tools/$(OODIR)/program
	mv $(PKGDIR)-common/$(OODIR)/program/.testtoolrc \
		$(PKGDIR)-qa-tools/$(OODIR)/program
	chmod 644 $(PKGDIR)-qa-tools/$(OODIR)/program/.testtoolrc
else
	rm -f $(PKGDIR)-common/$(OODIR)/program/.testtoolrc
endif

	touch $@


# Install files generated by setup into arch-dependent package directories
install-arch: $(STAMP_DIR)/install-arch
$(STAMP_DIR)/install-arch: $(STAMP_DIR)/install
	dh_testdir
	dh_testroot
	umask 022

	# Copy files placed by ooo-build/bin/package-ooo	
	for i in base calc core draw impress math writer gnome dev; do \
	  rm -rf $(PKGDIR)-$$i $(PKGDIR)-$$i.*.debhelper ;\
	  cp -r --preserve=mode debian/tmp/pkg/openoffice.org-$$i $(PKGDIR)-$$i || exit 1;\
	done

	rm -rf debian/mozilla-openoffice.org debian/mozilla-openoffice.org.*.debhelper
	rm -rf $(PKGDIR) $(PKGDIR).*.debhelper
	rm -rf $(PKGDIR)-evolution $(PKGDIR)-evolution.*.debhelper
ifeq "$(BUILD_KDE)" "y"
	rm -rf $(PKGDIR)-kde $(PKGDIR)-kde.*.debhelper
endif

	dh_installdirs -a

ifeq "$(BUILD_KDE)" "y"
	mkdir -p -m755 $(PKGDIR)-kde/$(OODIR)/program
	for f in kdefilepicker libfps_kde.so libvclplug_kde[0-9]*.so libkab*so kdebe*so; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-kde/$(OODIR)/program || exit 1 ;\
	done
endif

	# move the GNOME stuff which are *not* in gid_Module_Optional_Gnome
	# (which is moved into -gnome in package-ooo) into -gnome
	mkdir -p -m755 $(PKGDIR)-gnome/$(OODIR)/program
	for f in gnome-open-url.bin fps_gnome.uno.so libvclplug_gtk[0-9]*.so libeggtray* libqstart_gtk*; do \
	  mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-gnome/$(OODIR)/program || exit 1;\
	done

	# split out gtk stuff
	mkdir -p -m755 $(PKGDIR)-gtk/$(OODIR)/program
	mv $(PKGDIR)-gnome/$(OODIR)/program/* $(PKGDIR)-gtk/$(OODIR)/program/
	mv $(PKGDIR)-gtk/$(OODIR)/program/ucpgvfs1.uno.so \
		$(PKGDIR)-gnome/$(OODIR)/program/
	mv $(PKGDIR)-gtk/$(OODIR)/program/gnome-set-default-application \
		$(PKGDIR)-gnome/$(OODIR)/program/
#	# keep gconfbe1.uno.so in -gtk, gdm depends on it anyway.
#	mv $(PKGDIR)-gtk/$(OODIR)/program/gconfbe* \
#		$(PKGDIR)-gnome/$(OODIR)/program

	mkdir -p -m755 $(PKGDIR)-evolution/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libevoab2.so $(PKGDIR)-evolution/$(OODIR)/program

ifeq "$(PACKAGE_NPSOPLUGIN)" "y"
	mkdir -p -m755 debian/mozilla-openoffice.org/$(OODIR)/program
	for f in libnpsoplugin.so nsplugin; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f debian/mozilla-openoffice.org/$(OODIR)/program; \
	done
	cd debian/mozilla-openoffice.org && \
		for b in mozilla mozilla-firefox firefox; do \
			mkdir -p usr/lib/$$b/plugins && \
				ln -sf /$(OODIR)/program/libnpsoplugin.so \
				   usr/lib/$$b/plugins/libnpsoplugin.so; \
		done
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/libnpsoplugin.so
	rm -f $(PKGDIR)-core/$(OODIR)/program/nsplugin
endif

ifeq "$(BUILD_BINFILTERS)" "y"
	rm -rf $(PKGDIR)-filter-so52/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libbf_* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-calc/$(OODIR)/program/libbf_sc* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/liblegacy_binfilters* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libbindet* \
		$(PKGDIR)-filter-so52/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/legacy_binfilters.rdb \
		$(PKGDIR)-filter-so52/$(OODIR)/program
endif

	# OOo's package split sucks...
	mv $(PKGDIR)-core/$(OODIR)/program/libsw* \
		$(PKGDIR)-writer/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libsd6* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdd* \
	   $(PKGDIR)-core/$(OODIR)/program/libsdui* \
		$(PKGDIR)-draw/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/slideshow.uno.so \
		$(PKGDIR)-impress/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-base/$(OODIR)/program
	for i in dba; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
	for i in odbcbase2 dbpool2 jdbc2 odbc2 sdbc2 mysql2 adabas2; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
ifeq "$(ENABLE_JAVA)" "y"
	for i in jdbc2 hsqldb2; do \
		mv $(PKGDIR)-core/$(OODIR)/program/lib$$i* \
		   $(PKGDIR)-base/$(OODIR)/program; \
	done
	# hack, Ubuntu #33432, #340468
	ln $(PKGDIR)-base/$(OODIR)/program/libhsqldb2.so \
		$(PKGDIR)-base/$(OODIR)/program/libhsqldb2
endif
	mv $(PKGDIR)-core/$(OODIR)/program/libflat*so \
		$(PKGDIR)-base/$(OODIR)/program; \

ifeq "$(BUILD_MDBTOOLS)" "y"
	mv $(PKGDIR)-core/$(OODIR)/program/libmdb*so \
		$(PKGDIR)-base/$(OODIR)/program
endif

	# move vba stuff into -calc, they are calc-only and linked to
	# libsc*
	for i in libvbaobj vbaevents; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$i*uno.so \
			$(PKGDIR)-calc/$(OODIR)/program; \
	done

ifneq "$(ARCH)" "amd64"
	mv $(PKGDIR)-core/$(OODIR)/program/scsolver.uno.so \
		$(PKGDIR)-calc/$(OODIR)/program
  ifneq "$(USE_SYSTEM_LPSOLVE)" "y"
	mv $(PKGDIR)-core/$(OODIR)/program/liblpsolve55.so \
		$(PKGDIR)-calc/$(OODIR)/program
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(USE_SYSTEM_HSQLDB)" "y"
	# link to system hsqldb
	ln -sf /usr/share/java/hsqldb.jar \
	        $(PKGDIR)-base/usr/share/java/openoffice$(VER)/hsqldb.jar
  endif
endif

ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-officebean
	mkdir -p -m755 $(PKGDIR)-officebean/$(OODIR)/program
	mkdir -p -m755 $(PKGDIR)-officebean/usr/share/java
	mv $(PKGDIR)-core/usr/share/java/openoffice$(VER) \
		$(PKGDIR)-officebean/usr/share/java
	rm -rf $(PKGDIR)-core/usr/share/java
	mv $(PKGDIR)-core/$(OODIR)/program/libofficebean.so \
		$(PKGDIR)-officebean/$(OODIR)/program
endif

	mkdir -p -m755 $(PKGDIR)-base/usr/share/applications \
	               $(PKGDIR)-core/usr/share/applications

ifeq "$(PACKAGE_QA_TOOLS)" "y"
	mkdir -p -m755 $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/ootestapi $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/ootesttool $(PKGDIR)-qa-tools/usr/bin
	install -m755 $(SOURCE_TREE)/oosmoketest $(PKGDIR)-qa-tools/usr/bin

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/program
	for f in testtool.bin libcommuni* libsimplecm*; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$f $(PKGDIR)-qa-tools/$(OODIR)/program; \
	done

	mkdir -p -m755 $(PKGDIR)-qa-tools/usr/share/java/openoffice$(VER)
	cp $(SOURCE_TREE)/qadevOOo/unx*.pro/class/OOoRunnerLight.jar \
		$(PKGDIR)-qa-tools/usr/share/java/openoffice$(VER)

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/smoketest
	install -m755 $(SOURCE_TREE)/smoketestoo_native/smoketest.pl \
		$(SOURCE_TREE)/smoketestoo_native/testlog.pl \
		$(PKGDIR)-qa-tools/$(OODIR)/smoketest

	mkdir -p -m755 $(PKGDIR)-qa-tools/$(OODIR)/presets/basic/Standard
	install -m644 $(SOURCE_TREE)/smoketestoo_native/data/scripts/*.x* \
		$(PKGDIR)-qa-tools/$(OODIR)/presets/basic/Standard

	# install QA docs (-core docdir)
	mkdir -p -m755 $(PKGDIR)-qa-tools/usr/share/doc/openoffice.org$(VER)-core
	install -m644 debian/README.qa \
		$(PKGDIR)-qa-tools/usr/share/doc/openoffice.org$(VER)-core
else
	rm -f $(PKGDIR)-core/$(OODIR)/program/testtool.bin
	rm -f $(PKGDIR)-core/$(OODIR)/program/libcommuni*
	rm -f $(PKGDIR)-core/$(OODIR)/program/libsimplecm*
endif

ifeq (0,1)
	# disabled, menu files from sysui
	dirname="`cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare >/dev/null; pwd`" ;\
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
		sed -e 's,Exec=openoffice.org-2.0 \(.*\) %U,Exec=ooffice$(VER) \1 %U,' \
		    -e "s,Icon=openofficeorg-20-$$p,Icon=ooo-$$p," \
			-e 's,Name=OpenOffice.org 2.0,Name=OpenOffice.org $(VER),' \
			-e 's/  / /' \
		   < $$dirname/$$p.desktop \
		   > $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop || exit 1 ;\
		case "$$p" in *math*|*draw*) \
		    echo 'NoDisplay=true' >> $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop; \
		esac; \
	done
else
	# menu files from ooo-build/desktop
	for p in writer calc impress draw math base; do \
		mkdir -p -m755 $(PKGDIR)-$$p/usr/share/applications ;\
		sed -e '/^TryExec=.*/d' \
		    -e "s,^Exec=.*,Exec=ooffice$(VER) -$$p %U," \
		    -e "s,^Icon=.*,Icon=ooo-$$p," \
		    -e '/^Name=/s,  , ,' \
		    -e 's/@STARTUPNOTIFY@/true/' \
		    -e '/^Categories/s/Office/Application;Office/' \
			ooo-build/desktop/$$p.desktop \
			> $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop || exit 1 ;\
		case "$$p" in *math*|*draw*) \
		    echo 'NoDisplay=true' >> $(PKGDIR)-$$p/usr/share/applications/ooo$(VER)-$$p.desktop; \
		esac; \
	done
endif
	for f in `find debian -name '*.desktop'`; do \
		sed -i -e '/^Comment\[de\]/s/- *\([a-zA-Z0-9]*\) *macht.*glich.*$$/mit \1/' $$f; \
		echo 'X-KDE-Protocols=file,http,smb,ftp,webdav' >> $$f; \
	done
	sed -i -e '/^MimeType/s,text/rtf,text/rtf;application/rtf,' \
		$(PKGDIR)-writer/usr/share/applications/ooo$(VER)-writer.desktop
#	sed -i -e 's/Office;/Office;Graphics;/' $(PKGDIR)-draw/usr/share/applications/ooo$(VER)-draw.desktop
	#mv $(PKGDIR)-base/usr/share/applications/ooo$(VER)-base.desktop $(PKGDIR)-core/usr/share/applications
	#rm -r $(PKGDIR)-base

	# compress manpages
	for i in calc math draw writer impress base; do \
		find $(PKGDIR)-$$i -type f -name "*.1" | xargs gzip -9; \
	done
	# fix manpage symlinks
	for i in writer calc draw impress base math; do \
		echo $(PACKAGES) | grep -q openoffice.org$(VER)-$$i || continue; \
		mkdir -p $(CURDIR)/$(PKGDIR)-$$i/usr/share/man/man1; \
		if [ "$$i" = "writer" ]; then \
			for j in writer html web; do \
				cd $(CURDIR)/$(PKGDIR)-$$i/usr/share/man/man1 && \
					ln -sf openoffice$(VER).1.gz oo$${j}$(VER).1.gz; \
			done; \
		else \
			cd $(CURDIR)/$(PKGDIR)-$$i/usr/share/man/man1 && \
				ln -sf openoffice$(VER).1.gz oo$${i}$(VER).1.gz; \
		fi; \
	done

ifeq "$(BUILD_PYUNO)" "y"
	# PyUNO packging
	rm -rf debian/python-uno debian/python-uno.*.debhelper
	cp -r --preserve=mode debian/tmp/pkg/python-uno debian/python-uno
	
	install -d $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/uno.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/unohelper.py $(PYTHON_SITE)
	mv debian/python-uno/$(OODIR)/program/pyuno.so $(PYTHON_SITE)
	touch debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u+w debian/python-uno/$(OODIR)/program/pythonloader.unorc
	( echo '[Bootstrap]'; \
	  echo 'PYTHONHOME=file:///usr/lib/python$(PYMAJOR).$(PYMINOR)' ;\
	  echo 'PYTHONPATH=$$PYTHONHOME $$PYTHONHOME/site-packages $$PYTHONHOME/lib-dynload $$PYTHONHOME/lib-tk $$ORIGIN' \
	) > debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod u-w debian/python-uno/$(OODIR)/program/pythonloader.unorc
	chmod 755 debian/python-uno/$(OODIR)/program/mailmerge.py
	perl -pi -e 's,/bin,/usr/bin,' \
		 debian/python-uno/$(OODIR)/program/mailmerge.py

	mkdir -p debian/python-uno/usr/share/doc/python-uno
	for i in doc demo; do \
		cp -r $(SOURCE_TREE)/pyuno/$$i \
		  debian/python-uno/usr/share/doc/python-uno; \
	done
	cd debian/python-uno/usr/share/doc/python-uno && \
		find . -type d -name "CVS" | xargs -r rm -rf
endif

ifeq "$(ENABLE_MONO)" "y"
	# Mono bindings
	mkdir -p -m755 debian/libuno-cil/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/libcli* \
		debian/libuno-cil/$(OODIR)/program
	mv $(PKGDIR)-core/$(OODIR)/program/cli_*.dll \
		debian/libuno-cil/$(OODIR)/program
endif

ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# when we use external stlport, we just can and should do a symlink
	# for the SDK includes
	cd $(PKGDIR)-dev/usr/include/openoffice$(VER) && \
		rm -rf stl && ln -s /usr/include/stlport stl
endif
ifeq "$(ENABLE_JAVA)" "y"
	# move SDK Java stuff into /usr/share/java/openoffice
	rm -f $(PKGDIR)-dev/$(OODIR)/sdk/classes
	mkdir -p $(PKGDIR)-dev/usr/share/java/openoffice$(VER)
	mkdir -p $(PKGDIR)-dev/$(OODIR)/sdk/classes
	mv $(PKGDIR)-dev/usr/share/openoffice/sdk/classes/com \
		$(PKGDIR)-dev/usr/share/java/openoffice && \
	cd $(PKGDIR)-dev/$(OODIR)/sdk/classes && \
		ln -s /usr/share/java/openoffice/com com
	rm -rf $(PKGDIR)-dev/usr/share/openoffice/sdk
endif
	chmod 644 $(PKGDIR)-dev/$(OODIR)/sdk/configure.pl
	for i in csh csh.in; do \
		perl -pi -e 's,/usr/bin/csh,/bin/csh,'\
			$(PKGDIR)-dev/$(OODIR)/sdk/setsdkenv_unix.$$i; \
	done
	# create wrapper scripts
	cd $(PKGDIR)-dev/$(OODIR)/sdk/$(OS)/bin && \
	for i in *; do \
		mv $$i $$i.bin && \
		( \
		  echo "#!/bin/sh"; \
		  echo "# wrapper script for OOos SDK programs"; \
		  echo ""; \
		  echo 'LD_LIBRARY_PATH=/$(OODIR)/program /$(OODIR)/sdk/$(OS)/bin/`basename $$0`.bin $$@'; \
		) > $$i; \
		chmod 755 $$i; \
	done		
        # remove symlink, it should be in -dev-doc
	cd $(PKGDIR)-dev/$(OODIR)/sdk && \
		rm docs

	# install gsicheck into -dev
	install -m755 $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD/$$OUTPATH$$PROEXT)/bin/gsicheck \
		$(PKGDIR)-dev/$(OODIR)/program/gsicheck.bin
	( \
	  echo '#! /bin/sh'; \
	  echo 'LD_LIBRARY_PATH=$${LD_LIBRARY_PATH:+$$LD_LIBRARY_PATH:}/$(OODIR)/program'; \
	  echo 'export LD_LIBRARY_PATH'; \
	  echo 'exec /$(OODIR)/program/gsicheck.bin "$$@"'; \
	) > $(PKGDIR)-dev/$(OODIR)/program/gsicheck
	chmod 755 $(PKGDIR)-dev/$(OODIR)/program/gsicheck

ifeq "$(ENABLE_JAVA)" "y-braindamage"
	# install unowinreg.dll
	install -m644 $(CURDIR)/$(SOURCE_TREE)/unowinreg.dll $(PKGDIR)-dev/usr/share/java/openoffice
endif

ifeq "$(INTERNAL_STDLIBS)" "y"
	# we have to do this manually; specifying --without-system-stdlibs
	# won't work because the odering of the configure arguments...
	LIBSTDCPP=`readlink `PATH=$(BUILD_PATH) g++ --print-file-name=libstdc++.so``; \
	LIBGCC=`readlink `PATH=$(BUILD_PATH) gcc --print-file-name=libgcc_s.so``; \
	LIBSTDCPP_SOVER=`echo $$LIBSTDCPP | sed -e 's/.*\.//'`; \
	LIBGCC_SOVER=`echo $$LIBGCC | sed -e 's/.*\.//'`; \
	cp $$LIBSTDCPP $(PKGDIR)-core/$(OODIR)/program; \
	cp $$LIBGCC $(PKGDIR)-core/$(OODIR)/program; \
	echo "libstdc++	$$LIBSTDCPP_SOVER" > debian/shlibs.override.stdlibs; \
	echo "libgcc_s	$$LIBGCC_SOVER" >> debian/shlibs.override.stdlibs
endif
ifeq "$(USE_SYSTEM_STLPORT)" "y"
	# remove a eventually sneaked-in stlport...
	rm -f $(PKGDIR)-core/$(OODIR)/program/libstlport*
endif

ifeq "$(ENABLE_JAVA)" "y"
  ifeq "$(BUILD_JARS_NATIVE)" "y"
	rm -rf $(PKGDIR)-gcj
	mkdir -p $(PKGDIR)-gcj//usr/lib/gcj-$(GCJ_VERSIONi
  ifeq "$(REBUILD_JARS_NATIVE)" "y"
	# recompile the jar; the preferred way is to produce the binaries from
	# the bytecode.
	mkdir -p $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)
	for jar in debian/tmp/pkg/openoffice.org-common/usr/lib/openoffice/program/classes/*.jar $(PKGDIR)-common/$(OODIR)/program/classes/*.jar $(PKGDIR)-java-common/usr/share/java/openoffice/*.jar; \
	do \
	  [ -h "$$jar" -o ! -f "$$jar" ] && continue; \
	  debian/scripts/aot-compile $$jar $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/$$(basename $$jar).so || exit $$?; \
	done
  else
	cp $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/lib/*.jar.so \
		$(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION
	# remove not needed ones
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/FCFGMerge.jar.so
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/unoloader.jar.so
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/schema.jar.so
	# NetBeans crap
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/jhall.jar.so
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/nbantext.jar.so
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/openide.jar.so
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/jarpackager.jar.so
	# not needed yet
	rm -f $(PKGDIR)-gcj/usr/lib/gcj-$(GCJ_VERSION)/javacanvas.uno.jar.so
  endif
	# create gcj classmap
	mkdir -p $(PKGDIR)-gcj/usr/share/gcj-$(GCJ_VERSION)/classmap.d
	cd debian/tmp/pkg/openoffice.org-common/$(OODIR)/program/classes && \
	for i in `find . -type f -name "*.jar" | sed -e s,./,,g`; do \
	  $(JAVA_HOME)/bin/gcj-dbtool -f $(CURDIR)/$(PKGDIR)-gcj/usr/share/gcj-$(GCJ_VERSION)/classmap.d/openoffice.org$(VER)-gcj.db $$i /usr/lib/gcj-$(GCJ_VERSION)/$$i.so; \
	done
  endif
endif

	# install some docs (docdir of the -core package).
	mkdir -p $(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-core
	cp ooo-build/doc/using-mysql-databases.txt \
		$(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-core
	cp ooo-build/doc/data-from-remote-mysql-server.txt \
		$(PKGDIR)-base/usr/share/doc/openoffice.org$(VER)-core

	# README symlinks from -core -> -common
	mkdir -p $(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core
	ln -sf ../openoffice.org$(VER)-common/README.gz \
		$(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core/README.gz
	ln -sf ../openoffice.org$(VER)-common/README.html \
		$(PKGDIR)-core/usr/share/doc/openoffice.org$(VER)-core/README.html

ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	# install libmythes and th_gen_idx.pl (on archs where we build OOo)
	rm -rf debian/libmythes-dev
	mkdir -p debian/libmythes-dev/usr/lib
	mkdir -p debian/libmythes-dev/usr/include
	mkdir -p debian/libmythes-dev/usr/share/mythes
	install -m644 \
		$(SOURCE_TREE)/lingucomponent/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/lib/libmythes.a \
		debian/libmythes-dev/usr/lib/libmythes_pic.a
	install -m644 \
		$(SOURCE_TREE)/libmythes_nopic.a \
		debian/libmythes-dev/usr/lib/libmythes.a
	install -m644 $(SOURCE_TREE)/lingucomponent/source/thesaurus/mythes/mythes.hxx \
		debian/libmythes-dev/usr/include
	install -m755 $(SOURCE_TREE)/dictionaries/util/th_gen_idx.pl \
		debian/libmythes-dev/usr/share/mythes/th_gen_idx.pl
endif

ifeq "$(ENABLE_JAVA)" "y"
	# install the UNO Java sources for e.g. eclipse
	mkdir -p $(CURDIR)/$(PKGDIR)-dev/usr/share/java/openoffice$(VER)
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin && \
		for i in juh jurt jut ridl unoloader; do \
			cp $${i}_src.zip \
			  $(CURDIR)/$(PKGDIR)-dev/usr/share/java/openoffice; \
		done
endif

ifeq "$(ENABLE_JAVA)" "y"
	# hrmpf, again something like that, we really need to find the root cause for that
	ln -s libjava_uno.so \
		$(PKGDIR)-base/$(OODIR)/program/libjava_uno
endif

	# move libflash and libsvgfilter to -draw; they only are export
	# filters only used in draw and impress (and impress depends on
	# draw anyway)
	for i in libflash libsvgfilter; do \
		mv $(PKGDIR)-core/$(OODIR)/program/$$i* \
			$(PKGDIR)-draw/$(OODIR)/program; \
	done

ifeq "$(ARCH)" "amd64"
  ifeq "$(AMD64_EXPERIMENTAL)" "y"
	set -e; set -x; \
	pc=openoffice.org$(VER)-core; \
	pce=$$pc-experimental; \
	for p in $(filter-out openoffice.org$(VER), $(PKGS_AMD64_NOEXP)); do \
	  pe=$$p-experimental; \
	  if [ -d debian/$$pe ]; then \
	    if [ -d debian/$$pe.saved ]; then \
	      echo "Found debian/$$pe, removing ..."; \
	      rm -rf debian/$$pe.saved; \
	    fi; \
	    mv debian/$$pe debian/$$pe.saved; \
	  fi; \
	  echo "Moving debian/$$p to debian/$$pe"; \
	  mv debian/$$p debian/$$pe; \
	  if [ -e debian/$$pe/usr/share/doc/$$p ]; then \
	    if [ -e debian/$$pe/usr/share/doc/$$pe ]; then \
	      echo "Already exists, removing: debian/$$pe/usr/share/doc/$$pe"; \
	      rm -rf debian/$$pe/usr/share/doc/$$pe; \
	    fi; \
	    mv debian/$$pe/usr/share/doc/$$p debian/$$pe/usr/share/doc/$$pe; \
	  fi; \
	  if [ -e debian/$$pe/usr/share/doc/$$pc ]; then \
	    if [ -e debian/$$pe/usr/share/doc/$$pce ]; then \
	      echo "Already exists, removing: debian/$$pe/usr/share/doc/$$pce"; \
	      rm -rf debian/$$pe/usr/share/doc/$$pce; \
	    fi; \
	    mv debian/$$pe/usr/share/doc/$$pc debian/$$pe/usr/share/doc/$$pce; \
	  fi; \
	done

#	  for i in debian/$$p.*; do \
#	    cp -p $$i $$i-experimental; \
#	  done; \

  endif
endif

	touch $@

# Install files generated by setup into arch-independent package directories
install-indep: $(STAMP_DIR)/install-indep
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER)-mimelnk.install 
#$(STAMP_DIR)/install-indep: debian/openoffice.org$(VER).dirs
$(STAMP_DIR)/install-indep: $(STAMP_DIR)/install
$(STAMP_DIR)/install-indep: ooo-build/fonts/opens___.ttf
	dh_testdir
	dh_testroot
	find debian/tmp ! -perm -200 | xargs -r chmod u+w

	# Copy files placed by ooo-build/bin/package-ooo/install
	rm -rf $(PKGDIR)-common $(PKGDIR)-common.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-common $(PKGDIR)-common || exit 1
	rm -rf $(PKGDIR)-dev-doc $(PKGDIR)-dev-doc.*.debhelper; \
	cp -r --preserve=mode debian/tmp/pkg/openoffice.org-dev-doc $(PKGDIR)-dev-doc || exit 1

	# Remove files in langpack
	for dir in program/resource share/registry/res/en-US; do \
	  rm -rf $(PKGDIR)-common/usr/lib/openoffice$(VER)/$$dir ;\
	done

	dh_installdirs -i

	# Extract and install icons
	cd $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/bin/desktop-integration && dpkg --extract openoffice.org-debian-menus_*_all.deb . && cd usr/share/icons; \
	for d in `find -type d`; do \
	  install -d -m755 $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$d || exit 1 ;\
	done &&\
	for f in `find -type f`; do \
	  install -m644 $$f $(CURDIR)/$(PKGDIR)-common/usr/share/icons/$$f || exit 1 ;\
	done && cd ../../.. && rm -rf usr etc

	# install .applications, .keys and .mime
	mkdir -p $(PKGDIR)-common/usr/share/application-registry && \
	install -m644 $(SOURCE_TREE)/sysui/desktop/mimetypes/openoffice.applications \
		$(PKGDIR)-common/usr/share/application-registry
	mkdir -p $(PKGDIR)-common/usr/share/mime/packages && \
	mkdir -p $(PKGDIR)-common/usr/share/mime-info && \
	install -m644 $(SOURCE_TREE)/sysui/desktop/mimetypes/openoffice.mime \
		$(PKGDIR)-common/usr/share/mime-info && \
	rm -f $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	for i in $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/debian/*.keys; do \
		cat $$i >> $(PKGDIR)-common/usr/share/mime-info/openoffice.keys; \
	done
#	install -m644 $(SOURCE_TREE)/sysui/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT)/misc/desktopshare/openoffice.org.xml \
#		$(PKGDIR)-common/usr/share/mime/packages

	mkdir -p $(PKGDIR)-common/usr/share/applications
	sed 's/@VER@/$(VER)/g' debian/template.desktop.in \
		> $(PKGDIR)-common/usr/share/applications/template.desktop

	# install openoffice-xlate-lang
	install -d -m755 $(PKGDIR)-common/usr/share/openoffice$(VER)/bin
	install -m755 ooo-build/bin/openoffice-xlate-lang \
		$(PKGDIR)-common/usr/share/openoffice$(VER)/bin

	# compress manpages
	find $(PKGDIR)-common -type f -name "*.1" | xargs gzip -9
	mkdir -p $(PKGDIR)-common/usr/share/man/man1
	ln -sf openoffice$(VER).1.gz $(PKGDIR)-common/usr/share/man/man1/ooffice$(VER).1.gz
	ln -sf openoffice$(VER).1.gz $(PKGDIR)-common/usr/share/man/man1/ooo-wrapper$(VER).1.gz
	ln -sf openoffice$(VER).1.gz $(PKGDIR)-common/usr/share/man/man1/oofromtemplate$(VER).1.gz

ifeq "$(HELPISOS)" ""
	# when we don't build helpcontent2 here we are missing helpxsl.zip so
	# this file doesn't get installed either. Do it manually..
	mkdir -p -m755 $(PKGDIR)-common/$(OODIR)/help && \
	cp $(SOURCE_TREE)/helpcontent2/source/auxiliary/main_transform.xsl \
		$(PKGDIR)-common/$(OODIR)/help
endif

	# fix shebang
	perl -pi -e 's,/bin/awk,/usr/bin/awk,'\
		$(PKGDIR)-common/$(OODIR)/program/uri-encode

	chmod 644 $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs/images/bg_table2.gif
	chmod 644 $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs/images/bg_table3.gif
	chmod 644 $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/DevelopersGuide/ScriptingFramework/ScriptSelector/build.xml
	chmod 644 $(PKGDIR)-dev-doc/$(OODIR)/sdk/examples/DevelopersGuide/ScriptingFramework/SayHello/build.xml
	rm -f $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc/LICENSE

	# replace href's to the non-free DevelopersGuide with links to the
	# online docs
	find $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev/docs -name '*.html' \
	  | xargs sed -ri 's,href="[^"]*DevelopersGuide/([^"]*\.(xhtml|pdf)[^"]*)".*,href="http://api.openoffice.org/docs/DevelopersGuide/\1,g'

ifeq "$(ENABLE_JAVA)" "y"
	rm -rf $(PKGDIR)-java-common
	# move common Java stuff to -java-common
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/program
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/share/Scripts
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter
	mkdir -p $(PKGDIR)-java-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types
	mv $(PKGDIR)-common/$(OODIR)/program/JREProperties.class \
		$(PKGDIR)-java-common/$(OODIR)/program
	mv $(PKGDIR)-common/$(OODIR)/share/Scripts/java \
		$(PKGDIR)-java-common/$(OODIR)/share/Scripts
	for i in palm pocketexcel pocketword; do \
	  mv $(PKGDIR)-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter/fcfg_$${i}_filters.xcu \
	    $(PKGDIR)-java-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Filter; \
	  mv $(PKGDIR)-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types/fcfg_$${i}_types.xcu \
	    $(PKGDIR)-java-common/$(OODIR)/share/registry/modules/org/openoffice/TypeDetection/Types; \
	done
	mkdir -p $(PKGDIR)-java-common/usr/share/java/openoffice$(VER)
	mv $(PKGDIR)-common/$(OODIR)/program/classes/* \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)
	rm -rf $(PKGDIR)-common/$(OODIR)/program/classes
	ln -s /usr/share/java/openoffice$(VER) \
		$(PKGDIR)-java-common/$(OODIR)/program/classes
	cd $(PKGDIR)-common/$(OODIR)/program && \
	  for i in jvmfwk3rc setuprc unorc; do \
	    perl -pi -e \
	      's,\$$ORIGIN/classes,file:///usr/share/java/openoffice$(VER),g' \
		$$i; \
	  done
endif

	# fix permissions
	for i in editpic poll savepic show webcast; do \
		chmod 755 $(PKGDIR)-common/$(OODIR)/share/config/webcast/$$i.pl; \
	done

	# fix permission
	chmod 644 $(PKGDIR)-common/$(OODIR)/program/hid.lst

	rm -f $(PKGDIR)-common/$(OODIR)/LICENSE

	# move uno_packages/cache to /var and create symlink for for
	# documentation referencing it...
	rm -rf $(PKGDIR)-common/$(OODIR)/share/uno_packages/cache
	mkdir -p $(PKGDIR)-common/var/spool/openoffice$(VER)/uno_packages/cache
	ln -s /var/spool/openoffice$(VER)/uno_packages/cache \
		$(PKGDIR)-common/$(OODIR)/share/uno_packages/cache
	perl -pi -e \
	      's,\$$UNO_SHARED_PACKAGES/cache,file:///var/spool/openoffice$(VER)/uno_packages/cache,g' \
		$(PKGDIR)-common/$(OODIR)/program/unorc

	# install DicOOo and FontOOo; we need to do this manually; the
	# dictionaries/ module isn't built with --without-myspell-dicts
	# and those two somehow (why?) are in there...
	mkdir -p $(PKGDIR)-common/usr/share/myspell/dicts
	install -m644 $(SOURCE_TREE)/dictionaries/diclst/DicOOo.sxw \
		$(PKGDIR)-common/usr/share/myspell/dicts
	#install -m644 $(SOURCE_TREE)/dictionaries/diclst/FontOOo.sxw \
	#	$(PKGDIR)-common/usr/share/myspell/dicts

ifeq "$(PACKAGE_TTF_OPENSYMBOL)" "y"
	mkdir -p debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
	rm -f $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf
	install -m644 ooo-build/fonts/opens___.ttf \
		debian/ttf-opensymbol/usr/share/fonts/truetype/openoffice
else
	rm -f $(PKGDIR)-common/$(OODIR)/share/fonts/truetype/opens___.ttf
endif

	# dictionary symlink
	rm -rf $(PKGDIR)-common/$(OODIR)/share/dict/ooo
	ln -s /usr/share/myspell/dicts \
		$(PKGDIR)-common/$(OODIR)/share/dict/ooo
	mkdir -p $(PKGDIR)-common/usr/share/myspell/dicts
	ln -s /etc/openoffice/dictionary.lst \
		$(PKGDIR)-common/usr/share/myspell/dicts/dictionary.lst

	# convert icons to xpm; we need them for the Debian menu policy...
	cd $(PKGDIR)-common/usr/share/icons/gnome/32x32/apps && \
	  for x in *.png; do convert $$x `basename $$x .png`.xpm; done

ifeq "$(ENABLE_JAVA)" "y"
	# symlink jars we use externally
ifeq "$(SYSTEM_XT)" "y"
	ln -sf /usr/share/java/xt.jar \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/xt.jar
endif
ifeq "$(SYSTEM_XALAN)" "y"
	ln -sf /usr/share/java/xalan2.jar \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/xalan.jar
endif
ifeq "$(SYSTEM_XML_APIS)" "y"
	ln -sf /usr/share/java/jaxp-1.2.jar \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/xml-apis.jar
endif
ifeq "$(SYSTEM_XERCES)" "y"
	ln -sf /usr/share/java/xercesImpl.jar \
		$(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/xercesImpl.jar
endif
ifeq "$(USE_SYSTEM_BSH)" "y"
	ln -sf /usr/share/java/bsh.jar \
	        $(PKGDIR)-java-common/usr/share/java/openoffice$(VER)/bsh.jar
endif
endif
	# remove extra license files
	rm -rf $(PKGDIR)-commmon/$(OODIR)/licenses
	rm -rf $(PKGDIR)-common/$(OODIR)/share/readme/LICENSE*
	rm -f $(PKGDIR)-common/$(OODIR)/THIRDPARTYLICENSEREADME.html
	rm -f $(PKGDIR)-common/$(OODIR)/LICENSE.html

	# remove extra readme files
	rm -rf $(PKGDIR)-common/$(OODIR)/readmes
	rm -rf $(PKGDIR)-common/$(OODIR)/share/readme/README*

	# install Ximian desktop icons
	mkdir -p $(PKGDIR)-common/usr/share/icons/hicolor/48x48/apps
	cp ooo-build/desktop/*.png \
		$(PKGDIR)-common/usr/share/icons/hicolor/48x48/apps

	# add MySQL, MaxDB and PostgreSQL JDBC drivers to OOos CLASSPATH
	TMP=`mktemp -q`; \
	sed -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/mysql.jar|' \
	    -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/sapdbc.jar|' \
	    -e 's|\(UNO_JAVA_JFW_CLASSPATH_URLS=.*\)|\1 file:///usr/share/java/postgresql.jar|' < $(PKGDIR)-common/$(OODIR)/program/jvmfwk3rc > $$TMP && \
	mv $$TMP $(PKGDIR)-common/$(OODIR)/program/jvmfwk3rc

	# move psprint.conf into /etc
	mkdir -p $(PKGDIR)-common/etc/openoffice$(VER)
	mv $(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf \
		$(PKGDIR)-common/etc/openoffice$(VER)
	ln -s /etc/openoffice$(VER)/psprint.conf \
		$(PKGDIR)-common/$(OODIR)/share/psprint/psprint.conf

	# prepare a fake sofficerc in the place where OOo expects it
	# which does nothing except reference the "normal" one
	# which we put into /etc
	mv $(PKGDIR)-common/$(OODIR)/program/sofficerc \
		$(PKGDIR)-common/etc/openoffice$(VER)/sofficerc
	( \
	  echo "# *DO NOT* CHANGE THIS FILE. IT ONLY TAKES THE SETTINGS FROM"; \
	  echo "# /etc/openoffice$(VER)/sofficerc. CHANGE THAT FILE IF YOU"; \
	  echo "# REALLY WANT TO CHANGE SOMETHING."; \
	  echo "FHS_CONFIG_FILE=file:///etc/openoffice$(VER)/sofficerc"; \
	  echo "" >> $(PKGDIR)-common/$(OODIR)/program/sofficerc; \
	) > $(PKGDIR)-common/$(OODIR)/program/sofficerc	
	cat $(PKGDIR)-common/etc/openoffice$(VER)/sofficerc \
		| perl -p -e 's/(.*)=(.*)/$$1=\$${\$$FHS_CONFIG_FILE:Bootstrap:$$1}/' \
		>> $(PKGDIR)-common/$(OODIR)/program/sofficerc

ifeq "$(HELPISOS)" ""
	# the helpimgs are not included when we don't build with help here.
	# Add them now because openoffice.org-help-* packaged in contrib or so
	# will need them
	set -e; \
	for z in images.zip images_industrial.zip images_crystal.zip images_hicontrast.zip; do \
		echo "repackaging $$z..."; \
		rm -rf $$z; mkdir $$z; \
		cd $$z; \
		unzip -q $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		cp -r $(CURDIR)/$(SOURCE_TREE)/default_images/res/helpimg res && \
		chmod +w $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z && \
		zip -q -r $(CURDIR)/$(PKGDIR)-common/$(OODIR)/share/config/$$z *; \
		cd ..; \
		rm -rf $$z; \
	done
endif

	cp debian/catalog.xml $(PKGDIR)-common/$(OODIR)/share/dtd/officedocument/1_0

ifeq "$(PACKAGE_QA_TOOLS)" "y"
	mkdir -p -m755 $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests/java
	for d in objdsc testdocs; do \
		cp -r $(SOURCE_TREE)/qadevOOo/$$d $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/$$d; \
	done

	cp -r $(SOURCE_TREE)/qadevOOo/tests/basic $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests; \
	for d in mod ifc; do \
		cp -r $(SOURCE_TREE)/qadevOOo/unx*.pro/class/$$d $(PKGDIR)-qa-api-tests/$(OODIR)/qadevOOo/tests/java; \
	done

	find $(PKGDIR)-qa-api-tests -type d -name "CVS" | xargs rm -rf
	find $(PKGDIR)-qa-api-tests -type f | xargs chmod 0644

	echo "TestBase=java_fat" > $(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/java.props
	echo "TestBase=java_complex" > $(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/complex.props
	echo "TestBase=basic_fat" > $(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/basic.props

	echo "BASICBRIDGE=/$(OODIR)/qadevOOo/testdocs/BasicBridge.sxw" >> \
		$(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/basic.props
	echo "BASICRESPTH=/$(OODIR)/qadevOOo/tests/basic" >> \
		$(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/basic.props

	for i in java complex basic; do \
		echo "DescriptionPath=/$(OODIR)/qadevOOo/objdsc" >> \
			$(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/$$i.props; \
		echo "TestDocumentPath=/$(OODIR)/qadevOOo/testdocs" >> \
			$(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/$$i.props; \
		echo "AppExecutionCommand=/$(OODIR)/program/soffice" \
			"-norestore -nocrashreport -accept=socket,host=localhost,port=8100;urp;" >> \
			$(PKGDIR)-qa-api-tests/usr/lib/openoffice/qadevOOo/$$i.props; \
	done
endif

	# move READMEs to /usr/share/doc/openoffice.org
	mkdir -p $(PKGDIR)-common/usr/share/doc/openoffice.org$(VER)-common
	for i in README README.html; do \
		mv $(PKGDIR)-common/$(OODIR)/$$i \
			$(PKGDIR)-common/usr/share/doc/openoffice.org$(VER)-common; \
	done

	# install Ubuntu templates
	mkdir -p $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt
	install -m644 ubuntu/*.otp $(PKGDIR)-common/$(OODIR)/share/template/en-US/presnt/

	# add "openoffice" symlink
	cd $(PKGDIR)-common/usr/bin && ln -s ooo-wrapper openoffice
	
	# we also need soffice, for UNO bootstrap :/
	cd $(PKGDIR)-common/usr/bin && ln -s ../../$(OODIR)/program/soffice soffice
	
	# add symlinks for docs and examples
	cd $(PKGDIR)-dev-doc/$(OODIR)/sdk && \
		rm -rf docs && \
		ln -sf /usr/share/doc/openoffice.org-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc && \
		ln -s /usr/share/doc/openoffice.org-dev/docs docs
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev-doc && \
		ln -s /$(OODIR)/sdk/examples examples
	cd $(PKGDIR)-dev-doc/usr/share/doc/openoffice.org-dev && \
		ln -s /$(OODIR)/sdk/examples examples

	touch $@

gsi-import:
ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
  ifneq "$(OOO_L10N_DIR)" ""
	set -e; \
	for i in $(OOO_L10N_DIR)/import/GSI*; do \
	  [ -r $$i ] || continue; \
	  lang=`basename $$i | sed 's,GSI_\(.*\)\.sdf.*,\1,'`; \
	  case "$$lang" in en-US|de) continue; esac; \
	  echo "updating GSI file for language $$lang ..."; \
	  case "$$i" in \
	  *.bz2) bzcat $$i > ooo-build/src/GSI_$$lang.sdf;; \
	  *.gz) zcat $$i > ooo-build/src/GSI_$$lang.sdf;; \
	  *.sdf) cp -p $$i ooo-build/src/GSI_$$lang.sdf;; \
	  *) echo "    unknown file: $$i"; \
	  esac; \
	  rm -f ooo-build/src/GSI_$$lang.sdf.bz2; \
	  bzip2 -9v ooo-build/src/GSI_$$lang.sdf; \
	  uuencode -m ooo-build/src/GSI_$$lang.sdf.bz2 GSI_$$lang.sdf.bz2 > ooo-build/src/GSI_$$lang.sdf.bz2.uu; \
	  rm ooo-build/src/GSI_$$lang.sdf.bz2; \
	done
  endif
else
	@echo "nothing to import, OOO_L10N_DIR is not set"
endif

GSI_LANGUAGES = $(LANGUAGES)
gsi-export: $(STAMP_DIR)/gsi-export
$(STAMP_DIR)/gsi-export:
	$(MAKE) -f debian/rules -j$(shell expr $(AVAIL_CPUS) + 1) $(STAMP_DIR)/gsi-export-parallel
	touch $@
$(STAMP_DIR)/gsi-export-parallel: $(STAMP_DIR)/build $(foreach lang,$(GSI_LANGUAGES),$(STAMP_DIR)/gsi-export-$(lang))
	touch $@
$(STAMP_DIR)/gsi-export-en-US:
	cd $(SOURCE_TREE); \
	  . Linux*Env.Set.sh; \
	  mkdir -p $(OOO_L10N_DIR)/export; \
	  echo exporting GSI file for pot file generation; \
	  echo localize -e -l en-US -f $(OOO_L10N_DIR)/export/GSI_en-US.sdf; \
	  localize -e -l en-US -f $(OOO_L10N_DIR)/export/GSI_en-US.sdf
	if [ -x /usr/bin/oo2po ]; then \
	  chmod +x debian/splitgsi; \
	  sh debian/convert2po en-US; \
	fi
	touch $@

$(STAMP_DIR)/gsi-export-%:
	cd $(SOURCE_TREE); \
	  . Linux*Env.Set.sh; \
	  mkdir -p $(OOO_L10N_DIR)/export; \
	  i=$*; \
	  if [ -f $(CURDIR)/ooo-build/src/GSI_$$i.sdf.bz2.uu ]; then \
	    echo using existing GSI file for language $$i; \
	    uudecode -o /dev/stdout $(CURDIR)/ooo-build/src/GSI_$$i.sdf.bz2.uu \
	      | bzcat - > $(OOO_L10N_DIR)/export/GSI_$$i.sdf; \
	  elif [ -f $(CURDIR)/ooo-build/src/GSI_$$i.sdf.gz.uu ]; then \
	    echo using existing GSI file for language $$i; \
	    uudecode -o /dev/stdout $(CURDIR)/ooo-build/src/GSI_$$i.sdf.gz.uu \
	      | zcat - > $(OOO_L10N_DIR)/export/GSI_$$i.sdf; \
	  else \
	    echo exporting GSI file for language $$i; \
	    echo localize -e -l en-US,$$i -f $(OOO_L10N_DIR)/export/GSI_$$i.sdf; \
	    localize -e -l en-US,$$i -f $(OOO_L10N_DIR)/export/GSI_$$i.sdf; \
	  fi
	case " $(REMOVE_HELP) " in *\ $*\ *) \
	  echo "Removing help ($*)"; \
	  grep -v '^helpcontent2' $(OOO_L10N_DIR)/export/GSI_$*.sdf \
		> $(OOO_L10N_DIR)/export/GSI_$*.sdf.tmp; \
	  debian/scripts/move-if-change $(OOO_L10N_DIR)/export/GSI_$*.sdf.tmp \
		$(OOO_L10N_DIR)/export/GSI_$*.sdf; \
	esac

	case " $(FILTER_HELP) " in *\ $*\ *) \
	  echo "Filtering untranslated messages from help ($*)"; \
	  python debian/gsifilter.py $(OOO_L10N_DIR)/export/GSI_$*.sdf; \
	  debian/scripts/move-if-change $(OOO_L10N_DIR)/export/GSI_$*.sdf.tmp \
		$(OOO_L10N_DIR)/export/GSI_$*.sdf; \
	esac

	if [ -x /usr/bin/oo2po ]; then \
	  chmod +x debian/splitgsi; \
	  sh debian/convert2po $*; \
	fi
	touch $@

# This single target is used to build all the packages, all at once, or
# one at a time. So keep in mind: any options passed to commands here will
# affect _all_ packages. Anything you want to only affect one package
# should be put in another target, such as the install target.
binary-common:
	dh_testdir
	dh_testroot

	for pkg in $(PACKAGES) ; do \
	  rm -f debian/$$pkg.*.debhelper;\
	  rm -rf debian/$$pkg/DEBIAN;\
	done

	dh_installdocs
ifeq "$(DIST)" "Debian"
	dh_installdocs -A debian/README.Debian \
		debian/tmp/pkg/openoffice.org-common/$(OODIR)/README
ifeq "$(PACKAGE_QA_TOOLS)" "y"
	dh_installdocs -popenoffice.org$(VER)-qa-tools debian/REAME.qa
endif
	dh_installman
	dh_installchangelogs -Nlibmythes-dev ooo-build/ChangeLog
ifneq "$(USE_EXTERNAL_MYTHES)" "y"
	dh_installchangelogs -plibmythes-dev -XNEWS
endif
endif
	dh_installman
	# fix manpage symlinks
	for i in writer calc draw impress base math; do \
		echo $(PACKAGES) | grep -q openoffice.org$(VER)-$$i || continue; \
		mkdir -p $(CURDIR)/$(PKGDIR)-$$i$(EXPSUFFIX)/usr/share/man/man1; \
		if [ "$$i" = "writer" ]; then \
			for j in writer html web; do \
				cd $(CURDIR)/$(PKGDIR)-$$i$(EXPSUFFIX)/usr/share/man/man1 && \
					ln -sf openoffice$(VER).1.gz oo$${j}$(VER).1.gz; \
			done; \
		else \
			cd $(CURDIR)/$(PKGDIR)-$$i$(EXPSUFFIX)/usr/share/man/man1 && \
				ln -sf openoffice$(VER).1.gz oo$${i}$(VER).1.gz; \
		fi; \
	done
	dh_installchangelogs
ifneq "" "$(findstring openoffice.org$(VER)-common$(EXPSUFFIX), $(PACKAGES))"
	mkdir -p $(PKGDIR)-common$(EXPSUFFIX)/usr/share/doc/openoffice.org$(VER)-common$(EXPSUFFIX)
	install -m644 debian/README.Debian \
	  $(PKGDIR)-common$(EXPSUFFIX)/usr/share/doc/openoffice.org$(VER)-common$(EXPSUFFIX)/
	install -m644 ooo-build/ChangeLog \
	  $(PKGDIR)-common$(EXPSUFFIX)/usr/share/doc/openoffice.org$(VER)-common$(EXPSUFFIX)/changelog.ooo-build
	gzip -f9 \
	  $(PKGDIR)-common$(EXPSUFFIX)/usr/share/doc/openoffice.org$(VER)-common$(EXPSUFFIX)/changelog.ooo-build
endif
ifneq "" "$(findstring openoffice.org$(VER)-core$(EXPSUFFIX), $(PACKAGES))"
	ln -sf ../openoffice.org$(VER)-common$(EXPSUFFIX)/changelog.ooo-build.gz \
	   $(PKGDIR)-core$(EXPSUFFIX)/usr/share/doc/openoffice.org$(VER)-core$(EXPSUFFIX)/changelog.ooo-build
endif
	dh_installdebconf
	dh_installmime
	dh_installmenu
ifeq "$(USE_PYCENTRAL)" "y"
	dh_pycentral
endif
	dh_python
	debian/scripts/installoverrides
	dh_link
	dh_fixperms
ifeq "$(BUILD_DBG_PACKAGE)" "y-xxxxx"
	dh_strip --dbg-package=openoffice.org$(VER)-dbg -Xunowinreg.dll
else
	dh_strip -Xunowinreg.dll
endif
ifeq "$(ENABLE_JAVA)" "y-xxxxx"
  ifneq (nostrip,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	i586-mingw32msvc-strip debian/openoffice.org-dev/usr/share/java/openoffice/unowinreg.dll
  endif
endif
	dh_desktop
	dh_iconcache
	dh_installxmlcatalogs
	dh_compress
	# when we have manpages (well, links..) with .gz.gz, fix them
	# FIXME: Find out the root cause for this...
	if find $(PKGDIR)-common -type l -name "*.gz.gz" 2>&1 >/dev/null; then \
		for i in `find $(PKGDIR)-common -type l -name "*.gz.gz"`; do \
			mv $$i `echo "$$i" | sed -e "s/\.gz$$//"`; \
		done; \
	fi
	# l10 & help packages (with docdir symlinks)
	for PKG in $(HELP_PACKAGES) $(LANG_PACKAGES); do \
	  case $$PKG in \
	    *l10n-en-us) target=openoffice.org$(VER)-common; continue;; \
	    *) target=openoffice.org$(VER)-l10n-common; \
	  esac; \
	  rm -rf debian/$$PKG/usr/share/doc/$$PKG; \
	  mkdir -p debian/$$PKG/usr/share/doc; \
	  ln -sf $$target debian/$$PKG/usr/share/doc/$$PKG; \
	  rm -f debian/$$PKG.p*; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/copyright; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/changelog.Debian*; \
	  sed "s/@PKGNAME@/$$PKG/g;s/@PKGTARGET@/$$target/g" \
	      debian/deppackage.postinst.in > debian/$$PKG.postinst; \
	done

	# arch dependent packages (with docdir symlinks)
	for s in '' -gtk -gnome -kde -evolution -math -base -calc -writer -draw -impress -gcj -dev -qa-tools -filter-so52 -officebean; do \
	  PKG=openoffice.org$(VER)$$s; \
	  echo " $(PACKAGES) " | fgrep -q " $$PKG " || continue; \
	  target=openoffice.org$(VER)-core; \
	  rm -rf debian/$$PKG/usr/share/doc/$$PKG; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/copyright; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/changelog.Debian*; \
	  mkdir -p debian/$$PKG/usr/share/doc; \
	  ln -sf $$target debian/$$PKG/usr/share/doc/$$PKG; \
	  sed "s/@PKGNAME@/$$PKG/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in >> debian/$$PKG.postinst; \
	done

	# indep packages (with docdir symlinks)
	for s in -dev-doc -gtk-gnome -java-common -qa-api-tests; do \
	  PKG=openoffice.org$(VER)$$s; \
	  echo " $(PACKAGES) " | fgrep -q " $$PKG " || continue; \
	  target=openoffice.org$(VER)-common; \
	  rm -rf debian/$$PKG/usr/share/doc/$$PKG; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/copyright; \
	  rm -f debian/$$PKG/usr/share/doc/$$target/changelog.Debian*; \
	  mkdir -p debian/$$PKG/usr/share/doc; \
	  ln -sf $$target debian/$$PKG/usr/share/doc/$$PKG; \
	  sed "s/@PKGNAME@/$$PKG/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in >> debian/$$PKG.postinst; \
	done

	# dependency packages (with docdir symlinks)
	for s in '' -gnome -kde -evolution -math -base -calc -writer -draw -impress; do \
	  PKG=openoffice.org2$$s; \
	  echo " $(PACKAGES) " | fgrep -q " $$PKG " || continue; \
	  target=openoffice.org$$s; \
	  rm -rf debian/$$PKG/usr/share/doc/$$PKG; \
	  mkdir -p debian/$$PKG/usr/share/doc; \
	  ln -sf $$target debian/$$PKG/usr/share/doc/$$PKG; \
	  sed "s/@PKGNAME@/$$PKG/g;s/@PKGTARGET@/$$target/g" \
	    debian/deppackage.postinst.in > debian/$$PKG.postinst; \
	done

	dh_makeshlibs -n -V
	dh_installdeb
ifeq "$(ARCH)" "i386"
	# this LD_ASSUME_KERNEL is for working around some bug which makes
	# dh_shlibddeps report/find nothing with libc6-i686/TLS systems
	-LD_LIBRARY_PATH="$(PKGDIR)-core/$(OODIR)/program" LD_ASSUME_KERNEL="2.4.27" dh_shlibdeps $(SHLIBS_OVERRIDE)
	# try again, without LD_ASSUME_KERNEL
	LD_LIBRARY_PATH="$(PKGDIR)-core/$(OODIR)/program" dh_shlibdeps $(SHLIBS_OVERRIDE)
	-for i in debian/*.substvars; do \
	  echo "===== $$i ====="; \
	  cat $$i; \
	done
else
	LD_LIBRARY_PATH="$(PKGDIR)-core/$(OODIR)/program" dh_shlibdeps $(SHLIBS_OVERRIDE)
endif
ifeq "$(ENABLE_MONO)" "y"
	dh_clideps
endif
# This switch to dh_shlibdeps reduces the 'libXXX not found' warnings but
# causes ldd crashes sometimes when used with fakeroot:
#          -l $(PKGDIR)-core/$(OPENOFFICEDIR)/program
	dh_gencontrol -- \
		-V'base-version=$(BASE_VERSION)' \
		-V'next-base-version=$(NEXT_BASE_VERSION)' \
		-V'dev-stl-depends=$(DEV_STL_DEPENDS)' \
		-V'writer-pyuno-dep=$(WRITER_PYUNO_DEP)' \
		-V'base-hsqldb-depends=$(BASE_HSQLDB_DEPENDS)' \
		-V'common-bsh-depends=$(COMMON_BSH_DEPENDS)' \
		-V'java-common-depends=$(JAVA_COMMON_DEPENDS)' \
		-V'java-common-java-depends=$(JAVA_COMMON_JAVA_DEPENDS)' \
		-V'mozilla-nss-depends=$(MOZILLA_NSS_DEPENDS)' \
		-V'Binary-Version=$(BINARY_VERSION)' \
		-V'ooo-filter52-dep=$(OOO_FILTER52_DEP)' \
		-v$(BINARY_VERSION)
	dh_md5sums
	dh_builddeb

# Build architecture independant packages using the common target.
binary-indep: $(GSI_EXPORT_STAMP) $(STAMP_DIR)/binary-indep
$(STAMP_DIR)/binary-indep: $(STAMP_DIR)/install-indep debian/control $(STAMP_DIR)/maintscripts $(STAMP_DIR)/langpacks $(STAMP_DIR)/helppacks
ifneq ($(ARCH),$(findstring $(ARCH),$(OOO_JAVA_ARCHS)))
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "For uploads with binary-all packages, please use arches where Java is enabled!!!!!"
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
endif
	$(MAKE) -f debian/rules DH_OPTIONS="$(DEBHELPER_OPTIONS) -i" binary-common

	touch $@

# Build architecture dependant packages using the common target.

ifeq "$(PKGSOURCE)" "openoffice.org$(VER)-l10n"
# Simplified packaging, langpacks only

binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch:
	: # nothing to do
	touch $@
else

binary-arch: $(STAMP_DIR)/binary-arch
$(STAMP_DIR)/binary-arch: $(STAMP_DIR)/install-arch debian/control $(STAMP_DIR)/maintscripts
	$(MAKE) -f debian/rules DH_OPTIONS="$(DEBHELPER_OPTIONS) -s" binary-common
ifeq "$(ARCH)" "amd64"
#  ifneq "$(AMD64_EXPERIMENTAL)" "y"
#	@echo "Didn't we mention, the packages are a bit experimental?"
#	exit 63
#  endif
endif
	touch $@

endif


# Any other binary targets build just one binary package at a time.
binary-%: $(STAMP_DIR)/install-indep $(STAMP_DIR)/install-arch $(STAMP_DIR)/langpacks $(STAMP_DIR)/maintscripts
	$(MAKE) -f debian/rules binary-common DH_OPTIONS="$(DEBHELPER_OPTIONS) -p$*"

binary: binary-arch binary-indep

# -------------------------------------------------------
# Miscellaneous targets used to do a few useful operations

# Use 'debian/rules environment' to help debug architecture-related problems
# with the rules file.
environment:

	@echo 'Package build environment (not all variables may be set):'
	@echo '$$(ARCH)' is "$(ARCH)"
	@echo '$$(DEB_HOST_ARCH)' is "$(DEB_HOST_ARCH)"
	@echo '$$(CURDIR)' is "$(CURDIR)"
	@echo '$$(SOURCE_VERSION)' is "$(SOURCE_VERSION)"
	@echo '$$(UPSTREAM_VERSION)' is "$(UPSTREAM_VERSION)"
	@echo '$$(MILESTONE)' is "$(MILESTONE)"
	@echo '$$(JDK_HOME)' is "$(JDK_HOME)"
	@echo '$$(SUNJDK_VER)' is "$(SUNJDK_VER)"
	@echo '$$(_CC)' is "$(_CC)"
	@echo '$$(CXX)' is "$(CXX)"
	@echo '$$(BUILDCMD)' is "$(BUILDCMD)"
	@echo '$$(CONFIGURE_FLAGS)' is "$(CONFIGURE_FLAGS)"
	@echo '$$(BUILDFLAGS)' is "$(BUILDFLAGS)"
	@echo '$$(DMAKEFLAGS)' is "$(DMAKEFLAGS)"
	@echo '$$(SHLIBS_OVERRIDE)' is "$(SHLIBS_OVERRIDE)"
	@echo '$$(BUILD_ALL_LANGPACKS)' is "$(BUILD_ALL_LANGPACKS)"
	@echo '$$(BUILDLANG),$$(BUILDLANG_PREFIX)' is "$(BUILDLANG),$(BUILDLANG_PREFIX)"
	@echo '$$(USE_INTERNAL_FREETYPE)' is "$(USE_INTERNAL_FREETYPE)"
	@echo '$$(DEBHELPER_OPTIONS)' is "$(DEBHELPER_OPTIONS)"
	@echo '$$(PYTHON_DEPENDS)' is "$(PYTHON_DEPENDS)"
	@echo 'See debian/control for build dependencies.'

# Get the ximian packaging directory from gnome anoncvs
get-ooo-build:
	# press enter at the password prompt
	cvs -d:pserver:anonymous@anoncvs3.gnome.org:/cvs/gnome login
	cvs -z3 -d:pserver:anonymous@anoncvs3.gnome.org:/cvs/gnome co -r ooo-build-2-0-3 ooo-build
	cd ooo-build && NOCONFIGURE=1 ./autogen.sh

# Download the latest ooo-build sources
download: ooo-build/config.status
	ooo-build/download	

# Update debian and ooo-build directories from version control
cvsupdate:
	cd debian && baz update
	cd ooo-build && cvs -z3 -q update -dP

# Take a tarfile of all the non-stripped binaries in solver, for generating backtraces
# from coredumps.
makebinariestar:
ifeq "$(ARCH)" "i386"
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/LSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
else
  ifeq "$(ARCH)" "arm"
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TRE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/LSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
  else
	cd $(SOURCE_TREE)/solver/$(shell . $(SOURCE_TREE)/*.sh; echo $$UPD)/$(shell . $(SOURCE_TREE)/*.sh; echo $$OUTPATH$$PROEXT) && \
	  find bin lib | xargs file | sed -n '/MSB \(executable\|shared object\),.* not stripped/ s/:.*$$//p' | \
	  tar -T - -jcvf $(CURDIR)/../openoffice.org$(VER)-binaries_$(SOURCE_VERSION)_$(ARCH).tar.bz2
  endif
endif
# -------------------------------------------------------

.PHONY: environment checksource control makebinariestar
.PHONY: clean-debdir clean-instsetoo clean-objectdirs clean default configure
.PHONY: build build-indep build-arch install-arch install-indep
.PHONY: $(stampdir_targets)
endif

# vim:set noet ai sts=8 sw=8 tw=0:
